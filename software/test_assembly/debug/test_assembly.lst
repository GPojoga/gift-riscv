
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/debug/test_assembly.elf:     file format elf32-littleriscv
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/debug/test_assembly.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00000d7c memsz 0x00000d7c flags rwx
    LOAD off    0x00005000 vaddr 0x80000000 paddr 0x20013dc8 align 2**12
         filesz 0x000004a0 memsz 0x000004a0 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000004a0 vaddr 0x800004a0 paddr 0x800004a0 align 2**12
         filesz 0x00000000 memsz 0x00000ca0 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00001d80 vaddr 0x20010d80 paddr 0x20010d80 align 2**12
         filesz 0x00003042 memsz 0x00003042 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002c4  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       00000008  200102c8  200102c8  000012c8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            00000056  200102d0  200102d0  000012d0  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000a54  20010328  20010328  00001328  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00003042  20010d80  20010d80  00001d80  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000004a0  80000000  20013dc8  00005000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000098  800004a0  800004a0  000054a0  2**3  ALLOC
  7 .stack            00000400  80000540  80000540  000054a0  2**4  ALLOC
  8 .heap             00000800  80000940  80000940  000054a0  2**3  ALLOC
  9 .riscv.attributes 0000002f  00000000  00000000  000054a0  2**0  CONTENTS, READONLY
 10 .comment          00000030  00000000  00000000  000054cf  2**0  CONTENTS, READONLY
 11 .debug_line       00006be8  00000000  00000000  000054ff  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_info       0001571a  00000000  00000000  0000c0e7  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev     000019bf  00000000  00000000  00021801  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges    00000730  00000000  00000000  000231c0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str        0000395f  00000000  00000000  000238f0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges     00000600  00000000  00000000  00027250  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame      00001dec  00000000  00000000  00027850  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102c8 l    d  .init_array	00000000 .init_array
200102d0 l    d  .ctors	00000000 .ctors
20010328 l    d  .rodata	00000000 .rodata
20010d80 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800004a0 l    d  .bss	00000000 .bss
80000540 l    d  .stack	00000000 .stack
80000940 l    d  .heap	00000000 .heap
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100c0 l     F .init	00000000 __metal_memory_scrub
2001012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010240 l       .init	00000000 _skip_init
20010328 l       .rodata	00000000 argv
2001032c l       .rodata	00000000 envp
20010330 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
200133d0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
200133ea l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20013404 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
2001341a l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2001342e l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20013440 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20013450 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20013466 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20013478 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
200104c8 l     O .rodata	00000880 pll_configs
2001348e l     F .text	0000004e get_pll_config_freq
200136e8 l     F .text	000000aa find_closest_config
20013792 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 riscv_clint0.c
200110b8 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
200110e2 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
2001110a l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20011146 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200112a6 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
200117e2 l     F .text	00000028 __metal_driver_cpu_hartid
2001180a l     F .text	0000002e __metal_driver_cpu_timebase
20011838 l     F .text	0000002e __metal_driver_cpu_interrupt_controller
20011866 l     F .text	00000028 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
200131e0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
200131fa l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20013210 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20013224 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
200132e0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
200132fa l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20013310 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20013324 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20013aa2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20013d00 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 /tmp/cccbQrgN.o
20010d92 l       .text	00000000 ELSE
20010d8c l       .text	00000000 THEN
20010d94 l       .text	00000000 DONE
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800004ac l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800004a4 l     O .bss	00000004 init_done.1
800004a8 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20013c80 l       .text	00000000 IRQ_0
20013c84 l       .text	00000000 IRQ_1
20013c88 l       .text	00000000 IRQ_2
20013c8c l       .text	00000000 IRQ_3
20013c90 l       .text	00000000 IRQ_4
20013c94 l       .text	00000000 IRQ_5
20013c98 l       .text	00000000 IRQ_6
20013c9c l       .text	00000000 IRQ_7
20013ca0 l       .text	00000000 IRQ_8
20013ca4 l       .text	00000000 IRQ_9
20013ca8 l       .text	00000000 IRQ_10
20013cac l       .text	00000000 IRQ_11
20013cb0 l       .text	00000000 IRQ_12
20013cb4 l       .text	00000000 IRQ_13
20013cb8 l       .text	00000000 IRQ_14
20013cbc l       .text	00000000 IRQ_15
20013cc0 l       .text	00000000 IRQ_LC0
20013cc4 l       .text	00000000 IRQ_LC1
20013cc8 l       .text	00000000 IRQ_LC2
20013ccc l       .text	00000000 IRQ_LC3
20013cd0 l       .text	00000000 IRQ_LC4
20013cd4 l       .text	00000000 IRQ_LC5
20013cd8 l       .text	00000000 IRQ_LC6
20013cdc l       .text	00000000 IRQ_LC7
20013ce0 l       .text	00000000 IRQ_LC8
20013ce4 l       .text	00000000 IRQ_LC9
20013ce8 l       .text	00000000 IRQ_LC10
20013cec l       .text	00000000 IRQ_LC11
20013cf0 l       .text	00000000 IRQ_LC12
20013cf4 l       .text	00000000 IRQ_LC13
20013cf8 l       .text	00000000 IRQ_LC14
20013cfc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102d0 l       .init_array	00000000 metal_constructors_end
200102d0 l       .init_array	00000000 __fini_array_end
200102d0 l       .init_array	00000000 metal_destructors_end
200102d0 l       .init_array	00000000 metal_destructors_start
200102d0 l       .init_array	00000000 __fini_array_start
200102c8 l       .init_array	00000000 __init_array_end
200102c8 l       .init_array	00000000 __preinit_array_end
200102c8 l       .init_array	00000000 __init_array_start
200102c8 l       .init_array	00000000 metal_constructors_start
200102c8 l       .init_array	00000000 __preinit_array_start
200120cc  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20013b5c g     F .text	00000026 metal_clock_get_rate_hz
20011482 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20012036  w    F .text	00000096 metal_lc3_interrupt_vector_handler
200128de g     F .text	00000058 __metal_valid_interrupt_id
200102cc g     O .init_array	00000004 _use_hfxosc_ptr
20012d56 g     F .text	0000001a __metal_driver_riscv_cpu_controller_get_vector_mode
80000c88 g       .data	00000000 __global_pointer$
20012b22 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
200102c8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
800004a0 g       .data	00000000 __tls_base
20013bf0 g     F .text	0000002e metal_cpu_get
2001033c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000538 g       .bss	00000000 metal_segment_bss_target_end
20011176 g     F .text	0000009a __metal_clint0_mtime_get
20013154 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20010142 g     F .init	0000000e __metal_synchronize_harts
800004a0 g       .data	00000000 metal_segment_bss_target_start
20011210 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
2001357c g     F .text	0000016c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
200123ba  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100cc  w    F .init	00000000 __metal_before_start
20011090  w    F .text	00000014 metal_init_run
20010484 g     O .rodata	00000044 __metal_driver_vtable_cpu
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20012ddc g     F .text	00000070 __metal_driver_cpu_mcycle_get
20010d48 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000494 g     O .data	00000008 __metal_dt_cpu_0
20012324  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20013942 g     F .text	00000160 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20012612  w    F .text	00000096 metal_lc13_interrupt_vector_handler
200119fc g     F .text	00000018 __metal_default_exception_handler
200117ae g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20012d70 g     F .text	00000050 __metal_driver_riscv_cpu_controller_set_vector_mode
2001188e g     F .text	00000030 __metal_driver_cpu_get
20010420 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
200118f0 g     F .text	00000018 __metal_interrupt_global_disable
2001228e  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20012450  w    F .text	00000096 metal_lc10_interrupt_vector_handler
200129f2 g     F .text	0000004e __metal_exception_register
20010fa0 g     F .text	00000078 metal_init
20012f6e g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20011aec g     F .text	00000068 __metal_default_sw_handler
8000006c g     O .data	0000000c __metal_dt_clock_2
20010d74 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20010d58 g     O .rodata	00000004 _global_impure_ptr
20011b54  w    F .text	00000092 metal_timer_interrupt_vector_handler
20010dfe g     F .text	0000005e __libc_init_array
200124e6  w    F .text	00000096 metal_lc11_interrupt_vector_handler
200133ae g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20012d02 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20013b1a g     F .text	00000042 _metal_clock_call_all_callbacks
200102a2 g     F .init	00000002 _init
20011952 g     F .text	0000001a __metal_interrupt_timer_disable
2001302c g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010dc8 g     F .text	00000036 __libc_fini_array
80000478 g     O .data	0000000c __metal_dt_clock_4
20011018 g     F .text	00000078 metal_fini
20012fb6 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200131c0 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
200119a4 g     F .text	0000002c __metal_interrupt_local_enable
2001177a g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20011be6 g     F .text	00000016 __metal_default_beu_handler
20011988 g     F .text	0000001c __metal_interrupt_external_disable
20012dc0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20012a40 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
2001310e g     F .text	00000046 __metal_driver_cpu_exception_register
20011908 g     F .text	00000018 __metal_interrupt_software_enable
20011f0a  w    F .text	00000096 metal_lc1_interrupt_vector_handler
800004a0 g     O .bss	00000004 _global_atexit
200127d4 g     F .text	00000058 __metal_controller_interrupt_vector_mode
20010ed8 g     F .text	000000c8 __call_exitprocs
80000940 g       .stack	00000000 _sp
20010150 g     F .init	00000000 _start
2001323a g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
200130ee g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20013182 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
2001196c g     F .text	0000001c __metal_interrupt_external_enable
20010e5c g     F .text	0000007c __register_exitproc
200121f8  w    F .text	00000096 metal_lc6_interrupt_vector_handler
200118be g     F .text	0000001a __metal_myhart_id
20011a5a  w    F .text	00000092 metal_software_interrupt_vector_handler
20012d2c g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20011364 g     F .text	000000da __metal_driver_riscv_clint0_register
8000048c g     O .data	00000008 __metal_dt_clint_2000000
20013b82 g     F .text	00000048 metal_clock_set_rate_hz
200102a4  w    F .init	00000000 secondary_main
20011a2c  w    F .text	0000002e metal_interrupt_vector_handler
20013ab4 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20012936 g     F .text	000000bc __metal_local_interrupt_enable
2001163e g     F .text	0000013c __metal_driver_riscv_clint0_command_request
20012162  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20010d80 g     F .text	00000000 main
800004a0 g       .data	00000000 metal_segment_data_target_end
20010d5c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20012fca g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
2001308e g     F .text	00000060 __metal_driver_cpu_get_msip
20013c38 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
200131a0 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
2001257c  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001008a g     F .init	00000000 metal_mem_scrub
20011466 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
8000049c g     O .data	00000004 __metal_dt_prci_10008000
20012e4c g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
20013c1e g     F .text	0000001a metal_cpu_get_current_hartid
2001333a g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20013c80 g       .text	00000000 __metal_vector_table
20010d80 g       *ABS*	00000000 metal_segment_itim_source_start
80000488  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102a2 g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
200102fc g     F .ctors	0000002a use_hfxosc
200118d8 g     F .text	00000018 __metal_interrupt_global_enable
20010d94 g     F .text	0000000a atexit
20011938 g     F .text	0000001a __metal_interrupt_timer_enable
2001158c g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20012ef8 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
200134dc g     F .text	000000a0 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20013ae2 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20013d70 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
200114da g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20013dc8 g       *ABS*	00000000 metal_segment_data_source_start
20010134 g       .init	00000000 early_trap_vector
2001282c g     F .text	000000b2 __metal_controller_interrupt_vector
8000046c g     O .data	0000000c __metal_dt_clock_1
20011bfc g     F .text	00000066 __metal_default_timer_handler
20011fa0  w    F .text	00000096 metal_lc2_interrupt_vector_handler
2001273e  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20013bca g     F .text	00000026 metal_cpu_interrupt_controller
20010d9e g     F .text	0000002a exit
20013d8e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20010d80 g       *ABS*	00000000 metal_segment_lim_source_start
20011a14 g     F .text	00000018 __metal_default_interrupt_handler
200110a4  w    F .text	00000014 metal_fini_run
20011c80 g     F .text	0000017c __metal_exception_handler
20011e76  w    F .text	00000094 metal_lc0_interrupt_vector_handler
20013db0 g     F .text	00000012 _exit
20012e92 g     F .text	00000066 __metal_driver_cpu_mtime_get
2001143e g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
200126a8  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20010d64 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200112dc g     F .text	00000088 __metal_driver_riscv_clint0_init
200102d0 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20012f88 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20010088  w      .init	00000000 __register_frame_info
200132be g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20012f9c g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
200119d0 g     F .text	0000002c __metal_interrupt_local_disable
20011920 g     F .text	00000018 __metal_interrupt_software_disable
80000460 g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
20010d6c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:31
    auipc a0, %pcrel_hi(__global_pointer__)
    addi a0, a0, %pcrel_lo(1b)
    ld   gp, 0(a0)
    add  gp, gp, a0
#else
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	c8818193          	addi	gp,gp,-888 # 80000c88 <__global_pointer$>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:36
#endif
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:37
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:39
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:40
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:42
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:47
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11428293          	addi	t0,t0,276 # 20010134 <early_trap_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:48
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:56
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	00000113          	li	sp,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:63
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010030:	00011463          	bnez	sp,20010038 <_enter+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:67
#ifdef __riscv_cmodel_compact
    lla.gprel sp, _sp
#else
    la sp, _sp
20010034:	cb818113          	addi	sp,gp,-840 # 80000940 <_sp>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:71
#endif
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20010038:	f1402573          	csrr	a0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:72
    li t0, 0
2001003c:	4281                	li	t0,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:73
    la t1, __stack_size
2001003e:	40000313          	li	t1,1024
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:75
1:
    andi sp, sp, -16
20010042:	ff017113          	andi	sp,sp,-16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:76
    beq t0, a0, 1f
20010046:	00a28563          	beq	t0,a0,20010050 <_enter+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:77
    add sp, sp, t1
2001004a:	911a                	add	sp,sp,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:78
    addi t0, t0, 1
2001004c:	0285                	addi	t0,t0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:79
    j 1b
2001004e:	bfd5                	j	20010042 <_enter+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:88
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010050:	00000097          	auipc	ra,0x0
20010054:	07c08093          	addi	ra,ra,124 # 200100cc <__metal_before_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:89
    beqz ra, 1f
20010058:	00008363          	beqz	ra,2001005e <_enter+0x5e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:90
    jalr ra
2001005c:	9082                	jalr	ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:96
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2001005e:	f1402573          	csrr	a0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:97
    li a1, 0
20010062:	4581                	li	a1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:98
    li a2, 0
20010064:	4601                	li	a2,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:99
    call _start
20010066:	20ed                	jal	20010150 <_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:104

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010068:	00000093          	li	ra,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:105
    beqz ra, 1f
2001006c:	00008363          	beqz	ra,20010072 <_enter+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:106
    jalr ra
20010070:	9082                	jalr	ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:111
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20010072:	00000297          	auipc	t0,0x0
20010076:	00c28293          	addi	t0,t0,12 # 2001007e <_enter+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:112
     csrw mtvec, t0
2001007a:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:114
1:
     lw t1, 0(x0)
2001007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:115
     j 1b
20010082:	bff5                	j	2001007e <_enter+0x7e>
20010084:	0000                	unimp
	...

20010088 <__register_frame_info>:
__register_frame_info():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:128
 * going to leave this in for now.  At least it's fairly cheap :) */
.weak __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010088:	8082                	ret

2001008a <metal_mem_scrub>:
metal_mem_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2001008a:	46a1                	li	a3,8
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2001008c:	3006b373          	csrrc	t1,mstatus,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010090:	4291                	li	t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20010092:	0055c563          	blt	a1,t0,2001009c <metal_mem_scrub+0x12>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20010096:	00357613          	andi	a2,a0,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2001009a:	ca11                	beqz	a2,200100ae <metal_mem_scrub+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2001009c:	00050023          	sb	zero,0(a0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100a0:	0505                	addi	a0,a0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100a2:	15fd                	addi	a1,a1,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100a4:	feb047e3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100a8:	30031073          	csrw	mstatus,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:39
    ret
200100ac:	8082                	ret
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100ae:	00052023          	sw	zero,0(a0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100b2:	0511                	addi	a0,a0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100b4:	15f1                	addi	a1,a1,-4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100b6:	fcb04ee3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100ba:	30031073          	csrw	mstatus,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:46
    ret
200100be:	8082                	ret

200100c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100c0:	00032023          	sw	zero,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100c4:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100c6:	fe734de3          	blt	t1,t2,200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100ca:	8082                	ret

200100cc <__metal_before_start>:
__metal_before_start():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:93
.weak __metal_eccscrub_bit
.weak __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100cc:	8406                	mv	s0,ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:95

    la      t0, __metal_eccscrub_bit
200100ce:	dfff0297          	auipc	t0,0xdfff0
200100d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:96
    beqz    t0, skip_scrub
200100d6:	04028c63          	beqz	t0,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:98

    la      t0, __metal_boot_hart
200100da:	dfff0297          	auipc	t0,0xdfff0
200100de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:99
    csrr    a5, mhartid
200100e2:	f14027f3          	csrr	a5,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:102

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100e6:	46a1                	li	a3,8
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:103
    csrc    mstatus, a3
200100e8:	3006b073          	csrc	mstatus,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:106

    /* Zero out per hart stack */
    mv      t1, sp
200100ec:	830a                	mv	t1,sp
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:107
    la      t2, __stack_size
200100ee:	dfff0397          	auipc	t2,0xdfff0
200100f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:108
    add     t2, t2, sp
200100f6:	938a                	add	t2,t2,sp
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:109
    beq     t1, t2, 1f
200100f8:	00730363          	beq	t1,t2,200100fe <__metal_before_start+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:110
    jal     __metal_memory_scrub
200100fc:	37d1                	jal	200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:112
1:
    bne     a5, t0, skip_scrub
200100fe:	02579863          	bne	a5,t0,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:119
    /* Zero out data segment */
#ifdef __riscv_cmodel_compact
    lla.gprel t1, metal_segment_data_target_start
    lla.gprel t2, metal_segment_data_target_end
#else
    la      t1, metal_segment_data_target_start
20010102:	5fff0317          	auipc	t1,0x5fff0
20010106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:120
    la      t2, metal_segment_data_target_end
2001010a:	5fff0397          	auipc	t2,0x5fff0
2001010e:	39638393          	addi	t2,t2,918 # 800004a0 <_global_atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:122
#endif
    beq     t1, t2, 1f
20010112:	00730363          	beq	t1,t2,20010118 <__metal_before_start+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:123
    jal     __metal_memory_scrub
20010116:	376d                	jal	200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:130
    /* Zero out itim memory */
#ifdef __riscv_cmodel_compact
    la.got.gprel t1, metal_segment_itim_target_start
    la.got.gprel t2, metal_segment_itim_target_end
#else
    la      t1, metal_segment_itim_target_start
20010118:	e7ff0317          	auipc	t1,0xe7ff0
2001011c:	ee830313          	addi	t1,t1,-280 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:131
    la      t2, metal_segment_itim_target_end
20010120:	e7ff0397          	auipc	t2,0xe7ff0
20010124:	ee038393          	addi	t2,t2,-288 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:133
#endif
    beq     t1, t2, skip_scrub
20010128:	00730363          	beq	t1,t2,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:134
    jal     __metal_memory_scrub
2001012c:	3f51                	jal	200100c0 <__metal_memory_scrub>

2001012e <skip_scrub>:
skip_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:138

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2001012e:	80a2                	mv	ra,s0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:139
    ret
20010130:	8082                	ret
	...

20010134 <early_trap_vector>:
early_trap_vector():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010134:	342022f3          	csrr	t0,mcause
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010138:	34102373          	csrr	t1,mepc
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:66
    csrr t2, mtval
2001013c:	343023f3          	csrr	t2,mtval
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:67
    j early_trap_vector
20010140:	bfd5                	j	20010134 <early_trap_vector>

20010142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010142:	1141                	addi	sp,sp,-16
20010144:	c622                	sw	s0,12(sp)
20010146:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010148:	0001                	nop
2001014a:	4432                	lw	s0,12(sp)
2001014c:	0141                	addi	sp,sp,16
2001014e:	8082                	ret

20010150 <_start>:
_start():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010150:	8406                	mv	s0,ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:51
  auipc a0, %pcrel_hi(__global_pointer__)
  addi a0, a0, %pcrel_lo(1b)
  ld   gp, 0(a0)
  add  gp, gp, a0
#else
  la gp, __global_pointer$
20010152:	5fff1197          	auipc	gp,0x5fff1
20010156:	b3618193          	addi	gp,gp,-1226 # 80000c88 <__global_pointer$>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:58
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001015a:	00000293          	li	t0,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:59
  bne a0, t0, _skip_init
2001015e:	0e551163          	bne	a0,t0,20010240 <_skip_init>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:73
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_data_source_start
  lla.gprel t1, metal_segment_data_target_start
  lla.gprel t2, metal_segment_data_target_end
#else
  la t0, metal_segment_data_source_start
20010162:	00004297          	auipc	t0,0x4
20010166:	c6628293          	addi	t0,t0,-922 # 20013dc8 <metal_segment_data_source_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:74
  la t1, metal_segment_data_target_start
2001016a:	5fff0317          	auipc	t1,0x5fff0
2001016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:75
  la t2, metal_segment_data_target_end
20010172:	5fff0397          	auipc	t2,0x5fff0
20010176:	32e38393          	addi	t2,t2,814 # 800004a0 <_global_atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:78
#endif

  beq t0, t1, 2f
2001017a:	00628c63          	beq	t0,t1,20010192 <_start+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:79
  bge t1, t2, 2f
2001017e:	00735a63          	bge	t1,t2,20010192 <_start+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:83

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20010182:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:84
  addi t0, t0, 4
20010186:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:85
  sw   a0, 0(t1)
20010188:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:86
  addi t1, t1, 4
2001018c:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:87
  blt  t1, t2, 1b
2001018e:	fe734ae3          	blt	t1,t2,20010182 <_start+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:103
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_itim_source_start
  la.got.gprel t1, metal_segment_itim_target_start
  la.got.gprel t2, metal_segment_itim_target_end
#else
  la t0, metal_segment_itim_source_start
20010192:	00001297          	auipc	t0,0x1
20010196:	bee28293          	addi	t0,t0,-1042 # 20010d80 <main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:104
  la t1, metal_segment_itim_target_start
2001019a:	e7ff0317          	auipc	t1,0xe7ff0
2001019e:	e6630313          	addi	t1,t1,-410 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:105
  la t2, metal_segment_itim_target_end
200101a2:	e7ff0397          	auipc	t2,0xe7ff0
200101a6:	e5e38393          	addi	t2,t2,-418 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:108
#endif

  beq t0, t1, 2f
200101aa:	00628c63          	beq	t0,t1,200101c2 <_start+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:109
  bge t1, t2, 2f
200101ae:	00735a63          	bge	t1,t2,200101c2 <_start+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:113

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101b2:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:114
  addi t0, t0, 4
200101b6:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:115
  sw   a0, 0(t1)
200101b8:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:116
  addi t1, t1, 4
200101bc:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:117
  blt  t1, t2, 1b
200101be:	fe734ae3          	blt	t1,t2,200101b2 <_start+0x62>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:129
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101c2:	0000100f          	fence.i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:139
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_lim_source_start
  lla.gprel t1, metal_segment_lim_target_start
  lla.gprel t2, metal_segment_lim_target_end
#else
  la t0, metal_segment_lim_source_start
200101c6:	00001297          	auipc	t0,0x1
200101ca:	bba28293          	addi	t0,t0,-1094 # 20010d80 <main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:140
  la t1, metal_segment_lim_target_start
200101ce:	5fff0317          	auipc	t1,0x5fff0
200101d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:141
  la t2, metal_segment_lim_target_end
200101d6:	5fff0397          	auipc	t2,0x5fff0
200101da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:144
#endif

  beq t0, t1, 2f
200101de:	00628c63          	beq	t0,t1,200101f6 <_start+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:145
  bge t1, t2, 2f
200101e2:	00735a63          	bge	t1,t2,200101f6 <_start+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101e6:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:150
  addi t0, t0, 4
200101ea:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:151
  sw   a0, 0(t1)
200101ec:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:152
  addi t1, t1, 4
200101f0:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:153
  blt  t1, t2, 1b
200101f2:	fe734ae3          	blt	t1,t2,200101e6 <_start+0x96>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:165
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101f6:	0000100f          	fence.i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:172
  /* Zero the BSS segment. */
#ifdef __riscv_cmodel_compact
  lla.gprel t1, metal_segment_bss_target_start
  lla.gprel t2, metal_segment_bss_target_end
#else
  la t1, metal_segment_bss_target_start
200101fa:	5fff0317          	auipc	t1,0x5fff0
200101fe:	2a630313          	addi	t1,t1,678 # 800004a0 <_global_atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:173
  la t2, metal_segment_bss_target_end
20010202:	8b018393          	addi	t2,gp,-1872 # 80000538 <metal_segment_bss_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:176
#endif

  bge t1, t2, 2f
20010206:	00735763          	bge	t1,t2,20010214 <_start+0xc4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:180

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001020a:	00032023          	sw	zero,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:181
  addi t1, t1, 4
2001020e:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:182
  blt  t1, t2, 1b
20010210:	fe734de3          	blt	t1,t2,2001020a <_start+0xba>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:195
  /* Set TLS pointer */
  .weak __tls_base	
#ifdef __riscv_cmodel_compact
  lla.gprel tp, __tls_base
#else
  la tp, __tls_base
20010214:	5fff0217          	auipc	tp,0x5fff0
20010218:	28c20213          	addi	tp,tp,652 # 800004a0 <_global_atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:201
#endif

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2001021c:	c211                	beqz	a2,20010220 <_start+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:202
  jalr a2
2001021e:	9602                	jalr	a2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:206
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010220:	00001517          	auipc	a0,0x1
20010224:	ba850513          	addi	a0,a0,-1112 # 20010dc8 <__libc_fini_array>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:207
  call atexit
20010228:	36d000ef          	jal	ra,20010d94 <atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:208
  call __libc_init_array
2001022c:	3d3000ef          	jal	ra,20010dfe <__libc_init_array>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:212

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010230:	00001517          	auipc	a0,0x1
20010234:	e7450513          	addi	a0,a0,-396 # 200110a4 <metal_fini_run>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:213
  call atexit
20010238:	35d000ef          	jal	ra,20010d94 <atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:214
  call metal_init_run
2001023c:	655000ef          	jal	ra,20011090 <metal_init_run>

20010240 <_skip_init>:
_skip_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:220

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010240:	3709                	jal	20010142 <__metal_synchronize_harts>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:223

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010242:	56fd                	li	a3,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:224
  csrc mie, a3
20010244:	3046b073          	csrc	mie,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:225
  csrc mip, a3
20010248:	3446b073          	csrc	mip,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:229

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2001024c:	301027f3          	csrr	a5,misa
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:230
  lui  a4, 0x42
20010250:	00042737          	lui	a4,0x42
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:231
  and  a4, a4, a5
20010254:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:232
  beqz a4, 1f
20010256:	c709                	beqz	a4,20010260 <_skip_init+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:233
  csrc mideleg, a3
20010258:	3036b073          	csrc	mideleg,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:234
  csrc medeleg, a3
2001025c:	3026b073          	csrc	medeleg,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:238
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010260:	00040737          	lui	a4,0x40
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:239
  and  a4, a4, a5
20010264:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:240
  beqz a4, 1f
20010266:	c319                	beqz	a4,2001026c <_skip_init+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:241
  csrc satp, a3
20010268:	1806b073          	csrc	satp,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:245
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2001026c:	6741                	lui	a4,0x10
2001026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:246
  and  a5, a5, a4
20010272:	8ff9                	and	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:247
  beqz a5, 1f
20010274:	cb89                	beqz	a5,20010286 <_skip_init+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:248
  csrr a5, mstatus
20010276:	300027f3          	csrr	a5,mstatus
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:249
  lui  a4, 0x2
2001027a:	6709                	lui	a4,0x2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:250
  or   a5, a5, a4
2001027c:	8fd9                	or	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:251
  csrw mstatus, a5
2001027e:	30079073          	csrw	mstatus,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:252
  csrwi fcsr, 0
20010282:	00305073          	csrwi	fcsr,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:273
#endif

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010286:	4505                	li	a0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:274
  la a1, argv  /* argv = {"libgloss", NULL} */
20010288:	00000597          	auipc	a1,0x0
2001028c:	0a058593          	addi	a1,a1,160 # 20010328 <argv>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:275
  la a2, envp  /* envp = {NULL} */
20010290:	00000617          	auipc	a2,0x0
20010294:	09c60613          	addi	a2,a2,156 # 2001032c <envp>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:276
  call secondary_main
20010298:	2031                	jal	200102a4 <secondary_main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:282

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2001029a:	305000ef          	jal	ra,20010d9e <exit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:287

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
2001029e:	80a2                	mv	ra,s0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:288
  ret
200102a0:	8082                	ret

200102a2 <_fini>:
_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:300
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102a2:	8082                	ret

200102a4 <secondary_main>:
secondary_main():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:310
 * Users can redefine secondary_main themselves to run code on secondary harts */
.weak   secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102a4:	1141                	addi	sp,sp,-16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:312
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102a6:	c206                	sw	ra,4(sp)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:316
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102a8:	f14022f3          	csrr	t0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:317
  la t1, __metal_boot_hart
200102ac:	00000313          	li	t1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:318
  beq t0, t1, 2f
200102b0:	00628563          	beq	t0,t1,200102ba <secondary_main+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:320
1:
  wfi
200102b4:	10500073          	wfi
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:321
  j 1b
200102b8:	bff5                	j	200102b4 <secondary_main+0x10>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:323
2:
  call main
200102ba:	2c7000ef          	jal	ra,20010d80 <main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:325
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102be:	4092                	lw	ra,4(sp)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:329
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102c0:	0141                	addi	sp,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:330
  ret
200102c2:	8082                	ret

Disassembly of section .ctors:

200102d0 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102d0:	1101                	addi	sp,sp,-32
200102d2:	ce06                	sw	ra,28(sp)
200102d4:	cc22                	sw	s0,24(sp)
200102d6:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102d8:	178030ef          	jal	ra,20013450 <__metal_driver_sifive_fe310_g000_pll_init_rate>
200102dc:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
200102e0:	fec42783          	lw	a5,-20(s0)
200102e4:	c799                	beqz	a5,200102f2 <metal_sifive_fe310_g000_pll_init+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
200102e6:	800007b7          	lui	a5,0x80000
200102ea:	47878513          	addi	a0,a5,1144 # 80000478 <__global_pointer$+0xfffff7f0>
200102ee:	1ee030ef          	jal	ra,200134dc <__metal_driver_sifive_fe310_g000_pll_init>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
200102f2:	0001                	nop
200102f4:	40f2                	lw	ra,28(sp)
200102f6:	4462                	lw	s0,24(sp)
200102f8:	6105                	addi	sp,sp,32
200102fa:	8082                	ret

200102fc <use_hfxosc>:
use_hfxosc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
200102fc:	1101                	addi	sp,sp,-32
200102fe:	ce06                	sw	ra,28(sp)
20010300:	cc22                	sw	s0,24(sp)
20010302:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010304:	14c030ef          	jal	ra,20013450 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010308:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2001030c:	fec42583          	lw	a1,-20(s0)
20010310:	800007b7          	lui	a5,0x80000
20010314:	47878513          	addi	a0,a5,1144 # 80000478 <__global_pointer$+0xfffff7f0>
20010318:	06b030ef          	jal	ra,20013b82 <metal_clock_set_rate_hz>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2001031c:	0001                	nop
2001031e:	40f2                	lw	ra,28(sp)
20010320:	4462                	lw	s0,24(sp)
20010322:	6105                	addi	sp,sp,32
20010324:	8082                	ret

Disassembly of section .text:

20010d80 <main>:
main():
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:7
	.align	1
	.global	main
	.type	main, @function

main:
    addi sp, zero, 1
20010d80:	4105                	li	sp,1
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:8
    addi sp, zero, 2
20010d82:	4109                	li	sp,2
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:9
	slt  t0, zero, -3
20010d84:	ffd02293          	slti	t0,zero,-3
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:10
	beq  t0, zero, ELSE
20010d88:	00028563          	beqz	t0,20010d92 <ELSE>

20010d8c <THEN>:
THEN():
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:12
THEN:
	addi sp, zero, 3
20010d8c:	410d                	li	sp,3
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:13
	jal zero, DONE
20010d8e:	0060006f          	j	20010d94 <atexit>

20010d92 <ELSE>:
ELSE():
/home/gra2p/Documents/uva_courses/rp1/src/software/test_assembly/main.S:15
ELSE:
	addi sp, zero, 4
20010d92:	4111                	li	sp,4

20010d94 <atexit>:
atexit():
20010d94:	85aa                	mv	a1,a0
20010d96:	4681                	li	a3,0
20010d98:	4601                	li	a2,0
20010d9a:	4501                	li	a0,0
20010d9c:	a0c1                	j	20010e5c <__register_exitproc>

20010d9e <exit>:
exit():
20010d9e:	1141                	addi	sp,sp,-16
20010da0:	c422                	sw	s0,8(sp)
20010da2:	c606                	sw	ra,12(sp)
20010da4:	00000797          	auipc	a5,0x0
20010da8:	13478793          	addi	a5,a5,308 # 20010ed8 <__call_exitprocs>
20010dac:	842a                	mv	s0,a0
20010dae:	c399                	beqz	a5,20010db4 <exit+0x16>
20010db0:	4581                	li	a1,0
20010db2:	221d                	jal	20010ed8 <__call_exitprocs>
20010db4:	00000517          	auipc	a0,0x0
20010db8:	fa452503          	lw	a0,-92(a0) # 20010d58 <_global_impure_ptr>
20010dbc:	551c                	lw	a5,40(a0)
20010dbe:	c391                	beqz	a5,20010dc2 <exit+0x24>
20010dc0:	9782                	jalr	a5
20010dc2:	8522                	mv	a0,s0
20010dc4:	7ed020ef          	jal	ra,20013db0 <_exit>

20010dc8 <__libc_fini_array>:
__libc_fini_array():
20010dc8:	1141                	addi	sp,sp,-16
20010dca:	c422                	sw	s0,8(sp)
20010dcc:	c226                	sw	s1,4(sp)
20010dce:	fffff417          	auipc	s0,0xfffff
20010dd2:	50240413          	addi	s0,s0,1282 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20010dd6:	fffff497          	auipc	s1,0xfffff
20010dda:	4fa48493          	addi	s1,s1,1274 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20010dde:	8c05                	sub	s0,s0,s1
20010de0:	c606                	sw	ra,12(sp)
20010de2:	8409                	srai	s0,s0,0x2
20010de4:	e411                	bnez	s0,20010df0 <__libc_fini_array+0x28>
20010de6:	40b2                	lw	ra,12(sp)
20010de8:	4422                	lw	s0,8(sp)
20010dea:	4492                	lw	s1,4(sp)
20010dec:	0141                	addi	sp,sp,16
20010dee:	8082                	ret
20010df0:	147d                	addi	s0,s0,-1
20010df2:	00241793          	slli	a5,s0,0x2
20010df6:	97a6                	add	a5,a5,s1
20010df8:	439c                	lw	a5,0(a5)
20010dfa:	9782                	jalr	a5
20010dfc:	b7e5                	j	20010de4 <__libc_fini_array+0x1c>

20010dfe <__libc_init_array>:
__libc_init_array():
20010dfe:	1141                	addi	sp,sp,-16
20010e00:	c422                	sw	s0,8(sp)
20010e02:	c226                	sw	s1,4(sp)
20010e04:	fffff417          	auipc	s0,0xfffff
20010e08:	4c440413          	addi	s0,s0,1220 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010e0c:	fffff497          	auipc	s1,0xfffff
20010e10:	4bc48493          	addi	s1,s1,1212 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010e14:	8c81                	sub	s1,s1,s0
20010e16:	c04a                	sw	s2,0(sp)
20010e18:	c606                	sw	ra,12(sp)
20010e1a:	8489                	srai	s1,s1,0x2
20010e1c:	4901                	li	s2,0
20010e1e:	02991563          	bne	s2,s1,20010e48 <__libc_init_array+0x4a>
20010e22:	fffff417          	auipc	s0,0xfffff
20010e26:	4a640413          	addi	s0,s0,1190 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010e2a:	fffff497          	auipc	s1,0xfffff
20010e2e:	49e48493          	addi	s1,s1,1182 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010e32:	8c81                	sub	s1,s1,s0
20010e34:	8489                	srai	s1,s1,0x2
20010e36:	4901                	li	s2,0
20010e38:	00991d63          	bne	s2,s1,20010e52 <__libc_init_array+0x54>
20010e3c:	40b2                	lw	ra,12(sp)
20010e3e:	4422                	lw	s0,8(sp)
20010e40:	4492                	lw	s1,4(sp)
20010e42:	4902                	lw	s2,0(sp)
20010e44:	0141                	addi	sp,sp,16
20010e46:	8082                	ret
20010e48:	401c                	lw	a5,0(s0)
20010e4a:	0905                	addi	s2,s2,1
20010e4c:	0411                	addi	s0,s0,4
20010e4e:	9782                	jalr	a5
20010e50:	b7f9                	j	20010e1e <__libc_init_array+0x20>
20010e52:	401c                	lw	a5,0(s0)
20010e54:	0905                	addi	s2,s2,1
20010e56:	0411                	addi	s0,s0,4
20010e58:	9782                	jalr	a5
20010e5a:	bff9                	j	20010e38 <__libc_init_array+0x3a>

20010e5c <__register_exitproc>:
__register_exitproc():
20010e5c:	88aa                	mv	a7,a0
20010e5e:	5ffef517          	auipc	a0,0x5ffef
20010e62:	64250513          	addi	a0,a0,1602 # 800004a0 <_global_atexit>
20010e66:	411c                	lw	a5,0(a0)
20010e68:	ef91                	bnez	a5,20010e84 <__register_exitproc+0x28>
20010e6a:	5ffef717          	auipc	a4,0x5ffef
20010e6e:	64270713          	addi	a4,a4,1602 # 800004ac <_global_atexit0>
20010e72:	c118                	sw	a4,0(a0)
20010e74:	00000513          	li	a0,0
20010e78:	87ba                	mv	a5,a4
20010e7a:	c509                	beqz	a0,20010e84 <__register_exitproc+0x28>
20010e7c:	411c                	lw	a5,0(a0)
20010e7e:	08f72423          	sw	a5,136(a4)
20010e82:	87ba                	mv	a5,a4
20010e84:	43d8                	lw	a4,4(a5)
20010e86:	487d                	li	a6,31
20010e88:	557d                	li	a0,-1
20010e8a:	04e84663          	blt	a6,a4,20010ed6 <__register_exitproc+0x7a>
20010e8e:	02088d63          	beqz	a7,20010ec8 <__register_exitproc+0x6c>
20010e92:	0887a803          	lw	a6,136(a5)
20010e96:	04080063          	beqz	a6,20010ed6 <__register_exitproc+0x7a>
20010e9a:	00271513          	slli	a0,a4,0x2
20010e9e:	9542                	add	a0,a0,a6
20010ea0:	c110                	sw	a2,0(a0)
20010ea2:	10082303          	lw	t1,256(a6)
20010ea6:	4605                	li	a2,1
20010ea8:	00e61633          	sll	a2,a2,a4
20010eac:	00c36333          	or	t1,t1,a2
20010eb0:	10682023          	sw	t1,256(a6)
20010eb4:	08d52023          	sw	a3,128(a0)
20010eb8:	4689                	li	a3,2
20010eba:	00d89763          	bne	a7,a3,20010ec8 <__register_exitproc+0x6c>
20010ebe:	10482683          	lw	a3,260(a6)
20010ec2:	8e55                	or	a2,a2,a3
20010ec4:	10c82223          	sw	a2,260(a6)
20010ec8:	00170693          	addi	a3,a4,1
20010ecc:	070a                	slli	a4,a4,0x2
20010ece:	c3d4                	sw	a3,4(a5)
20010ed0:	97ba                	add	a5,a5,a4
20010ed2:	c78c                	sw	a1,8(a5)
20010ed4:	4501                	li	a0,0
20010ed6:	8082                	ret

20010ed8 <__call_exitprocs>:
__call_exitprocs():
20010ed8:	7179                	addi	sp,sp,-48
20010eda:	ca56                	sw	s5,20(sp)
20010edc:	c85a                	sw	s6,16(sp)
20010ede:	c65e                	sw	s7,12(sp)
20010ee0:	c462                	sw	s8,8(sp)
20010ee2:	d606                	sw	ra,44(sp)
20010ee4:	d422                	sw	s0,40(sp)
20010ee6:	d226                	sw	s1,36(sp)
20010ee8:	d04a                	sw	s2,32(sp)
20010eea:	ce4e                	sw	s3,28(sp)
20010eec:	cc52                	sw	s4,24(sp)
20010eee:	c266                	sw	s9,4(sp)
20010ef0:	8b2a                	mv	s6,a0
20010ef2:	8aae                	mv	s5,a1
20010ef4:	5ffefb97          	auipc	s7,0x5ffef
20010ef8:	5acb8b93          	addi	s7,s7,1452 # 800004a0 <_global_atexit>
20010efc:	4c05                	li	s8,1
20010efe:	000ba483          	lw	s1,0(s7)
20010f02:	cc81                	beqz	s1,20010f1a <__call_exitprocs+0x42>
20010f04:	40c0                	lw	s0,4(s1)
20010f06:	0884a983          	lw	s3,136(s1)
20010f0a:	fff40913          	addi	s2,s0,-1
20010f0e:	040a                	slli	s0,s0,0x2
20010f10:	00898a33          	add	s4,s3,s0
20010f14:	9426                	add	s0,s0,s1
20010f16:	00095f63          	bgez	s2,20010f34 <__call_exitprocs+0x5c>
20010f1a:	50b2                	lw	ra,44(sp)
20010f1c:	5422                	lw	s0,40(sp)
20010f1e:	5492                	lw	s1,36(sp)
20010f20:	5902                	lw	s2,32(sp)
20010f22:	49f2                	lw	s3,28(sp)
20010f24:	4a62                	lw	s4,24(sp)
20010f26:	4ad2                	lw	s5,20(sp)
20010f28:	4b42                	lw	s6,16(sp)
20010f2a:	4bb2                	lw	s7,12(sp)
20010f2c:	4c22                	lw	s8,8(sp)
20010f2e:	4c92                	lw	s9,4(sp)
20010f30:	6145                	addi	sp,sp,48
20010f32:	8082                	ret
20010f34:	000a8c63          	beqz	s5,20010f4c <__call_exitprocs+0x74>
20010f38:	00099663          	bnez	s3,20010f44 <__call_exitprocs+0x6c>
20010f3c:	197d                	addi	s2,s2,-1
20010f3e:	1a71                	addi	s4,s4,-4
20010f40:	1471                	addi	s0,s0,-4
20010f42:	bfd1                	j	20010f16 <__call_exitprocs+0x3e>
20010f44:	07ca2783          	lw	a5,124(s4)
20010f48:	ff579ae3          	bne	a5,s5,20010f3c <__call_exitprocs+0x64>
20010f4c:	40d8                	lw	a4,4(s1)
20010f4e:	405c                	lw	a5,4(s0)
20010f50:	177d                	addi	a4,a4,-1
20010f52:	03271863          	bne	a4,s2,20010f82 <__call_exitprocs+0xaa>
20010f56:	0124a223          	sw	s2,4(s1)
20010f5a:	d3ed                	beqz	a5,20010f3c <__call_exitprocs+0x64>
20010f5c:	0044ac83          	lw	s9,4(s1)
20010f60:	00098863          	beqz	s3,20010f70 <__call_exitprocs+0x98>
20010f64:	1009a683          	lw	a3,256(s3)
20010f68:	012c1733          	sll	a4,s8,s2
20010f6c:	8ef9                	and	a3,a3,a4
20010f6e:	ee89                	bnez	a3,20010f88 <__call_exitprocs+0xb0>
20010f70:	9782                	jalr	a5
20010f72:	40d8                	lw	a4,4(s1)
20010f74:	000ba783          	lw	a5,0(s7)
20010f78:	f99713e3          	bne	a4,s9,20010efe <__call_exitprocs+0x26>
20010f7c:	fcf480e3          	beq	s1,a5,20010f3c <__call_exitprocs+0x64>
20010f80:	bfbd                	j	20010efe <__call_exitprocs+0x26>
20010f82:	00042223          	sw	zero,4(s0)
20010f86:	bfd1                	j	20010f5a <__call_exitprocs+0x82>
20010f88:	1049a683          	lw	a3,260(s3)
20010f8c:	ffca2583          	lw	a1,-4(s4)
20010f90:	8f75                	and	a4,a4,a3
20010f92:	e701                	bnez	a4,20010f9a <__call_exitprocs+0xc2>
20010f94:	855a                	mv	a0,s6
20010f96:	9782                	jalr	a5
20010f98:	bfe9                	j	20010f72 <__call_exitprocs+0x9a>
20010f9a:	852e                	mv	a0,a1
20010f9c:	9782                	jalr	a5
20010f9e:	bfd1                	j	20010f72 <__call_exitprocs+0x9a>

20010fa0 <metal_init>:
metal_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:21
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20010fa0:	1101                	addi	sp,sp,-32
20010fa2:	ce06                	sw	ra,28(sp)
20010fa4:	cc22                	sw	s0,24(sp)
20010fa6:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:24
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20010fa8:	800007b7          	lui	a5,0x80000
20010fac:	4a47a783          	lw	a5,1188(a5) # 800004a4 <__global_pointer$+0xfffff81c>
20010fb0:	efa9                	bnez	a5,2001100a <metal_init+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:27
        return;
    }
    init_done = 1;
20010fb2:	800007b7          	lui	a5,0x80000
20010fb6:	4705                	li	a4,1
20010fb8:	4ae7a223          	sw	a4,1188(a5) # 800004a4 <__global_pointer$+0xfffff81c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:42
#ifdef METAL_SIFIVE_L2PF1
    /* Do L2 Stride Prefetcher initialization. */
    sifive_l2pf1_init();
#endif /* METAL_SIFIVE_L2PF1 */

    if (&metal_constructors_end <= &metal_constructors_start) {
20010fbc:	200107b7          	lui	a5,0x20010
20010fc0:	2d078713          	addi	a4,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20010fc4:	200107b7          	lui	a5,0x20010
20010fc8:	2c878793          	addi	a5,a5,712 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010fcc:	04e7f163          	bgeu	a5,a4,2001100e <metal_init+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:46
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20010fd0:	200107b7          	lui	a5,0x20010
20010fd4:	2c878793          	addi	a5,a5,712 # 200102c8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010fd8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
20010fdc:	a831                	j	20010ff8 <metal_init+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:48
        metal_constructor_t func = *funcptr;
20010fde:	fec42783          	lw	a5,-20(s0)
20010fe2:	439c                	lw	a5,0(a5)
20010fe4:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:50

        func();
20010fe8:	fe842783          	lw	a5,-24(s0)
20010fec:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:52

        funcptr += 1;
20010fee:	fec42783          	lw	a5,-20(s0)
20010ff2:	0791                	addi	a5,a5,4
20010ff4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
20010ff8:	fec42703          	lw	a4,-20(s0)
20010ffc:	200107b7          	lui	a5,0x20010
20011000:	2d078793          	addi	a5,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20011004:	fcf71de3          	bne	a4,a5,20010fde <metal_init+0x3e>
20011008:	a021                	j	20011010 <metal_init+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:25
        return;
2001100a:	0001                	nop
2001100c:	a011                	j	20011010 <metal_init+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:43
        return;
2001100e:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:54
    }
}
20011010:	40f2                	lw	ra,28(sp)
20011012:	4462                	lw	s0,24(sp)
20011014:	6105                	addi	sp,sp,32
20011016:	8082                	ret

20011018 <metal_fini>:
metal_fini():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:56

void metal_fini(void) {
20011018:	1101                	addi	sp,sp,-32
2001101a:	ce06                	sw	ra,28(sp)
2001101c:	cc22                	sw	s0,24(sp)
2001101e:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:59
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20011020:	800007b7          	lui	a5,0x80000
20011024:	4a87a783          	lw	a5,1192(a5) # 800004a8 <__global_pointer$+0xfffff820>
20011028:	efa9                	bnez	a5,20011082 <metal_fini+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:62
        return;
    }
    fini_done = 1;
2001102a:	800007b7          	lui	a5,0x80000
2001102e:	4705                	li	a4,1
20011030:	4ae7a423          	sw	a4,1192(a5) # 800004a8 <__global_pointer$+0xfffff820>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:64

    if (&metal_destructors_end <= &metal_destructors_start) {
20011034:	200107b7          	lui	a5,0x20010
20011038:	2d078713          	addi	a4,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
2001103c:	200107b7          	lui	a5,0x20010
20011040:	2d078793          	addi	a5,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20011044:	04e7f163          	bgeu	a5,a4,20011086 <metal_fini+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:68
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20011048:	200107b7          	lui	a5,0x20010
2001104c:	2d078793          	addi	a5,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
20011050:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20011054:	a831                	j	20011070 <metal_fini+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:70
        metal_destructor_t func = *funcptr;
20011056:	fec42783          	lw	a5,-20(s0)
2001105a:	439c                	lw	a5,0(a5)
2001105c:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:72

        func();
20011060:	fe842783          	lw	a5,-24(s0)
20011064:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:74

        funcptr += 1;
20011066:	fec42783          	lw	a5,-20(s0)
2001106a:	0791                	addi	a5,a5,4
2001106c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20011070:	fec42703          	lw	a4,-20(s0)
20011074:	200107b7          	lui	a5,0x20010
20011078:	2d078793          	addi	a5,a5,720 # 200102d0 <metal_sifive_fe310_g000_pll_init>
2001107c:	fcf71de3          	bne	a4,a5,20011056 <metal_fini+0x3e>
20011080:	a021                	j	20011088 <metal_fini+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:60
        return;
20011082:	0001                	nop
20011084:	a011                	j	20011088 <metal_fini+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:65
        return;
20011086:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:76
    }
}
20011088:	40f2                	lw	ra,28(sp)
2001108a:	4462                	lw	s0,24(sp)
2001108c:	6105                	addi	sp,sp,32
2001108e:	8082                	ret

20011090 <metal_init_run>:
metal_init_run():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:86
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20011090:	1141                	addi	sp,sp,-16
20011092:	c606                	sw	ra,12(sp)
20011094:	c422                	sw	s0,8(sp)
20011096:	0800                	addi	s0,sp,16
20011098:	3721                	jal	20010fa0 <metal_init>
2001109a:	0001                	nop
2001109c:	40b2                	lw	ra,12(sp)
2001109e:	4422                	lw	s0,8(sp)
200110a0:	0141                	addi	sp,sp,16
200110a2:	8082                	ret

200110a4 <metal_fini_run>:
metal_fini_run():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:89

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
200110a4:	1141                	addi	sp,sp,-16
200110a6:	c606                	sw	ra,12(sp)
200110a8:	c422                	sw	s0,8(sp)
200110aa:	0800                	addi	s0,sp,16
200110ac:	37b5                	jal	20011018 <metal_fini>
200110ae:	0001                	nop
200110b0:	40b2                	lw	ra,12(sp)
200110b2:	4422                	lw	s0,8(sp)
200110b4:	0141                	addi	sp,sp,16
200110b6:	8082                	ret

200110b8 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200110b8:	1101                	addi	sp,sp,-32
200110ba:	ce22                	sw	s0,28(sp)
200110bc:	1000                	addi	s0,sp,32
200110be:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200110c2:	fec42703          	lw	a4,-20(s0)
200110c6:	800007b7          	lui	a5,0x80000
200110ca:	48c78793          	addi	a5,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
200110ce:	00f71563          	bne	a4,a5,200110d8 <__metal_driver_sifive_clint0_control_base+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200110d2:	020007b7          	lui	a5,0x2000
200110d6:	a011                	j	200110da <__metal_driver_sifive_clint0_control_base+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
200110d8:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:240
	}
}
200110da:	853e                	mv	a0,a5
200110dc:	4472                	lw	s0,28(sp)
200110de:	6105                	addi	sp,sp,32
200110e0:	8082                	ret

200110e2 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200110e2:	1101                	addi	sp,sp,-32
200110e4:	ce22                	sw	s0,28(sp)
200110e6:	1000                	addi	s0,sp,32
200110e8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200110ec:	fec42703          	lw	a4,-20(s0)
200110f0:	800007b7          	lui	a5,0x80000
200110f4:	48c78793          	addi	a5,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
200110f8:	00f71463          	bne	a4,a5,20011100 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
200110fc:	4789                	li	a5,2
200110fe:	a011                	j	20011102 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
20011100:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:260
	}
}
20011102:	853e                	mv	a0,a5
20011104:	4472                	lw	s0,28(sp)
20011106:	6105                	addi	sp,sp,32
20011108:	8082                	ret

2001110a <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001110a:	1101                	addi	sp,sp,-32
2001110c:	ce22                	sw	s0,28(sp)
2001110e:	1000                	addi	s0,sp,32
20011110:	fea42623          	sw	a0,-20(s0)
20011114:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:264
	if (idx == 0) {
20011118:	fe842783          	lw	a5,-24(s0)
2001111c:	e791                	bnez	a5,20011128 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001111e:	800007b7          	lui	a5,0x80000
20011122:	09078793          	addi	a5,a5,144 # 80000090 <__global_pointer$+0xfffff408>
20011126:	a821                	j	2001113e <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20011128:	fe842703          	lw	a4,-24(s0)
2001112c:	4785                	li	a5,1
2001112e:	00f71763          	bne	a4,a5,2001113c <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20011132:	800007b7          	lui	a5,0x80000
20011136:	09078793          	addi	a5,a5,144 # 80000090 <__global_pointer$+0xfffff408>
2001113a:	a011                	j	2001113e <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
2001113c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:273
	}
}
2001113e:	853e                	mv	a0,a5
20011140:	4472                	lw	s0,28(sp)
20011142:	6105                	addi	sp,sp,32
20011144:	8082                	ret

20011146 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20011146:	1101                	addi	sp,sp,-32
20011148:	ce22                	sw	s0,28(sp)
2001114a:	1000                	addi	s0,sp,32
2001114c:	fea42623          	sw	a0,-20(s0)
20011150:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:277
	if (idx == 0) {
20011154:	fe842783          	lw	a5,-24(s0)
20011158:	e399                	bnez	a5,2001115e <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:278
		return 3;
2001115a:	478d                	li	a5,3
2001115c:	a809                	j	2001116e <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
2001115e:	fe842703          	lw	a4,-24(s0)
20011162:	4785                	li	a5,1
20011164:	00f71463          	bne	a4,a5,2001116c <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:281
		return 7;
20011168:	479d                	li	a5,7
2001116a:	a011                	j	2001116e <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
2001116c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:286
	}
}
2001116e:	853e                	mv	a0,a5
20011170:	4472                	lw	s0,28(sp)
20011172:	6105                	addi	sp,sp,32
20011174:	8082                	ret

20011176 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20011176:	715d                	addi	sp,sp,-80
20011178:	c686                	sw	ra,76(sp)
2001117a:	c4a2                	sw	s0,72(sp)
2001117c:	c2ca                	sw	s2,68(sp)
2001117e:	c0ce                	sw	s3,64(sp)
20011180:	de52                	sw	s4,60(sp)
20011182:	dc56                	sw	s5,56(sp)
20011184:	da5a                	sw	s6,52(sp)
20011186:	d85e                	sw	s7,48(sp)
20011188:	d662                	sw	s8,44(sp)
2001118a:	d466                	sw	s9,40(sp)
2001118c:	0880                	addi	s0,sp,80
2001118e:	faa42e23          	sw	a0,-68(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20011192:	fbc42783          	lw	a5,-68(s0)
20011196:	853e                	mv	a0,a5
20011198:	3705                	jal	200110b8 <__metal_driver_sifive_clint0_control_base>
2001119a:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2001119e:	fcc42703          	lw	a4,-52(s0)
200111a2:	67b1                	lui	a5,0xc
200111a4:	17f1                	addi	a5,a5,-4
200111a6:	97ba                	add	a5,a5,a4
200111a8:	439c                	lw	a5,0(a5)
200111aa:	fcf42423          	sw	a5,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
200111ae:	fcc42703          	lw	a4,-52(s0)
200111b2:	67b1                	lui	a5,0xc
200111b4:	17e1                	addi	a5,a5,-8
200111b6:	97ba                	add	a5,a5,a4
200111b8:	439c                	lw	a5,0(a5)
200111ba:	fcf42223          	sw	a5,-60(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200111be:	fcc42703          	lw	a4,-52(s0)
200111c2:	67b1                	lui	a5,0xc
200111c4:	17f1                	addi	a5,a5,-4
200111c6:	97ba                	add	a5,a5,a4
200111c8:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:27 (discriminator 1)
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);
200111ca:	fc842703          	lw	a4,-56(s0)
200111ce:	fcf718e3          	bne	a4,a5,2001119e <__metal_clint0_mtime_get+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:29

    return (((unsigned long long)hi) << 32) | lo;
200111d2:	fc842783          	lw	a5,-56(s0)
200111d6:	8c3e                	mv	s8,a5
200111d8:	4c81                	li	s9,0
200111da:	000c1993          	slli	s3,s8,0x0
200111de:	4901                	li	s2,0
200111e0:	fc442783          	lw	a5,-60(s0)
200111e4:	8a3e                	mv	s4,a5
200111e6:	4a81                	li	s5,0
200111e8:	01496b33          	or	s6,s2,s4
200111ec:	0159ebb3          	or	s7,s3,s5
200111f0:	875a                	mv	a4,s6
200111f2:	87de                	mv	a5,s7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:30
}
200111f4:	853a                	mv	a0,a4
200111f6:	85be                	mv	a1,a5
200111f8:	40b6                	lw	ra,76(sp)
200111fa:	4426                	lw	s0,72(sp)
200111fc:	4916                	lw	s2,68(sp)
200111fe:	4986                	lw	s3,64(sp)
20011200:	5a72                	lw	s4,60(sp)
20011202:	5ae2                	lw	s5,56(sp)
20011204:	5b52                	lw	s6,52(sp)
20011206:	5bc2                	lw	s7,48(sp)
20011208:	5c32                	lw	s8,44(sp)
2001120a:	5ca2                	lw	s9,40(sp)
2001120c:	6161                	addi	sp,sp,80
2001120e:	8082                	ret

20011210 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20011210:	7179                	addi	sp,sp,-48
20011212:	d606                	sw	ra,44(sp)
20011214:	d422                	sw	s0,40(sp)
20011216:	d24a                	sw	s2,36(sp)
20011218:	d04e                	sw	s3,32(sp)
2001121a:	1800                	addi	s0,sp,48
2001121c:	fca42e23          	sw	a0,-36(s0)
20011220:	fcb42c23          	sw	a1,-40(s0)
20011224:	fcc42823          	sw	a2,-48(s0)
20011228:	fcd42a23          	sw	a3,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2001122c:	fdc42783          	lw	a5,-36(s0)
20011230:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20011234:	fec42783          	lw	a5,-20(s0)
20011238:	853e                	mv	a0,a5
2001123a:	3dbd                	jal	200110b8 <__metal_driver_sifive_clint0_control_base>
2001123c:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011240:	fd842783          	lw	a5,-40(s0)
20011244:	078e                	slli	a5,a5,0x3
20011246:	873e                	mv	a4,a5
20011248:	fe842783          	lw	a5,-24(s0)
2001124c:	973e                	add	a4,a4,a5
2001124e:	6791                	lui	a5,0x4
20011250:	0791                	addi	a5,a5,4
20011252:	97ba                	add	a5,a5,a4
20011254:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20011256:	57fd                	li	a5,-1
20011258:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001125a:	fd842783          	lw	a5,-40(s0)
2001125e:	078e                	slli	a5,a5,0x3
20011260:	873e                	mv	a4,a5
20011262:	fe842783          	lw	a5,-24(s0)
20011266:	973e                	add	a4,a4,a5
20011268:	6791                	lui	a5,0x4
2001126a:	97ba                	add	a5,a5,a4
2001126c:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2001126e:	fd042783          	lw	a5,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20011272:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20011274:	fd442783          	lw	a5,-44(s0)
20011278:	0007d913          	srli	s2,a5,0x0
2001127c:	4981                	li	s3,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001127e:	fd842783          	lw	a5,-40(s0)
20011282:	078e                	slli	a5,a5,0x3
20011284:	873e                	mv	a4,a5
20011286:	fe842783          	lw	a5,-24(s0)
2001128a:	973e                	add	a4,a4,a5
2001128c:	6791                	lui	a5,0x4
2001128e:	0791                	addi	a5,a5,4
20011290:	97ba                	add	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20011292:	874a                	mv	a4,s2
20011294:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20011296:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:55
}
20011298:	853e                	mv	a0,a5
2001129a:	50b2                	lw	ra,44(sp)
2001129c:	5422                	lw	s0,40(sp)
2001129e:	5912                	lw	s2,36(sp)
200112a0:	5982                	lw	s3,32(sp)
200112a2:	6145                	addi	sp,sp,48
200112a4:	8082                	ret

200112a6 <_get_cpu_intc>:
_get_cpu_intc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
200112a6:	1101                	addi	sp,sp,-32
200112a8:	ce06                	sw	ra,28(sp)
200112aa:	cc22                	sw	s0,24(sp)
200112ac:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
200112ae:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
200112b2:	f14027f3          	csrr	a5,mhartid
200112b6:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200112ba:	fec42783          	lw	a5,-20(s0)
200112be:	853e                	mv	a0,a5
200112c0:	131020ef          	jal	ra,20013bf0 <metal_cpu_get>
200112c4:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200112c8:	fe842503          	lw	a0,-24(s0)
200112cc:	0ff020ef          	jal	ra,20013bca <metal_cpu_interrupt_controller>
200112d0:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:65
}
200112d2:	853e                	mv	a0,a5
200112d4:	40f2                	lw	ra,28(sp)
200112d6:	4462                	lw	s0,24(sp)
200112d8:	6105                	addi	sp,sp,32
200112da:	8082                	ret

200112dc <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200112dc:	7139                	addi	sp,sp,-64
200112de:	de06                	sw	ra,60(sp)
200112e0:	dc22                	sw	s0,56(sp)
200112e2:	0080                	addi	s0,sp,64
200112e4:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200112e8:	fcc42503          	lw	a0,-52(s0)
200112ec:	3bdd                	jal	200110e2 <__metal_driver_sifive_clint0_num_interrupts>
200112ee:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200112f2:	fcc42783          	lw	a5,-52(s0)
200112f6:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200112fa:	fe442783          	lw	a5,-28(s0)
200112fe:	43dc                	lw	a5,4(a5)
20011300:	efa9                	bnez	a5,2001135a <__metal_driver_riscv_clint0_init+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20011302:	fe042623          	sw	zero,-20(s0)
20011306:	a081                	j	20011346 <__metal_driver_riscv_clint0_init+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20011308:	fec42583          	lw	a1,-20(s0)
2001130c:	fcc42503          	lw	a0,-52(s0)
20011310:	3bed                	jal	2001110a <__metal_driver_sifive_clint0_interrupt_parents>
20011312:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011316:	fec42583          	lw	a1,-20(s0)
2001131a:	fcc42503          	lw	a0,-52(s0)
2001131e:	3525                	jal	20011146 <__metal_driver_sifive_clint0_interrupt_lines>
20011320:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20011324:	fe042783          	lw	a5,-32(s0)
20011328:	439c                	lw	a5,0(a5)
2001132a:	4fdc                	lw	a5,28(a5)
2001132c:	fcc42683          	lw	a3,-52(s0)
20011330:	4601                	li	a2,0
20011332:	fdc42583          	lw	a1,-36(s0)
20011336:	fe042503          	lw	a0,-32(s0)
2001133a:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2001133c:	fec42783          	lw	a5,-20(s0)
20011340:	0785                	addi	a5,a5,1
20011342:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20011346:	fec42703          	lw	a4,-20(s0)
2001134a:	fe842783          	lw	a5,-24(s0)
2001134e:	faf74de3          	blt	a4,a5,20011308 <__metal_driver_riscv_clint0_init+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20011352:	fe442783          	lw	a5,-28(s0)
20011356:	4705                	li	a4,1
20011358:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
2001135a:	0001                	nop
2001135c:	50f2                	lw	ra,60(sp)
2001135e:	5462                	lw	s0,56(sp)
20011360:	6121                	addi	sp,sp,64
20011362:	8082                	ret

20011364 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20011364:	7139                	addi	sp,sp,-64
20011366:	de06                	sw	ra,60(sp)
20011368:	dc22                	sw	s0,56(sp)
2001136a:	0080                	addi	s0,sp,64
2001136c:	fca42623          	sw	a0,-52(s0)
20011370:	fcb42423          	sw	a1,-56(s0)
20011374:	fcc42223          	sw	a2,-60(s0)
20011378:	fcd42023          	sw	a3,-64(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
2001137c:	57fd                	li	a5,-1
2001137e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20011382:	452010ef          	jal	ra,200127d4 <__metal_controller_interrupt_vector_mode>
20011386:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
2001138a:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001138e:	3f21                	jal	200112a6 <_get_cpu_intc>
20011390:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20011394:	fcc42503          	lw	a0,-52(s0)
20011398:	33a9                	jal	200110e2 <__metal_driver_sifive_clint0_num_interrupts>
2001139a:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2001139e:	fe042703          	lw	a4,-32(s0)
200113a2:	4785                	li	a5,1
200113a4:	00f70863          	beq	a4,a5,200113b4 <__metal_driver_riscv_clint0_register+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
200113a8:	fe042783          	lw	a5,-32(s0)
200113ac:	c781                	beqz	a5,200113b4 <__metal_driver_riscv_clint0_register+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
200113ae:	fec42783          	lw	a5,-20(s0)
200113b2:	a049                	j	20011434 <__metal_driver_riscv_clint0_register+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
200113b4:	fe042223          	sw	zero,-28(s0)
200113b8:	a091                	j	200113fc <__metal_driver_riscv_clint0_register+0x98>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200113ba:	fe442583          	lw	a1,-28(s0)
200113be:	fcc42503          	lw	a0,-52(s0)
200113c2:	3351                	jal	20011146 <__metal_driver_sifive_clint0_interrupt_lines>
200113c4:	fca42a23          	sw	a0,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200113c8:	fe442583          	lw	a1,-28(s0)
200113cc:	fcc42503          	lw	a0,-52(s0)
200113d0:	3b2d                	jal	2001110a <__metal_driver_sifive_clint0_interrupt_parents>
200113d2:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
200113d6:	fdc42703          	lw	a4,-36(s0)
200113da:	fe842783          	lw	a5,-24(s0)
200113de:	00f71863          	bne	a4,a5,200113ee <__metal_driver_riscv_clint0_register+0x8a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
200113e2:	fc842703          	lw	a4,-56(s0)
200113e6:	fd442783          	lw	a5,-44(s0)
200113ea:	02f70063          	beq	a4,a5,2001140a <__metal_driver_riscv_clint0_register+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
200113ee:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
200113f2:	fe442783          	lw	a5,-28(s0)
200113f6:	0785                	addi	a5,a5,1
200113f8:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200113fc:	fe442703          	lw	a4,-28(s0)
20011400:	fd842783          	lw	a5,-40(s0)
20011404:	faf74be3          	blt	a4,a5,200113ba <__metal_driver_riscv_clint0_register+0x56>
20011408:	a011                	j	2001140c <__metal_driver_riscv_clint0_register+0xa8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
2001140a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
2001140c:	fe842783          	lw	a5,-24(s0)
20011410:	c385                	beqz	a5,20011430 <__metal_driver_riscv_clint0_register+0xcc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20011412:	fe842783          	lw	a5,-24(s0)
20011416:	439c                	lw	a5,0(a5)
20011418:	4fdc                	lw	a5,28(a5)
2001141a:	fc042683          	lw	a3,-64(s0)
2001141e:	fc442603          	lw	a2,-60(s0)
20011422:	fc842583          	lw	a1,-56(s0)
20011426:	fe842503          	lw	a0,-24(s0)
2001142a:	9782                	jalr	a5
2001142c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20011430:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:115
}
20011434:	853e                	mv	a0,a5
20011436:	50f2                	lw	ra,60(sp)
20011438:	5462                	lw	s0,56(sp)
2001143a:	6121                	addi	sp,sp,64
2001143c:	8082                	ret

2001143e <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2001143e:	7179                	addi	sp,sp,-48
20011440:	d622                	sw	s0,44(sp)
20011442:	1800                	addi	s0,sp,48
20011444:	fca42e23          	sw	a0,-36(s0)
20011448:	fcb42c23          	sw	a1,-40(s0)
2001144c:	fcc42a23          	sw	a2,-44(s0)
20011450:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20011454:	57fd                	li	a5,-1
20011456:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
2001145a:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:123
}
2001145e:	853e                	mv	a0,a5
20011460:	5432                	lw	s0,44(sp)
20011462:	6145                	addi	sp,sp,48
20011464:	8082                	ret

20011466 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20011466:	1101                	addi	sp,sp,-32
20011468:	ce06                	sw	ra,28(sp)
2001146a:	cc22                	sw	s0,24(sp)
2001146c:	1000                	addi	s0,sp,32
2001146e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20011472:	362010ef          	jal	ra,200127d4 <__metal_controller_interrupt_vector_mode>
20011476:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:128
}
20011478:	853e                	mv	a0,a5
2001147a:	40f2                	lw	ra,28(sp)
2001147c:	4462                	lw	s0,24(sp)
2001147e:	6105                	addi	sp,sp,32
20011480:	8082                	ret

20011482 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20011482:	7179                	addi	sp,sp,-48
20011484:	d606                	sw	ra,44(sp)
20011486:	d422                	sw	s0,40(sp)
20011488:	1800                	addi	s0,sp,48
2001148a:	fca42e23          	sw	a0,-36(s0)
2001148e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20011492:	57fd                	li	a5,-1
20011494:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20011498:	3539                	jal	200112a6 <_get_cpu_intc>
2001149a:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2001149e:	fe842783          	lw	a5,-24(s0)
200114a2:	c395                	beqz	a5,200114c6 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
200114a4:	fd842703          	lw	a4,-40(s0)
200114a8:	4785                	li	a5,1
200114aa:	02e7e063          	bltu	a5,a4,200114ca <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
200114ae:	fe842783          	lw	a5,-24(s0)
200114b2:	439c                	lw	a5,0(a5)
200114b4:	43dc                	lw	a5,4(a5)
200114b6:	fd842583          	lw	a1,-40(s0)
200114ba:	fe842503          	lw	a0,-24(s0)
200114be:	9782                	jalr	a5
200114c0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
200114c4:	a021                	j	200114cc <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
200114c6:	0001                	nop
200114c8:	a011                	j	200114cc <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
200114ca:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
200114cc:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:148
}
200114d0:	853e                	mv	a0,a5
200114d2:	50b2                	lw	ra,44(sp)
200114d4:	5422                	lw	s0,40(sp)
200114d6:	6145                	addi	sp,sp,48
200114d8:	8082                	ret

200114da <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
200114da:	7139                	addi	sp,sp,-64
200114dc:	de06                	sw	ra,60(sp)
200114de:	dc22                	sw	s0,56(sp)
200114e0:	0080                	addi	s0,sp,64
200114e2:	fca42623          	sw	a0,-52(s0)
200114e6:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
200114ea:	57fd                	li	a5,-1
200114ec:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
200114f0:	fc842783          	lw	a5,-56(s0)
200114f4:	c7c9                	beqz	a5,2001157e <__metal_driver_riscv_clint0_enable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
200114f6:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200114fa:	3375                	jal	200112a6 <_get_cpu_intc>
200114fc:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20011500:	fcc42503          	lw	a0,-52(s0)
20011504:	3ef9                	jal	200110e2 <__metal_driver_sifive_clint0_num_interrupts>
20011506:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
2001150a:	fe042223          	sw	zero,-28(s0)
2001150e:	a091                	j	20011552 <__metal_driver_riscv_clint0_enable+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011510:	fe442583          	lw	a1,-28(s0)
20011514:	fcc42503          	lw	a0,-52(s0)
20011518:	313d                	jal	20011146 <__metal_driver_sifive_clint0_interrupt_lines>
2001151a:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001151e:	fe442583          	lw	a1,-28(s0)
20011522:	fcc42503          	lw	a0,-52(s0)
20011526:	36d5                	jal	2001110a <__metal_driver_sifive_clint0_interrupt_parents>
20011528:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
2001152c:	fe042703          	lw	a4,-32(s0)
20011530:	fe842783          	lw	a5,-24(s0)
20011534:	00f71863          	bne	a4,a5,20011544 <__metal_driver_riscv_clint0_enable+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20011538:	fc842703          	lw	a4,-56(s0)
2001153c:	fd842783          	lw	a5,-40(s0)
20011540:	02f70063          	beq	a4,a5,20011560 <__metal_driver_riscv_clint0_enable+0x86>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20011544:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20011548:	fe442783          	lw	a5,-28(s0)
2001154c:	0785                	addi	a5,a5,1
2001154e:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20011552:	fe442703          	lw	a4,-28(s0)
20011556:	fdc42783          	lw	a5,-36(s0)
2001155a:	faf74be3          	blt	a4,a5,20011510 <__metal_driver_riscv_clint0_enable+0x36>
2001155e:	a011                	j	20011562 <__metal_driver_riscv_clint0_enable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20011560:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20011562:	fe842783          	lw	a5,-24(s0)
20011566:	cf81                	beqz	a5,2001157e <__metal_driver_riscv_clint0_enable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20011568:	fe842783          	lw	a5,-24(s0)
2001156c:	439c                	lw	a5,0(a5)
2001156e:	53dc                	lw	a5,36(a5)
20011570:	fc842583          	lw	a1,-56(s0)
20011574:	fe842503          	lw	a0,-24(s0)
20011578:	9782                	jalr	a5
2001157a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2001157e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:178
}
20011582:	853e                	mv	a0,a5
20011584:	50f2                	lw	ra,60(sp)
20011586:	5462                	lw	s0,56(sp)
20011588:	6121                	addi	sp,sp,64
2001158a:	8082                	ret

2001158c <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
2001158c:	7139                	addi	sp,sp,-64
2001158e:	de06                	sw	ra,60(sp)
20011590:	dc22                	sw	s0,56(sp)
20011592:	0080                	addi	s0,sp,64
20011594:	fca42623          	sw	a0,-52(s0)
20011598:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2001159c:	57fd                	li	a5,-1
2001159e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
200115a2:	fc842783          	lw	a5,-56(s0)
200115a6:	c7c9                	beqz	a5,20011630 <__metal_driver_riscv_clint0_disable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
200115a8:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200115ac:	39ed                	jal	200112a6 <_get_cpu_intc>
200115ae:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200115b2:	fcc42503          	lw	a0,-52(s0)
200115b6:	3635                	jal	200110e2 <__metal_driver_sifive_clint0_num_interrupts>
200115b8:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
200115bc:	fe042223          	sw	zero,-28(s0)
200115c0:	a091                	j	20011604 <__metal_driver_riscv_clint0_disable+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200115c2:	fe442583          	lw	a1,-28(s0)
200115c6:	fcc42503          	lw	a0,-52(s0)
200115ca:	3eb5                	jal	20011146 <__metal_driver_sifive_clint0_interrupt_lines>
200115cc:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200115d0:	fe442583          	lw	a1,-28(s0)
200115d4:	fcc42503          	lw	a0,-52(s0)
200115d8:	3e0d                	jal	2001110a <__metal_driver_sifive_clint0_interrupt_parents>
200115da:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
200115de:	fe042703          	lw	a4,-32(s0)
200115e2:	fe842783          	lw	a5,-24(s0)
200115e6:	00f71863          	bne	a4,a5,200115f6 <__metal_driver_riscv_clint0_disable+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
200115ea:	fc842703          	lw	a4,-56(s0)
200115ee:	fd842783          	lw	a5,-40(s0)
200115f2:	02f70063          	beq	a4,a5,20011612 <__metal_driver_riscv_clint0_disable+0x86>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
200115f6:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200115fa:	fe442783          	lw	a5,-28(s0)
200115fe:	0785                	addi	a5,a5,1
20011600:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20011604:	fe442703          	lw	a4,-28(s0)
20011608:	fdc42783          	lw	a5,-36(s0)
2001160c:	faf74be3          	blt	a4,a5,200115c2 <__metal_driver_riscv_clint0_disable+0x36>
20011610:	a011                	j	20011614 <__metal_driver_riscv_clint0_disable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20011612:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20011614:	fe842783          	lw	a5,-24(s0)
20011618:	cf81                	beqz	a5,20011630 <__metal_driver_riscv_clint0_disable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
2001161a:	fe842783          	lw	a5,-24(s0)
2001161e:	439c                	lw	a5,0(a5)
20011620:	579c                	lw	a5,40(a5)
20011622:	fc842583          	lw	a1,-56(s0)
20011626:	fe842503          	lw	a0,-24(s0)
2001162a:	9782                	jalr	a5
2001162c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20011630:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:208
}
20011634:	853e                	mv	a0,a5
20011636:	50f2                	lw	ra,60(sp)
20011638:	5462                	lw	s0,56(sp)
2001163a:	6121                	addi	sp,sp,64
2001163c:	8082                	ret

2001163e <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
2001163e:	7179                	addi	sp,sp,-48
20011640:	d606                	sw	ra,44(sp)
20011642:	d422                	sw	s0,40(sp)
20011644:	1800                	addi	s0,sp,48
20011646:	fca42e23          	sw	a0,-36(s0)
2001164a:	fcb42c23          	sw	a1,-40(s0)
2001164e:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20011652:	57fd                	li	a5,-1
20011654:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20011658:	fdc42783          	lw	a5,-36(s0)
2001165c:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20011660:	fdc42503          	lw	a0,-36(s0)
20011664:	3c91                	jal	200110b8 <__metal_driver_sifive_clint0_control_base>
20011666:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
2001166a:	fd842703          	lw	a4,-40(s0)
2001166e:	4791                	li	a5,4
20011670:	0cf70063          	beq	a4,a5,20011730 <__metal_driver_riscv_clint0_command_request+0xf2>
20011674:	fd842703          	lw	a4,-40(s0)
20011678:	4791                	li	a5,4
2001167a:	0ee7c063          	blt	a5,a4,2001175a <__metal_driver_riscv_clint0_command_request+0x11c>
2001167e:	fd842703          	lw	a4,-40(s0)
20011682:	478d                	li	a5,3
20011684:	06f70563          	beq	a4,a5,200116ee <__metal_driver_riscv_clint0_command_request+0xb0>
20011688:	fd842703          	lw	a4,-40(s0)
2001168c:	478d                	li	a5,3
2001168e:	0ce7c663          	blt	a5,a4,2001175a <__metal_driver_riscv_clint0_command_request+0x11c>
20011692:	fd842703          	lw	a4,-40(s0)
20011696:	4785                	li	a5,1
20011698:	00f70863          	beq	a4,a5,200116a8 <__metal_driver_riscv_clint0_command_request+0x6a>
2001169c:	fd842703          	lw	a4,-40(s0)
200116a0:	4789                	li	a5,2
200116a2:	02f70263          	beq	a4,a5,200116c6 <__metal_driver_riscv_clint0_command_request+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
200116a6:	a855                	j	2001175a <__metal_driver_riscv_clint0_command_request+0x11c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
200116a8:	fd442783          	lw	a5,-44(s0)
200116ac:	cbcd                	beqz	a5,2001175e <__metal_driver_riscv_clint0_command_request+0x120>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
200116ae:	fe842503          	lw	a0,-24(s0)
200116b2:	34d1                	jal	20011176 <__metal_clint0_mtime_get>
200116b4:	872a                	mv	a4,a0
200116b6:	87ae                	mv	a5,a1
200116b8:	fd442683          	lw	a3,-44(s0)
200116bc:	c298                	sw	a4,0(a3)
200116be:	c2dc                	sw	a5,4(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
200116c0:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
200116c4:	a869                	j	2001175e <__metal_driver_riscv_clint0_command_request+0x120>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
200116c6:	fd442783          	lw	a5,-44(s0)
200116ca:	cfc1                	beqz	a5,20011762 <__metal_driver_riscv_clint0_command_request+0x124>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
200116cc:	fd442783          	lw	a5,-44(s0)
200116d0:	439c                	lw	a5,0(a5)
200116d2:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
200116d6:	fe042783          	lw	a5,-32(s0)
200116da:	078a                	slli	a5,a5,0x2
200116dc:	873e                	mv	a4,a5
200116de:	fe442783          	lw	a5,-28(s0)
200116e2:	97ba                	add	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
200116e4:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
200116e8:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
200116ec:	a89d                	j	20011762 <__metal_driver_riscv_clint0_command_request+0x124>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
200116ee:	fd442783          	lw	a5,-44(s0)
200116f2:	cbb5                	beqz	a5,20011766 <__metal_driver_riscv_clint0_command_request+0x128>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
200116f4:	fd442783          	lw	a5,-44(s0)
200116f8:	439c                	lw	a5,0(a5)
200116fa:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
200116fe:	fe042783          	lw	a5,-32(s0)
20011702:	078a                	slli	a5,a5,0x2
20011704:	873e                	mv	a4,a5
20011706:	fe442783          	lw	a5,-28(s0)
2001170a:	97ba                	add	a5,a5,a4
2001170c:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
2001170e:	4785                	li	a5,1
20011710:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20011712:	0480000f          	fence	o,i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20011716:	fe042783          	lw	a5,-32(s0)
2001171a:	078a                	slli	a5,a5,0x2
2001171c:	873e                	mv	a4,a5
2001171e:	fe442783          	lw	a5,-28(s0)
20011722:	97ba                	add	a5,a5,a4
20011724:	439c                	lw	a5,0(a5)
20011726:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
2001172a:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2001172e:	a825                	j	20011766 <__metal_driver_riscv_clint0_command_request+0x128>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20011730:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20011734:	fd442783          	lw	a5,-44(s0)
20011738:	cb8d                	beqz	a5,2001176a <__metal_driver_riscv_clint0_command_request+0x12c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
2001173a:	fd442783          	lw	a5,-44(s0)
2001173e:	439c                	lw	a5,0(a5)
20011740:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20011744:	fe042783          	lw	a5,-32(s0)
20011748:	078a                	slli	a5,a5,0x2
2001174a:	873e                	mv	a4,a5
2001174c:	fe442783          	lw	a5,-28(s0)
20011750:	97ba                	add	a5,a5,a4
20011752:	439c                	lw	a5,0(a5)
20011754:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20011758:	a809                	j	2001176a <__metal_driver_riscv_clint0_command_request+0x12c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
2001175a:	0001                	nop
2001175c:	a801                	j	2001176c <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2001175e:	0001                	nop
20011760:	a031                	j	2001176c <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20011762:	0001                	nop
20011764:	a021                	j	2001176c <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20011766:	0001                	nop
20011768:	a011                	j	2001176c <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2001176a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2001176c:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:267
}
20011770:	853e                	mv	a0,a5
20011772:	50b2                	lw	ra,44(sp)
20011774:	5422                	lw	s0,40(sp)
20011776:	6145                	addi	sp,sp,48
20011778:	8082                	ret

2001177a <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
2001177a:	7179                	addi	sp,sp,-48
2001177c:	d606                	sw	ra,44(sp)
2001177e:	d422                	sw	s0,40(sp)
20011780:	1800                	addi	s0,sp,48
20011782:	fca42e23          	sw	a0,-36(s0)
20011786:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
2001178a:	494020ef          	jal	ra,20013c1e <metal_cpu_get_current_hartid>
2001178e:	87aa                	mv	a5,a0
20011790:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20011794:	fec40793          	addi	a5,s0,-20
20011798:	863e                	mv	a2,a5
2001179a:	4589                	li	a1,2
2001179c:	fdc42503          	lw	a0,-36(s0)
200117a0:	3d79                	jal	2001163e <__metal_driver_riscv_clint0_command_request>
200117a2:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
200117a4:	853e                	mv	a0,a5
200117a6:	50b2                	lw	ra,44(sp)
200117a8:	5422                	lw	s0,40(sp)
200117aa:	6145                	addi	sp,sp,48
200117ac:	8082                	ret

200117ae <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
200117ae:	7179                	addi	sp,sp,-48
200117b0:	d606                	sw	ra,44(sp)
200117b2:	d422                	sw	s0,40(sp)
200117b4:	1800                	addi	s0,sp,48
200117b6:	fca42e23          	sw	a0,-36(s0)
200117ba:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
200117be:	460020ef          	jal	ra,20013c1e <metal_cpu_get_current_hartid>
200117c2:	87aa                	mv	a5,a0
200117c4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
200117c8:	fec40793          	addi	a5,s0,-20
200117cc:	863e                	mv	a2,a5
200117ce:	458d                	li	a1,3
200117d0:	fdc42503          	lw	a0,-36(s0)
200117d4:	35ad                	jal	2001163e <__metal_driver_riscv_clint0_command_request>
200117d6:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
200117d8:	853e                	mv	a0,a5
200117da:	50b2                	lw	ra,44(sp)
200117dc:	5422                	lw	s0,40(sp)
200117de:	6145                	addi	sp,sp,48
200117e0:	8082                	ret

200117e2 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
200117e2:	1101                	addi	sp,sp,-32
200117e4:	ce22                	sw	s0,28(sp)
200117e6:	1000                	addi	s0,sp,32
200117e8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200117ec:	fec42703          	lw	a4,-20(s0)
200117f0:	800007b7          	lui	a5,0x80000
200117f4:	49478793          	addi	a5,a5,1172 # 80000494 <__global_pointer$+0xfffff80c>
200117f8:	00f71463          	bne	a4,a5,20011800 <__metal_driver_cpu_hartid+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:294
		return 0;
200117fc:	4781                	li	a5,0
200117fe:	a011                	j	20011802 <__metal_driver_cpu_hartid+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20011800:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:299
	}
}
20011802:	853e                	mv	a0,a5
20011804:	4472                	lw	s0,28(sp)
20011806:	6105                	addi	sp,sp,32
20011808:	8082                	ret

2001180a <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
2001180a:	1101                	addi	sp,sp,-32
2001180c:	ce22                	sw	s0,28(sp)
2001180e:	1000                	addi	s0,sp,32
20011810:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011814:	fec42703          	lw	a4,-20(s0)
20011818:	800007b7          	lui	a5,0x80000
2001181c:	49478793          	addi	a5,a5,1172 # 80000494 <__global_pointer$+0xfffff80c>
20011820:	00f71763          	bne	a4,a5,2001182e <__metal_driver_cpu_timebase+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:304
		return 16000000;
20011824:	00f427b7          	lui	a5,0xf42
20011828:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
2001182c:	a011                	j	20011830 <__metal_driver_cpu_timebase+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
2001182e:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:309
	}
}
20011830:	853e                	mv	a0,a5
20011832:	4472                	lw	s0,28(sp)
20011834:	6105                	addi	sp,sp,32
20011836:	8082                	ret

20011838 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20011838:	1101                	addi	sp,sp,-32
2001183a:	ce22                	sw	s0,28(sp)
2001183c:	1000                	addi	s0,sp,32
2001183e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011842:	fec42703          	lw	a4,-20(s0)
20011846:	800007b7          	lui	a5,0x80000
2001184a:	49478793          	addi	a5,a5,1172 # 80000494 <__global_pointer$+0xfffff80c>
2001184e:	00f71763          	bne	a4,a5,2001185c <__metal_driver_cpu_interrupt_controller+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20011852:	800007b7          	lui	a5,0x80000
20011856:	09078793          	addi	a5,a5,144 # 80000090 <__global_pointer$+0xfffff408>
2001185a:	a011                	j	2001185e <__metal_driver_cpu_interrupt_controller+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
2001185c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:319
	}
}
2001185e:	853e                	mv	a0,a5
20011860:	4472                	lw	s0,28(sp)
20011862:	6105                	addi	sp,sp,32
20011864:	8082                	ret

20011866 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20011866:	1101                	addi	sp,sp,-32
20011868:	ce22                	sw	s0,28(sp)
2001186a:	1000                	addi	s0,sp,32
2001186c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011870:	fec42703          	lw	a4,-20(s0)
20011874:	800007b7          	lui	a5,0x80000
20011878:	49478793          	addi	a5,a5,1172 # 80000494 <__global_pointer$+0xfffff80c>
2001187c:	00f71463          	bne	a4,a5,20011884 <__metal_driver_cpu_buserror+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:334
		return NULL;
20011880:	4781                	li	a5,0
20011882:	a011                	j	20011886 <__metal_driver_cpu_buserror+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20011884:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:339
	}
}
20011886:	853e                	mv	a0,a5
20011888:	4472                	lw	s0,28(sp)
2001188a:	6105                	addi	sp,sp,32
2001188c:	8082                	ret

2001188e <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2001188e:	1101                	addi	sp,sp,-32
20011890:	ce22                	sw	s0,28(sp)
20011892:	1000                	addi	s0,sp,32
20011894:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20011898:	fec42783          	lw	a5,-20(s0)
2001189c:	00f04c63          	bgtz	a5,200118b4 <__metal_driver_cpu_get+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
200118a0:	800007b7          	lui	a5,0x80000
200118a4:	fec42703          	lw	a4,-20(s0)
200118a8:	070a                	slli	a4,a4,0x2
200118aa:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
200118ae:	97ba                	add	a5,a5,a4
200118b0:	439c                	lw	a5,0(a5)
200118b2:	a011                	j	200118b6 <__metal_driver_cpu_get+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
200118b4:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:30
}
200118b6:	853e                	mv	a0,a5
200118b8:	4472                	lw	s0,28(sp)
200118ba:	6105                	addi	sp,sp,32
200118bc:	8082                	ret

200118be <__metal_myhart_id>:
__metal_myhart_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
200118be:	1101                	addi	sp,sp,-32
200118c0:	ce22                	sw	s0,28(sp)
200118c2:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
200118c4:	f14027f3          	csrr	a5,mhartid
200118c8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
200118cc:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:36
}
200118d0:	853e                	mv	a0,a5
200118d2:	4472                	lw	s0,28(sp)
200118d4:	6105                	addi	sp,sp,32
200118d6:	8082                	ret

200118d8 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
200118d8:	1101                	addi	sp,sp,-32
200118da:	ce22                	sw	s0,28(sp)
200118dc:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
200118de:	47a1                	li	a5,8
200118e0:	3007a7f3          	csrrs	a5,mstatus,a5
200118e4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
200118e8:	0001                	nop
200118ea:	4472                	lw	s0,28(sp)
200118ec:	6105                	addi	sp,sp,32
200118ee:	8082                	ret

200118f0 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
200118f0:	1101                	addi	sp,sp,-32
200118f2:	ce22                	sw	s0,28(sp)
200118f4:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
200118f6:	47a1                	li	a5,8
200118f8:	3007b7f3          	csrrc	a5,mstatus,a5
200118fc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20011900:	0001                	nop
20011902:	4472                	lw	s0,28(sp)
20011904:	6105                	addi	sp,sp,32
20011906:	8082                	ret

20011908 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20011908:	1101                	addi	sp,sp,-32
2001190a:	ce22                	sw	s0,28(sp)
2001190c:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001190e:	47a1                	li	a5,8
20011910:	3047a7f3          	csrrs	a5,mie,a5
20011914:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20011918:	0001                	nop
2001191a:	4472                	lw	s0,28(sp)
2001191c:	6105                	addi	sp,sp,32
2001191e:	8082                	ret

20011920 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20011920:	1101                	addi	sp,sp,-32
20011922:	ce22                	sw	s0,28(sp)
20011924:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011926:	47a1                	li	a5,8
20011928:	3047b7f3          	csrrc	a5,mie,a5
2001192c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20011930:	0001                	nop
20011932:	4472                	lw	s0,28(sp)
20011934:	6105                	addi	sp,sp,32
20011936:	8082                	ret

20011938 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20011938:	1101                	addi	sp,sp,-32
2001193a:	ce22                	sw	s0,28(sp)
2001193c:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001193e:	08000793          	li	a5,128
20011942:	3047a7f3          	csrrs	a5,mie,a5
20011946:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2001194a:	0001                	nop
2001194c:	4472                	lw	s0,28(sp)
2001194e:	6105                	addi	sp,sp,32
20011950:	8082                	ret

20011952 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20011952:	1101                	addi	sp,sp,-32
20011954:	ce22                	sw	s0,28(sp)
20011956:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011958:	08000793          	li	a5,128
2001195c:	3047b7f3          	csrrc	a5,mie,a5
20011960:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011964:	0001                	nop
20011966:	4472                	lw	s0,28(sp)
20011968:	6105                	addi	sp,sp,32
2001196a:	8082                	ret

2001196c <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
2001196c:	1101                	addi	sp,sp,-32
2001196e:	ce22                	sw	s0,28(sp)
20011970:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011972:	6785                	lui	a5,0x1
20011974:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011978:	3047a7f3          	csrrs	a5,mie,a5
2001197c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20011980:	0001                	nop
20011982:	4472                	lw	s0,28(sp)
20011984:	6105                	addi	sp,sp,32
20011986:	8082                	ret

20011988 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20011988:	1101                	addi	sp,sp,-32
2001198a:	ce22                	sw	s0,28(sp)
2001198c:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2001198e:	6785                	lui	a5,0x1
20011990:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011994:	3047b7f3          	csrrc	a5,mie,a5
20011998:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2001199c:	0001                	nop
2001199e:	4472                	lw	s0,28(sp)
200119a0:	6105                	addi	sp,sp,32
200119a2:	8082                	ret

200119a4 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
200119a4:	7179                	addi	sp,sp,-48
200119a6:	d622                	sw	s0,44(sp)
200119a8:	1800                	addi	s0,sp,48
200119aa:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
200119ae:	fdc42783          	lw	a5,-36(s0)
200119b2:	4705                	li	a4,1
200119b4:	00f717b3          	sll	a5,a4,a5
200119b8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
200119bc:	fec42783          	lw	a5,-20(s0)
200119c0:	3047a7f3          	csrrs	a5,mie,a5
200119c4:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:105
}
200119c8:	0001                	nop
200119ca:	5432                	lw	s0,44(sp)
200119cc:	6145                	addi	sp,sp,48
200119ce:	8082                	ret

200119d0 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
200119d0:	7179                	addi	sp,sp,-48
200119d2:	d622                	sw	s0,44(sp)
200119d4:	1800                	addi	s0,sp,48
200119d6:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
200119da:	fdc42783          	lw	a5,-36(s0)
200119de:	4705                	li	a4,1
200119e0:	00f717b3          	sll	a5,a4,a5
200119e4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
200119e8:	fec42783          	lw	a5,-20(s0)
200119ec:	3047b7f3          	csrrc	a5,mie,a5
200119f0:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:111
}
200119f4:	0001                	nop
200119f6:	5432                	lw	s0,44(sp)
200119f8:	6145                	addi	sp,sp,48
200119fa:	8082                	ret

200119fc <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
200119fc:	1101                	addi	sp,sp,-32
200119fe:	ce06                	sw	ra,28(sp)
20011a00:	cc22                	sw	s0,24(sp)
20011a02:	1000                	addi	s0,sp,32
20011a04:	fea42623          	sw	a0,-20(s0)
20011a08:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20011a0c:	06400513          	li	a0,100
20011a10:	228020ef          	jal	ra,20013c38 <metal_shutdown>

20011a14 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20011a14:	1101                	addi	sp,sp,-32
20011a16:	ce06                	sw	ra,28(sp)
20011a18:	cc22                	sw	s0,24(sp)
20011a1a:	1000                	addi	s0,sp,32
20011a1c:	fea42623          	sw	a0,-20(s0)
20011a20:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20011a24:	0c800513          	li	a0,200
20011a28:	210020ef          	jal	ra,20013c38 <metal_shutdown>

20011a2c <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20011a2c:	715d                	addi	sp,sp,-80
20011a2e:	c686                	sw	ra,76(sp)
20011a30:	c496                	sw	t0,72(sp)
20011a32:	c29a                	sw	t1,68(sp)
20011a34:	c09e                	sw	t2,64(sp)
20011a36:	de22                	sw	s0,60(sp)
20011a38:	dc2a                	sw	a0,56(sp)
20011a3a:	da2e                	sw	a1,52(sp)
20011a3c:	d832                	sw	a2,48(sp)
20011a3e:	d636                	sw	a3,44(sp)
20011a40:	d43a                	sw	a4,40(sp)
20011a42:	d23e                	sw	a5,36(sp)
20011a44:	d042                	sw	a6,32(sp)
20011a46:	ce46                	sw	a7,28(sp)
20011a48:	cc72                	sw	t3,24(sp)
20011a4a:	ca76                	sw	t4,20(sp)
20011a4c:	c87a                	sw	t5,16(sp)
20011a4e:	c67e                	sw	t6,12(sp)
20011a50:	0880                	addi	s0,sp,80
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20011a52:	12c00513          	li	a0,300
20011a56:	1e2020ef          	jal	ra,20013c38 <metal_shutdown>

20011a5a <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20011a5a:	711d                	addi	sp,sp,-96
20011a5c:	ce86                	sw	ra,92(sp)
20011a5e:	cc96                	sw	t0,88(sp)
20011a60:	ca9a                	sw	t1,84(sp)
20011a62:	c89e                	sw	t2,80(sp)
20011a64:	c6a2                	sw	s0,76(sp)
20011a66:	c4aa                	sw	a0,72(sp)
20011a68:	c2ae                	sw	a1,68(sp)
20011a6a:	c0b2                	sw	a2,64(sp)
20011a6c:	de36                	sw	a3,60(sp)
20011a6e:	dc3a                	sw	a4,56(sp)
20011a70:	da3e                	sw	a5,52(sp)
20011a72:	d842                	sw	a6,48(sp)
20011a74:	d646                	sw	a7,44(sp)
20011a76:	d472                	sw	t3,40(sp)
20011a78:	d276                	sw	t4,36(sp)
20011a7a:	d07a                	sw	t5,32(sp)
20011a7c:	ce7e                	sw	t6,28(sp)
20011a7e:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20011a80:	3d3d                	jal	200118be <__metal_myhart_id>
20011a82:	872a                	mv	a4,a0
20011a84:	800007b7          	lui	a5,0x80000
20011a88:	070a                	slli	a4,a4,0x2
20011a8a:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011a8e:	97ba                	add	a5,a5,a4
20011a90:	439c                	lw	a5,0(a5)
20011a92:	faf42623          	sw	a5,-84(s0)
20011a96:	fac42783          	lw	a5,-84(s0)
20011a9a:	c785                	beqz	a5,20011ac2 <metal_software_interrupt_vector_handler+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20011a9c:	fac42503          	lw	a0,-84(s0)
20011aa0:	3b61                	jal	20011838 <__metal_driver_cpu_interrupt_controller>
20011aa2:	faa42423          	sw	a0,-88(s0)
20011aa6:	fa842783          	lw	a5,-88(s0)
20011aaa:	0e07a783          	lw	a5,224(a5)
20011aae:	faf42223          	sw	a5,-92(s0)
20011ab2:	fa842783          	lw	a5,-88(s0)
20011ab6:	0d87a783          	lw	a5,216(a5)
20011aba:	fa442583          	lw	a1,-92(s0)
20011abe:	450d                	li	a0,3
20011ac0:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:130
}
20011ac2:	0001                	nop
20011ac4:	40f6                	lw	ra,92(sp)
20011ac6:	42e6                	lw	t0,88(sp)
20011ac8:	4356                	lw	t1,84(sp)
20011aca:	43c6                	lw	t2,80(sp)
20011acc:	4436                	lw	s0,76(sp)
20011ace:	4526                	lw	a0,72(sp)
20011ad0:	4596                	lw	a1,68(sp)
20011ad2:	4606                	lw	a2,64(sp)
20011ad4:	56f2                	lw	a3,60(sp)
20011ad6:	5762                	lw	a4,56(sp)
20011ad8:	57d2                	lw	a5,52(sp)
20011ada:	5842                	lw	a6,48(sp)
20011adc:	58b2                	lw	a7,44(sp)
20011ade:	5e22                	lw	t3,40(sp)
20011ae0:	5e92                	lw	t4,36(sp)
20011ae2:	5f02                	lw	t5,32(sp)
20011ae4:	4ff2                	lw	t6,28(sp)
20011ae6:	6125                	addi	sp,sp,96
20011ae8:	30200073          	mret

20011aec <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20011aec:	7179                	addi	sp,sp,-48
20011aee:	d606                	sw	ra,44(sp)
20011af0:	d422                	sw	s0,40(sp)
20011af2:	1800                	addi	s0,sp,48
20011af4:	fca42e23          	sw	a0,-36(s0)
20011af8:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011afc:	33c9                	jal	200118be <__metal_myhart_id>
20011afe:	872a                	mv	a4,a0
20011b00:	800007b7          	lui	a5,0x80000
20011b04:	070a                	slli	a4,a4,0x2
20011b06:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011b0a:	97ba                	add	a5,a5,a4
20011b0c:	439c                	lw	a5,0(a5)
20011b0e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011b12:	342027f3          	csrr	a5,mcause
20011b16:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20011b1a:	fec42783          	lw	a5,-20(s0)
20011b1e:	c795                	beqz	a5,20011b4a <__metal_default_sw_handler+0x5e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011b20:	fec42503          	lw	a0,-20(s0)
20011b24:	3b11                	jal	20011838 <__metal_driver_cpu_interrupt_controller>
20011b26:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20011b2a:	fe842783          	lw	a5,-24(s0)
20011b2e:	3ff7f793          	andi	a5,a5,1023
20011b32:	fe442703          	lw	a4,-28(s0)
20011b36:	0e878793          	addi	a5,a5,232
20011b3a:	078a                	slli	a5,a5,0x2
20011b3c:	97ba                	add	a5,a5,a4
20011b3e:	439c                	lw	a5,0(a5)
20011b40:	fdc42583          	lw	a1,-36(s0)
20011b44:	fec42503          	lw	a0,-20(s0)
20011b48:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20011b4a:	0001                	nop
20011b4c:	50b2                	lw	ra,44(sp)
20011b4e:	5422                	lw	s0,40(sp)
20011b50:	6145                	addi	sp,sp,48
20011b52:	8082                	ret

20011b54 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20011b54:	711d                	addi	sp,sp,-96
20011b56:	ce86                	sw	ra,92(sp)
20011b58:	cc96                	sw	t0,88(sp)
20011b5a:	ca9a                	sw	t1,84(sp)
20011b5c:	c89e                	sw	t2,80(sp)
20011b5e:	c6a2                	sw	s0,76(sp)
20011b60:	c4aa                	sw	a0,72(sp)
20011b62:	c2ae                	sw	a1,68(sp)
20011b64:	c0b2                	sw	a2,64(sp)
20011b66:	de36                	sw	a3,60(sp)
20011b68:	dc3a                	sw	a4,56(sp)
20011b6a:	da3e                	sw	a5,52(sp)
20011b6c:	d842                	sw	a6,48(sp)
20011b6e:	d646                	sw	a7,44(sp)
20011b70:	d472                	sw	t3,40(sp)
20011b72:	d276                	sw	t4,36(sp)
20011b74:	d07a                	sw	t5,32(sp)
20011b76:	ce7e                	sw	t6,28(sp)
20011b78:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20011b7a:	3391                	jal	200118be <__metal_myhart_id>
20011b7c:	872a                	mv	a4,a0
20011b7e:	800007b7          	lui	a5,0x80000
20011b82:	070a                	slli	a4,a4,0x2
20011b84:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011b88:	97ba                	add	a5,a5,a4
20011b8a:	439c                	lw	a5,0(a5)
20011b8c:	faf42623          	sw	a5,-84(s0)
20011b90:	fac42783          	lw	a5,-84(s0)
20011b94:	c785                	beqz	a5,20011bbc <metal_timer_interrupt_vector_handler+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20011b96:	fac42503          	lw	a0,-84(s0)
20011b9a:	3979                	jal	20011838 <__metal_driver_cpu_interrupt_controller>
20011b9c:	faa42423          	sw	a0,-88(s0)
20011ba0:	fa842783          	lw	a5,-88(s0)
20011ba4:	1407a783          	lw	a5,320(a5)
20011ba8:	faf42223          	sw	a5,-92(s0)
20011bac:	fa842783          	lw	a5,-88(s0)
20011bb0:	1387a783          	lw	a5,312(a5)
20011bb4:	fa442583          	lw	a1,-92(s0)
20011bb8:	451d                	li	a0,7
20011bba:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:150
}
20011bbc:	0001                	nop
20011bbe:	40f6                	lw	ra,92(sp)
20011bc0:	42e6                	lw	t0,88(sp)
20011bc2:	4356                	lw	t1,84(sp)
20011bc4:	43c6                	lw	t2,80(sp)
20011bc6:	4436                	lw	s0,76(sp)
20011bc8:	4526                	lw	a0,72(sp)
20011bca:	4596                	lw	a1,68(sp)
20011bcc:	4606                	lw	a2,64(sp)
20011bce:	56f2                	lw	a3,60(sp)
20011bd0:	5762                	lw	a4,56(sp)
20011bd2:	57d2                	lw	a5,52(sp)
20011bd4:	5842                	lw	a6,48(sp)
20011bd6:	58b2                	lw	a7,44(sp)
20011bd8:	5e22                	lw	t3,40(sp)
20011bda:	5e92                	lw	t4,36(sp)
20011bdc:	5f02                	lw	t5,32(sp)
20011bde:	4ff2                	lw	t6,28(sp)
20011be0:	6125                	addi	sp,sp,96
20011be2:	30200073          	mret

20011be6 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20011be6:	1101                	addi	sp,sp,-32
20011be8:	ce22                	sw	s0,28(sp)
20011bea:	1000                	addi	s0,sp,32
20011bec:	fea42623          	sw	a0,-20(s0)
20011bf0:	feb42423          	sw	a1,-24(s0)
20011bf4:	0001                	nop
20011bf6:	4472                	lw	s0,28(sp)
20011bf8:	6105                	addi	sp,sp,32
20011bfa:	8082                	ret

20011bfc <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20011bfc:	7179                	addi	sp,sp,-48
20011bfe:	d606                	sw	ra,44(sp)
20011c00:	d422                	sw	s0,40(sp)
20011c02:	1800                	addi	s0,sp,48
20011c04:	fca42e23          	sw	a0,-36(s0)
20011c08:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20011c0c:	394d                	jal	200118be <__metal_myhart_id>
20011c0e:	87aa                	mv	a5,a0
20011c10:	853e                	mv	a0,a5
20011c12:	39b5                	jal	2001188e <__metal_driver_cpu_get>
20011c14:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20011c18:	fec42503          	lw	a0,-20(s0)
20011c1c:	276010ef          	jal	ra,20012e92 <__metal_driver_cpu_mtime_get>
20011c20:	fea42023          	sw	a0,-32(s0)
20011c24:	feb42223          	sw	a1,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20011c28:	fe042703          	lw	a4,-32(s0)
20011c2c:	fe442783          	lw	a5,-28(s0)
20011c30:	4529                	li	a0,10
20011c32:	4581                	li	a1,0
20011c34:	00a70633          	add	a2,a4,a0
20011c38:	8832                	mv	a6,a2
20011c3a:	00e83833          	sltu	a6,a6,a4
20011c3e:	00b786b3          	add	a3,a5,a1
20011c42:	00d807b3          	add	a5,a6,a3
20011c46:	86be                	mv	a3,a5
20011c48:	8732                	mv	a4,a2
20011c4a:	87b6                	mv	a5,a3
20011c4c:	85ba                	mv	a1,a4
20011c4e:	863e                	mv	a2,a5
20011c50:	fec42503          	lw	a0,-20(s0)
20011c54:	2a4010ef          	jal	ra,20012ef8 <__metal_driver_cpu_mtimecmp_set>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:160
}
20011c58:	0001                	nop
20011c5a:	50b2                	lw	ra,44(sp)
20011c5c:	5422                	lw	s0,40(sp)
20011c5e:	6145                	addi	sp,sp,48
20011c60:	8082                	ret
	...

20011c80 <__metal_exception_handler>:
__metal_exception_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20011c80:	7119                	addi	sp,sp,-128
20011c82:	de86                	sw	ra,124(sp)
20011c84:	dc96                	sw	t0,120(sp)
20011c86:	da9a                	sw	t1,116(sp)
20011c88:	d89e                	sw	t2,112(sp)
20011c8a:	d6a2                	sw	s0,108(sp)
20011c8c:	d4aa                	sw	a0,104(sp)
20011c8e:	d2ae                	sw	a1,100(sp)
20011c90:	d0b2                	sw	a2,96(sp)
20011c92:	ceb6                	sw	a3,92(sp)
20011c94:	ccba                	sw	a4,88(sp)
20011c96:	cabe                	sw	a5,84(sp)
20011c98:	c8c2                	sw	a6,80(sp)
20011c9a:	c6c6                	sw	a7,76(sp)
20011c9c:	c4f2                	sw	t3,72(sp)
20011c9e:	c2f6                	sw	t4,68(sp)
20011ca0:	c0fa                	sw	t5,64(sp)
20011ca2:	de7e                	sw	t6,60(sp)
20011ca4:	0100                	addi	s0,sp,128
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011ca6:	3921                	jal	200118be <__metal_myhart_id>
20011ca8:	872a                	mv	a4,a0
20011caa:	800007b7          	lui	a5,0x80000
20011cae:	070a                	slli	a4,a4,0x2
20011cb0:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011cb4:	97ba                	add	a5,a5,a4
20011cb6:	439c                	lw	a5,0(a5)
20011cb8:	faf42623          	sw	a5,-84(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011cbc:	342027f3          	csrr	a5,mcause
20011cc0:	faf42423          	sw	a5,-88(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20011cc4:	341027f3          	csrr	a5,mepc
20011cc8:	faf42223          	sw	a5,-92(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20011ccc:	343027f3          	csrr	a5,mtval
20011cd0:	faf42023          	sw	a5,-96(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20011cd4:	305027f3          	csrr	a5,mtvec
20011cd8:	f8f42e23          	sw	a5,-100(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20011cdc:	fac42783          	lw	a5,-84(s0)
20011ce0:	cbf5                	beqz	a5,20011dd4 <__metal_exception_handler+0x154>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011ce2:	fac42503          	lw	a0,-84(s0)
20011ce6:	3e89                	jal	20011838 <__metal_driver_cpu_interrupt_controller>
20011ce8:	f8a42c23          	sw	a0,-104(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20011cec:	fa842783          	lw	a5,-88(s0)
20011cf0:	3ff7f793          	andi	a5,a5,1023
20011cf4:	f8f42a23          	sw	a5,-108(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20011cf8:	fa842783          	lw	a5,-88(s0)
20011cfc:	0a07de63          	bgez	a5,20011db8 <__metal_exception_handler+0x138>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20011d00:	f9442703          	lw	a4,-108(s0)
20011d04:	08000793          	li	a5,128
20011d08:	02f71263          	bne	a4,a5,20011d2c <__metal_exception_handler+0xac>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20011d0c:	f9842783          	lw	a5,-104(s0)
20011d10:	3987a783          	lw	a5,920(a5)
20011d14:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20011d18:	f9842783          	lw	a5,-104(s0)
20011d1c:	3907a783          	lw	a5,912(a5)
20011d20:	f8c42583          	lw	a1,-116(s0)
20011d24:	f9442503          	lw	a0,-108(s0)
20011d28:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20011d2a:	a06d                	j	20011dd4 <__metal_exception_handler+0x154>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011d2c:	f9442703          	lw	a4,-108(s0)
20011d30:	47ad                	li	a5,11
20011d32:	00e7d763          	bge	a5,a4,20011d40 <__metal_exception_handler+0xc0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20011d36:	f9c42783          	lw	a5,-100(s0)
20011d3a:	03f7f793          	andi	a5,a5,63
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011d3e:	ef9d                	bnez	a5,20011d7c <__metal_exception_handler+0xfc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20011d40:	f9842683          	lw	a3,-104(s0)
20011d44:	f9442703          	lw	a4,-108(s0)
20011d48:	87ba                	mv	a5,a4
20011d4a:	0786                	slli	a5,a5,0x1
20011d4c:	97ba                	add	a5,a5,a4
20011d4e:	078e                	slli	a5,a5,0x3
20011d50:	97b6                	add	a5,a5,a3
20011d52:	0987a783          	lw	a5,152(a5)
20011d56:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20011d5a:	f9842683          	lw	a3,-104(s0)
20011d5e:	f9442703          	lw	a4,-108(s0)
20011d62:	87ba                	mv	a5,a4
20011d64:	0786                	slli	a5,a5,0x1
20011d66:	97ba                	add	a5,a5,a4
20011d68:	078e                	slli	a5,a5,0x3
20011d6a:	97b6                	add	a5,a5,a3
20011d6c:	0907a783          	lw	a5,144(a5)
20011d70:	f8c42583          	lw	a1,-116(s0)
20011d74:	f9442503          	lw	a0,-108(s0)
20011d78:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20011d7a:	a8a9                	j	20011dd4 <__metal_exception_handler+0x154>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20011d7c:	f9c42783          	lw	a5,-100(s0)
20011d80:	03f7f713          	andi	a4,a5,63
20011d84:	4789                	li	a5,2
20011d86:	04f71763          	bne	a4,a5,20011dd4 <__metal_exception_handler+0x154>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20011d8a:	307027f3          	csrr	a5,mtvt
20011d8e:	f8f42823          	sw	a5,-112(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011d92:	f9842783          	lw	a5,-104(s0)
20011d96:	0dc7a783          	lw	a5,220(a5)
20011d9a:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20011d9e:	f9042783          	lw	a5,-112(s0)
20011da2:	439c                	lw	a5,0(a5)
20011da4:	f8f42423          	sw	a5,-120(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20011da8:	f8842783          	lw	a5,-120(s0)
20011dac:	f8c42583          	lw	a1,-116(s0)
20011db0:	f9442503          	lw	a0,-108(s0)
20011db4:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20011db6:	a839                	j	20011dd4 <__metal_exception_handler+0x154>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20011db8:	f9842703          	lw	a4,-104(s0)
20011dbc:	f9442783          	lw	a5,-108(s0)
20011dc0:	0e878793          	addi	a5,a5,232
20011dc4:	078a                	slli	a5,a5,0x2
20011dc6:	97ba                	add	a5,a5,a4
20011dc8:	439c                	lw	a5,0(a5)
20011dca:	f9442583          	lw	a1,-108(s0)
20011dce:	fac42503          	lw	a0,-84(s0)
20011dd2:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20011dd4:	50f6                	lw	ra,124(sp)
20011dd6:	52e6                	lw	t0,120(sp)
20011dd8:	5356                	lw	t1,116(sp)
20011dda:	53c6                	lw	t2,112(sp)
20011ddc:	5436                	lw	s0,108(sp)
20011dde:	5526                	lw	a0,104(sp)
20011de0:	5596                	lw	a1,100(sp)
20011de2:	5606                	lw	a2,96(sp)
20011de4:	46f6                	lw	a3,92(sp)
20011de6:	4766                	lw	a4,88(sp)
20011de8:	47d6                	lw	a5,84(sp)
20011dea:	4846                	lw	a6,80(sp)
20011dec:	48b6                	lw	a7,76(sp)
20011dee:	4e26                	lw	t3,72(sp)
20011df0:	4e96                	lw	t4,68(sp)
20011df2:	4f06                	lw	t5,64(sp)
20011df4:	5ff2                	lw	t6,60(sp)
20011df6:	6109                	addi	sp,sp,128
20011df8:	30200073          	mret
	...

20011e76 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20011e76:	711d                	addi	sp,sp,-96
20011e78:	ce86                	sw	ra,92(sp)
20011e7a:	cc96                	sw	t0,88(sp)
20011e7c:	ca9a                	sw	t1,84(sp)
20011e7e:	c89e                	sw	t2,80(sp)
20011e80:	c6a2                	sw	s0,76(sp)
20011e82:	c4aa                	sw	a0,72(sp)
20011e84:	c2ae                	sw	a1,68(sp)
20011e86:	c0b2                	sw	a2,64(sp)
20011e88:	de36                	sw	a3,60(sp)
20011e8a:	dc3a                	sw	a4,56(sp)
20011e8c:	da3e                	sw	a5,52(sp)
20011e8e:	d842                	sw	a6,48(sp)
20011e90:	d646                	sw	a7,44(sp)
20011e92:	d472                	sw	t3,40(sp)
20011e94:	d276                	sw	t4,36(sp)
20011e96:	d07a                	sw	t5,32(sp)
20011e98:	ce7e                	sw	t6,28(sp)
20011e9a:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20011e9c:	340d                	jal	200118be <__metal_myhart_id>
20011e9e:	872a                	mv	a4,a0
20011ea0:	800007b7          	lui	a5,0x80000
20011ea4:	070a                	slli	a4,a4,0x2
20011ea6:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011eaa:	97ba                	add	a5,a5,a4
20011eac:	439c                	lw	a5,0(a5)
20011eae:	faf42623          	sw	a5,-84(s0)
20011eb2:	fac42783          	lw	a5,-84(s0)
20011eb6:	c78d                	beqz	a5,20011ee0 <metal_lc0_interrupt_vector_handler+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20011eb8:	fac42503          	lw	a0,-84(s0)
20011ebc:	97dff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20011ec0:	faa42423          	sw	a0,-88(s0)
20011ec4:	fa842783          	lw	a5,-88(s0)
20011ec8:	2187a783          	lw	a5,536(a5)
20011ecc:	faf42223          	sw	a5,-92(s0)
20011ed0:	fa842783          	lw	a5,-88(s0)
20011ed4:	2107a783          	lw	a5,528(a5)
20011ed8:	fa442583          	lw	a1,-92(s0)
20011edc:	4541                	li	a0,16
20011ede:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:216
}
20011ee0:	0001                	nop
20011ee2:	40f6                	lw	ra,92(sp)
20011ee4:	42e6                	lw	t0,88(sp)
20011ee6:	4356                	lw	t1,84(sp)
20011ee8:	43c6                	lw	t2,80(sp)
20011eea:	4436                	lw	s0,76(sp)
20011eec:	4526                	lw	a0,72(sp)
20011eee:	4596                	lw	a1,68(sp)
20011ef0:	4606                	lw	a2,64(sp)
20011ef2:	56f2                	lw	a3,60(sp)
20011ef4:	5762                	lw	a4,56(sp)
20011ef6:	57d2                	lw	a5,52(sp)
20011ef8:	5842                	lw	a6,48(sp)
20011efa:	58b2                	lw	a7,44(sp)
20011efc:	5e22                	lw	t3,40(sp)
20011efe:	5e92                	lw	t4,36(sp)
20011f00:	5f02                	lw	t5,32(sp)
20011f02:	4ff2                	lw	t6,28(sp)
20011f04:	6125                	addi	sp,sp,96
20011f06:	30200073          	mret

20011f0a <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20011f0a:	711d                	addi	sp,sp,-96
20011f0c:	ce86                	sw	ra,92(sp)
20011f0e:	cc96                	sw	t0,88(sp)
20011f10:	ca9a                	sw	t1,84(sp)
20011f12:	c89e                	sw	t2,80(sp)
20011f14:	c6a2                	sw	s0,76(sp)
20011f16:	c4aa                	sw	a0,72(sp)
20011f18:	c2ae                	sw	a1,68(sp)
20011f1a:	c0b2                	sw	a2,64(sp)
20011f1c:	de36                	sw	a3,60(sp)
20011f1e:	dc3a                	sw	a4,56(sp)
20011f20:	da3e                	sw	a5,52(sp)
20011f22:	d842                	sw	a6,48(sp)
20011f24:	d646                	sw	a7,44(sp)
20011f26:	d472                	sw	t3,40(sp)
20011f28:	d276                	sw	t4,36(sp)
20011f2a:	d07a                	sw	t5,32(sp)
20011f2c:	ce7e                	sw	t6,28(sp)
20011f2e:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20011f30:	98fff0ef          	jal	ra,200118be <__metal_myhart_id>
20011f34:	872a                	mv	a4,a0
20011f36:	800007b7          	lui	a5,0x80000
20011f3a:	070a                	slli	a4,a4,0x2
20011f3c:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011f40:	97ba                	add	a5,a5,a4
20011f42:	439c                	lw	a5,0(a5)
20011f44:	faf42623          	sw	a5,-84(s0)
20011f48:	fac42783          	lw	a5,-84(s0)
20011f4c:	c78d                	beqz	a5,20011f76 <metal_lc1_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20011f4e:	fac42503          	lw	a0,-84(s0)
20011f52:	8e7ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20011f56:	faa42423          	sw	a0,-88(s0)
20011f5a:	fa842783          	lw	a5,-88(s0)
20011f5e:	2307a783          	lw	a5,560(a5)
20011f62:	faf42223          	sw	a5,-92(s0)
20011f66:	fa842783          	lw	a5,-88(s0)
20011f6a:	2287a783          	lw	a5,552(a5)
20011f6e:	fa442583          	lw	a1,-92(s0)
20011f72:	4545                	li	a0,17
20011f74:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:221
}
20011f76:	0001                	nop
20011f78:	40f6                	lw	ra,92(sp)
20011f7a:	42e6                	lw	t0,88(sp)
20011f7c:	4356                	lw	t1,84(sp)
20011f7e:	43c6                	lw	t2,80(sp)
20011f80:	4436                	lw	s0,76(sp)
20011f82:	4526                	lw	a0,72(sp)
20011f84:	4596                	lw	a1,68(sp)
20011f86:	4606                	lw	a2,64(sp)
20011f88:	56f2                	lw	a3,60(sp)
20011f8a:	5762                	lw	a4,56(sp)
20011f8c:	57d2                	lw	a5,52(sp)
20011f8e:	5842                	lw	a6,48(sp)
20011f90:	58b2                	lw	a7,44(sp)
20011f92:	5e22                	lw	t3,40(sp)
20011f94:	5e92                	lw	t4,36(sp)
20011f96:	5f02                	lw	t5,32(sp)
20011f98:	4ff2                	lw	t6,28(sp)
20011f9a:	6125                	addi	sp,sp,96
20011f9c:	30200073          	mret

20011fa0 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20011fa0:	711d                	addi	sp,sp,-96
20011fa2:	ce86                	sw	ra,92(sp)
20011fa4:	cc96                	sw	t0,88(sp)
20011fa6:	ca9a                	sw	t1,84(sp)
20011fa8:	c89e                	sw	t2,80(sp)
20011faa:	c6a2                	sw	s0,76(sp)
20011fac:	c4aa                	sw	a0,72(sp)
20011fae:	c2ae                	sw	a1,68(sp)
20011fb0:	c0b2                	sw	a2,64(sp)
20011fb2:	de36                	sw	a3,60(sp)
20011fb4:	dc3a                	sw	a4,56(sp)
20011fb6:	da3e                	sw	a5,52(sp)
20011fb8:	d842                	sw	a6,48(sp)
20011fba:	d646                	sw	a7,44(sp)
20011fbc:	d472                	sw	t3,40(sp)
20011fbe:	d276                	sw	t4,36(sp)
20011fc0:	d07a                	sw	t5,32(sp)
20011fc2:	ce7e                	sw	t6,28(sp)
20011fc4:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20011fc6:	8f9ff0ef          	jal	ra,200118be <__metal_myhart_id>
20011fca:	872a                	mv	a4,a0
20011fcc:	800007b7          	lui	a5,0x80000
20011fd0:	070a                	slli	a4,a4,0x2
20011fd2:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20011fd6:	97ba                	add	a5,a5,a4
20011fd8:	439c                	lw	a5,0(a5)
20011fda:	faf42623          	sw	a5,-84(s0)
20011fde:	fac42783          	lw	a5,-84(s0)
20011fe2:	c78d                	beqz	a5,2001200c <metal_lc2_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20011fe4:	fac42503          	lw	a0,-84(s0)
20011fe8:	851ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20011fec:	faa42423          	sw	a0,-88(s0)
20011ff0:	fa842783          	lw	a5,-88(s0)
20011ff4:	2487a783          	lw	a5,584(a5)
20011ff8:	faf42223          	sw	a5,-92(s0)
20011ffc:	fa842783          	lw	a5,-88(s0)
20012000:	2407a783          	lw	a5,576(a5)
20012004:	fa442583          	lw	a1,-92(s0)
20012008:	4549                	li	a0,18
2001200a:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:226
}
2001200c:	0001                	nop
2001200e:	40f6                	lw	ra,92(sp)
20012010:	42e6                	lw	t0,88(sp)
20012012:	4356                	lw	t1,84(sp)
20012014:	43c6                	lw	t2,80(sp)
20012016:	4436                	lw	s0,76(sp)
20012018:	4526                	lw	a0,72(sp)
2001201a:	4596                	lw	a1,68(sp)
2001201c:	4606                	lw	a2,64(sp)
2001201e:	56f2                	lw	a3,60(sp)
20012020:	5762                	lw	a4,56(sp)
20012022:	57d2                	lw	a5,52(sp)
20012024:	5842                	lw	a6,48(sp)
20012026:	58b2                	lw	a7,44(sp)
20012028:	5e22                	lw	t3,40(sp)
2001202a:	5e92                	lw	t4,36(sp)
2001202c:	5f02                	lw	t5,32(sp)
2001202e:	4ff2                	lw	t6,28(sp)
20012030:	6125                	addi	sp,sp,96
20012032:	30200073          	mret

20012036 <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20012036:	711d                	addi	sp,sp,-96
20012038:	ce86                	sw	ra,92(sp)
2001203a:	cc96                	sw	t0,88(sp)
2001203c:	ca9a                	sw	t1,84(sp)
2001203e:	c89e                	sw	t2,80(sp)
20012040:	c6a2                	sw	s0,76(sp)
20012042:	c4aa                	sw	a0,72(sp)
20012044:	c2ae                	sw	a1,68(sp)
20012046:	c0b2                	sw	a2,64(sp)
20012048:	de36                	sw	a3,60(sp)
2001204a:	dc3a                	sw	a4,56(sp)
2001204c:	da3e                	sw	a5,52(sp)
2001204e:	d842                	sw	a6,48(sp)
20012050:	d646                	sw	a7,44(sp)
20012052:	d472                	sw	t3,40(sp)
20012054:	d276                	sw	t4,36(sp)
20012056:	d07a                	sw	t5,32(sp)
20012058:	ce7e                	sw	t6,28(sp)
2001205a:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
2001205c:	863ff0ef          	jal	ra,200118be <__metal_myhart_id>
20012060:	872a                	mv	a4,a0
20012062:	800007b7          	lui	a5,0x80000
20012066:	070a                	slli	a4,a4,0x2
20012068:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
2001206c:	97ba                	add	a5,a5,a4
2001206e:	439c                	lw	a5,0(a5)
20012070:	faf42623          	sw	a5,-84(s0)
20012074:	fac42783          	lw	a5,-84(s0)
20012078:	c78d                	beqz	a5,200120a2 <metal_lc3_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
2001207a:	fac42503          	lw	a0,-84(s0)
2001207e:	fbaff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012082:	faa42423          	sw	a0,-88(s0)
20012086:	fa842783          	lw	a5,-88(s0)
2001208a:	2607a783          	lw	a5,608(a5)
2001208e:	faf42223          	sw	a5,-92(s0)
20012092:	fa842783          	lw	a5,-88(s0)
20012096:	2587a783          	lw	a5,600(a5)
2001209a:	fa442583          	lw	a1,-92(s0)
2001209e:	454d                	li	a0,19
200120a0:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:231
}
200120a2:	0001                	nop
200120a4:	40f6                	lw	ra,92(sp)
200120a6:	42e6                	lw	t0,88(sp)
200120a8:	4356                	lw	t1,84(sp)
200120aa:	43c6                	lw	t2,80(sp)
200120ac:	4436                	lw	s0,76(sp)
200120ae:	4526                	lw	a0,72(sp)
200120b0:	4596                	lw	a1,68(sp)
200120b2:	4606                	lw	a2,64(sp)
200120b4:	56f2                	lw	a3,60(sp)
200120b6:	5762                	lw	a4,56(sp)
200120b8:	57d2                	lw	a5,52(sp)
200120ba:	5842                	lw	a6,48(sp)
200120bc:	58b2                	lw	a7,44(sp)
200120be:	5e22                	lw	t3,40(sp)
200120c0:	5e92                	lw	t4,36(sp)
200120c2:	5f02                	lw	t5,32(sp)
200120c4:	4ff2                	lw	t6,28(sp)
200120c6:	6125                	addi	sp,sp,96
200120c8:	30200073          	mret

200120cc <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
200120cc:	711d                	addi	sp,sp,-96
200120ce:	ce86                	sw	ra,92(sp)
200120d0:	cc96                	sw	t0,88(sp)
200120d2:	ca9a                	sw	t1,84(sp)
200120d4:	c89e                	sw	t2,80(sp)
200120d6:	c6a2                	sw	s0,76(sp)
200120d8:	c4aa                	sw	a0,72(sp)
200120da:	c2ae                	sw	a1,68(sp)
200120dc:	c0b2                	sw	a2,64(sp)
200120de:	de36                	sw	a3,60(sp)
200120e0:	dc3a                	sw	a4,56(sp)
200120e2:	da3e                	sw	a5,52(sp)
200120e4:	d842                	sw	a6,48(sp)
200120e6:	d646                	sw	a7,44(sp)
200120e8:	d472                	sw	t3,40(sp)
200120ea:	d276                	sw	t4,36(sp)
200120ec:	d07a                	sw	t5,32(sp)
200120ee:	ce7e                	sw	t6,28(sp)
200120f0:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
200120f2:	fccff0ef          	jal	ra,200118be <__metal_myhart_id>
200120f6:	872a                	mv	a4,a0
200120f8:	800007b7          	lui	a5,0x80000
200120fc:	070a                	slli	a4,a4,0x2
200120fe:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20012102:	97ba                	add	a5,a5,a4
20012104:	439c                	lw	a5,0(a5)
20012106:	faf42623          	sw	a5,-84(s0)
2001210a:	fac42783          	lw	a5,-84(s0)
2001210e:	c78d                	beqz	a5,20012138 <metal_lc4_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20012110:	fac42503          	lw	a0,-84(s0)
20012114:	f24ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012118:	faa42423          	sw	a0,-88(s0)
2001211c:	fa842783          	lw	a5,-88(s0)
20012120:	2787a783          	lw	a5,632(a5)
20012124:	faf42223          	sw	a5,-92(s0)
20012128:	fa842783          	lw	a5,-88(s0)
2001212c:	2707a783          	lw	a5,624(a5)
20012130:	fa442583          	lw	a1,-92(s0)
20012134:	4551                	li	a0,20
20012136:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:236
}
20012138:	0001                	nop
2001213a:	40f6                	lw	ra,92(sp)
2001213c:	42e6                	lw	t0,88(sp)
2001213e:	4356                	lw	t1,84(sp)
20012140:	43c6                	lw	t2,80(sp)
20012142:	4436                	lw	s0,76(sp)
20012144:	4526                	lw	a0,72(sp)
20012146:	4596                	lw	a1,68(sp)
20012148:	4606                	lw	a2,64(sp)
2001214a:	56f2                	lw	a3,60(sp)
2001214c:	5762                	lw	a4,56(sp)
2001214e:	57d2                	lw	a5,52(sp)
20012150:	5842                	lw	a6,48(sp)
20012152:	58b2                	lw	a7,44(sp)
20012154:	5e22                	lw	t3,40(sp)
20012156:	5e92                	lw	t4,36(sp)
20012158:	5f02                	lw	t5,32(sp)
2001215a:	4ff2                	lw	t6,28(sp)
2001215c:	6125                	addi	sp,sp,96
2001215e:	30200073          	mret

20012162 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20012162:	711d                	addi	sp,sp,-96
20012164:	ce86                	sw	ra,92(sp)
20012166:	cc96                	sw	t0,88(sp)
20012168:	ca9a                	sw	t1,84(sp)
2001216a:	c89e                	sw	t2,80(sp)
2001216c:	c6a2                	sw	s0,76(sp)
2001216e:	c4aa                	sw	a0,72(sp)
20012170:	c2ae                	sw	a1,68(sp)
20012172:	c0b2                	sw	a2,64(sp)
20012174:	de36                	sw	a3,60(sp)
20012176:	dc3a                	sw	a4,56(sp)
20012178:	da3e                	sw	a5,52(sp)
2001217a:	d842                	sw	a6,48(sp)
2001217c:	d646                	sw	a7,44(sp)
2001217e:	d472                	sw	t3,40(sp)
20012180:	d276                	sw	t4,36(sp)
20012182:	d07a                	sw	t5,32(sp)
20012184:	ce7e                	sw	t6,28(sp)
20012186:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20012188:	f36ff0ef          	jal	ra,200118be <__metal_myhart_id>
2001218c:	872a                	mv	a4,a0
2001218e:	800007b7          	lui	a5,0x80000
20012192:	070a                	slli	a4,a4,0x2
20012194:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20012198:	97ba                	add	a5,a5,a4
2001219a:	439c                	lw	a5,0(a5)
2001219c:	faf42623          	sw	a5,-84(s0)
200121a0:	fac42783          	lw	a5,-84(s0)
200121a4:	c78d                	beqz	a5,200121ce <metal_lc5_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200121a6:	fac42503          	lw	a0,-84(s0)
200121aa:	e8eff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
200121ae:	faa42423          	sw	a0,-88(s0)
200121b2:	fa842783          	lw	a5,-88(s0)
200121b6:	2907a783          	lw	a5,656(a5)
200121ba:	faf42223          	sw	a5,-92(s0)
200121be:	fa842783          	lw	a5,-88(s0)
200121c2:	2887a783          	lw	a5,648(a5)
200121c6:	fa442583          	lw	a1,-92(s0)
200121ca:	4555                	li	a0,21
200121cc:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:241
}
200121ce:	0001                	nop
200121d0:	40f6                	lw	ra,92(sp)
200121d2:	42e6                	lw	t0,88(sp)
200121d4:	4356                	lw	t1,84(sp)
200121d6:	43c6                	lw	t2,80(sp)
200121d8:	4436                	lw	s0,76(sp)
200121da:	4526                	lw	a0,72(sp)
200121dc:	4596                	lw	a1,68(sp)
200121de:	4606                	lw	a2,64(sp)
200121e0:	56f2                	lw	a3,60(sp)
200121e2:	5762                	lw	a4,56(sp)
200121e4:	57d2                	lw	a5,52(sp)
200121e6:	5842                	lw	a6,48(sp)
200121e8:	58b2                	lw	a7,44(sp)
200121ea:	5e22                	lw	t3,40(sp)
200121ec:	5e92                	lw	t4,36(sp)
200121ee:	5f02                	lw	t5,32(sp)
200121f0:	4ff2                	lw	t6,28(sp)
200121f2:	6125                	addi	sp,sp,96
200121f4:	30200073          	mret

200121f8 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200121f8:	711d                	addi	sp,sp,-96
200121fa:	ce86                	sw	ra,92(sp)
200121fc:	cc96                	sw	t0,88(sp)
200121fe:	ca9a                	sw	t1,84(sp)
20012200:	c89e                	sw	t2,80(sp)
20012202:	c6a2                	sw	s0,76(sp)
20012204:	c4aa                	sw	a0,72(sp)
20012206:	c2ae                	sw	a1,68(sp)
20012208:	c0b2                	sw	a2,64(sp)
2001220a:	de36                	sw	a3,60(sp)
2001220c:	dc3a                	sw	a4,56(sp)
2001220e:	da3e                	sw	a5,52(sp)
20012210:	d842                	sw	a6,48(sp)
20012212:	d646                	sw	a7,44(sp)
20012214:	d472                	sw	t3,40(sp)
20012216:	d276                	sw	t4,36(sp)
20012218:	d07a                	sw	t5,32(sp)
2001221a:	ce7e                	sw	t6,28(sp)
2001221c:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
2001221e:	ea0ff0ef          	jal	ra,200118be <__metal_myhart_id>
20012222:	872a                	mv	a4,a0
20012224:	800007b7          	lui	a5,0x80000
20012228:	070a                	slli	a4,a4,0x2
2001222a:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
2001222e:	97ba                	add	a5,a5,a4
20012230:	439c                	lw	a5,0(a5)
20012232:	faf42623          	sw	a5,-84(s0)
20012236:	fac42783          	lw	a5,-84(s0)
2001223a:	c78d                	beqz	a5,20012264 <metal_lc6_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
2001223c:	fac42503          	lw	a0,-84(s0)
20012240:	df8ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012244:	faa42423          	sw	a0,-88(s0)
20012248:	fa842783          	lw	a5,-88(s0)
2001224c:	2a87a783          	lw	a5,680(a5)
20012250:	faf42223          	sw	a5,-92(s0)
20012254:	fa842783          	lw	a5,-88(s0)
20012258:	2a07a783          	lw	a5,672(a5)
2001225c:	fa442583          	lw	a1,-92(s0)
20012260:	4559                	li	a0,22
20012262:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:246
}
20012264:	0001                	nop
20012266:	40f6                	lw	ra,92(sp)
20012268:	42e6                	lw	t0,88(sp)
2001226a:	4356                	lw	t1,84(sp)
2001226c:	43c6                	lw	t2,80(sp)
2001226e:	4436                	lw	s0,76(sp)
20012270:	4526                	lw	a0,72(sp)
20012272:	4596                	lw	a1,68(sp)
20012274:	4606                	lw	a2,64(sp)
20012276:	56f2                	lw	a3,60(sp)
20012278:	5762                	lw	a4,56(sp)
2001227a:	57d2                	lw	a5,52(sp)
2001227c:	5842                	lw	a6,48(sp)
2001227e:	58b2                	lw	a7,44(sp)
20012280:	5e22                	lw	t3,40(sp)
20012282:	5e92                	lw	t4,36(sp)
20012284:	5f02                	lw	t5,32(sp)
20012286:	4ff2                	lw	t6,28(sp)
20012288:	6125                	addi	sp,sp,96
2001228a:	30200073          	mret

2001228e <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
2001228e:	711d                	addi	sp,sp,-96
20012290:	ce86                	sw	ra,92(sp)
20012292:	cc96                	sw	t0,88(sp)
20012294:	ca9a                	sw	t1,84(sp)
20012296:	c89e                	sw	t2,80(sp)
20012298:	c6a2                	sw	s0,76(sp)
2001229a:	c4aa                	sw	a0,72(sp)
2001229c:	c2ae                	sw	a1,68(sp)
2001229e:	c0b2                	sw	a2,64(sp)
200122a0:	de36                	sw	a3,60(sp)
200122a2:	dc3a                	sw	a4,56(sp)
200122a4:	da3e                	sw	a5,52(sp)
200122a6:	d842                	sw	a6,48(sp)
200122a8:	d646                	sw	a7,44(sp)
200122aa:	d472                	sw	t3,40(sp)
200122ac:	d276                	sw	t4,36(sp)
200122ae:	d07a                	sw	t5,32(sp)
200122b0:	ce7e                	sw	t6,28(sp)
200122b2:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200122b4:	e0aff0ef          	jal	ra,200118be <__metal_myhart_id>
200122b8:	872a                	mv	a4,a0
200122ba:	800007b7          	lui	a5,0x80000
200122be:	070a                	slli	a4,a4,0x2
200122c0:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
200122c4:	97ba                	add	a5,a5,a4
200122c6:	439c                	lw	a5,0(a5)
200122c8:	faf42623          	sw	a5,-84(s0)
200122cc:	fac42783          	lw	a5,-84(s0)
200122d0:	c78d                	beqz	a5,200122fa <metal_lc7_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200122d2:	fac42503          	lw	a0,-84(s0)
200122d6:	d62ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
200122da:	faa42423          	sw	a0,-88(s0)
200122de:	fa842783          	lw	a5,-88(s0)
200122e2:	2c07a783          	lw	a5,704(a5)
200122e6:	faf42223          	sw	a5,-92(s0)
200122ea:	fa842783          	lw	a5,-88(s0)
200122ee:	2b87a783          	lw	a5,696(a5)
200122f2:	fa442583          	lw	a1,-92(s0)
200122f6:	455d                	li	a0,23
200122f8:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:251
}
200122fa:	0001                	nop
200122fc:	40f6                	lw	ra,92(sp)
200122fe:	42e6                	lw	t0,88(sp)
20012300:	4356                	lw	t1,84(sp)
20012302:	43c6                	lw	t2,80(sp)
20012304:	4436                	lw	s0,76(sp)
20012306:	4526                	lw	a0,72(sp)
20012308:	4596                	lw	a1,68(sp)
2001230a:	4606                	lw	a2,64(sp)
2001230c:	56f2                	lw	a3,60(sp)
2001230e:	5762                	lw	a4,56(sp)
20012310:	57d2                	lw	a5,52(sp)
20012312:	5842                	lw	a6,48(sp)
20012314:	58b2                	lw	a7,44(sp)
20012316:	5e22                	lw	t3,40(sp)
20012318:	5e92                	lw	t4,36(sp)
2001231a:	5f02                	lw	t5,32(sp)
2001231c:	4ff2                	lw	t6,28(sp)
2001231e:	6125                	addi	sp,sp,96
20012320:	30200073          	mret

20012324 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20012324:	711d                	addi	sp,sp,-96
20012326:	ce86                	sw	ra,92(sp)
20012328:	cc96                	sw	t0,88(sp)
2001232a:	ca9a                	sw	t1,84(sp)
2001232c:	c89e                	sw	t2,80(sp)
2001232e:	c6a2                	sw	s0,76(sp)
20012330:	c4aa                	sw	a0,72(sp)
20012332:	c2ae                	sw	a1,68(sp)
20012334:	c0b2                	sw	a2,64(sp)
20012336:	de36                	sw	a3,60(sp)
20012338:	dc3a                	sw	a4,56(sp)
2001233a:	da3e                	sw	a5,52(sp)
2001233c:	d842                	sw	a6,48(sp)
2001233e:	d646                	sw	a7,44(sp)
20012340:	d472                	sw	t3,40(sp)
20012342:	d276                	sw	t4,36(sp)
20012344:	d07a                	sw	t5,32(sp)
20012346:	ce7e                	sw	t6,28(sp)
20012348:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2001234a:	d74ff0ef          	jal	ra,200118be <__metal_myhart_id>
2001234e:	872a                	mv	a4,a0
20012350:	800007b7          	lui	a5,0x80000
20012354:	070a                	slli	a4,a4,0x2
20012356:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
2001235a:	97ba                	add	a5,a5,a4
2001235c:	439c                	lw	a5,0(a5)
2001235e:	faf42623          	sw	a5,-84(s0)
20012362:	fac42783          	lw	a5,-84(s0)
20012366:	c78d                	beqz	a5,20012390 <metal_lc8_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20012368:	fac42503          	lw	a0,-84(s0)
2001236c:	cccff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012370:	faa42423          	sw	a0,-88(s0)
20012374:	fa842783          	lw	a5,-88(s0)
20012378:	2d87a783          	lw	a5,728(a5)
2001237c:	faf42223          	sw	a5,-92(s0)
20012380:	fa842783          	lw	a5,-88(s0)
20012384:	2d07a783          	lw	a5,720(a5)
20012388:	fa442583          	lw	a1,-92(s0)
2001238c:	4561                	li	a0,24
2001238e:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:256
}
20012390:	0001                	nop
20012392:	40f6                	lw	ra,92(sp)
20012394:	42e6                	lw	t0,88(sp)
20012396:	4356                	lw	t1,84(sp)
20012398:	43c6                	lw	t2,80(sp)
2001239a:	4436                	lw	s0,76(sp)
2001239c:	4526                	lw	a0,72(sp)
2001239e:	4596                	lw	a1,68(sp)
200123a0:	4606                	lw	a2,64(sp)
200123a2:	56f2                	lw	a3,60(sp)
200123a4:	5762                	lw	a4,56(sp)
200123a6:	57d2                	lw	a5,52(sp)
200123a8:	5842                	lw	a6,48(sp)
200123aa:	58b2                	lw	a7,44(sp)
200123ac:	5e22                	lw	t3,40(sp)
200123ae:	5e92                	lw	t4,36(sp)
200123b0:	5f02                	lw	t5,32(sp)
200123b2:	4ff2                	lw	t6,28(sp)
200123b4:	6125                	addi	sp,sp,96
200123b6:	30200073          	mret

200123ba <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
200123ba:	711d                	addi	sp,sp,-96
200123bc:	ce86                	sw	ra,92(sp)
200123be:	cc96                	sw	t0,88(sp)
200123c0:	ca9a                	sw	t1,84(sp)
200123c2:	c89e                	sw	t2,80(sp)
200123c4:	c6a2                	sw	s0,76(sp)
200123c6:	c4aa                	sw	a0,72(sp)
200123c8:	c2ae                	sw	a1,68(sp)
200123ca:	c0b2                	sw	a2,64(sp)
200123cc:	de36                	sw	a3,60(sp)
200123ce:	dc3a                	sw	a4,56(sp)
200123d0:	da3e                	sw	a5,52(sp)
200123d2:	d842                	sw	a6,48(sp)
200123d4:	d646                	sw	a7,44(sp)
200123d6:	d472                	sw	t3,40(sp)
200123d8:	d276                	sw	t4,36(sp)
200123da:	d07a                	sw	t5,32(sp)
200123dc:	ce7e                	sw	t6,28(sp)
200123de:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
200123e0:	cdeff0ef          	jal	ra,200118be <__metal_myhart_id>
200123e4:	872a                	mv	a4,a0
200123e6:	800007b7          	lui	a5,0x80000
200123ea:	070a                	slli	a4,a4,0x2
200123ec:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
200123f0:	97ba                	add	a5,a5,a4
200123f2:	439c                	lw	a5,0(a5)
200123f4:	faf42623          	sw	a5,-84(s0)
200123f8:	fac42783          	lw	a5,-84(s0)
200123fc:	c78d                	beqz	a5,20012426 <metal_lc9_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
200123fe:	fac42503          	lw	a0,-84(s0)
20012402:	c36ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012406:	faa42423          	sw	a0,-88(s0)
2001240a:	fa842783          	lw	a5,-88(s0)
2001240e:	2f07a783          	lw	a5,752(a5)
20012412:	faf42223          	sw	a5,-92(s0)
20012416:	fa842783          	lw	a5,-88(s0)
2001241a:	2e87a783          	lw	a5,744(a5)
2001241e:	fa442583          	lw	a1,-92(s0)
20012422:	4565                	li	a0,25
20012424:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:261
}
20012426:	0001                	nop
20012428:	40f6                	lw	ra,92(sp)
2001242a:	42e6                	lw	t0,88(sp)
2001242c:	4356                	lw	t1,84(sp)
2001242e:	43c6                	lw	t2,80(sp)
20012430:	4436                	lw	s0,76(sp)
20012432:	4526                	lw	a0,72(sp)
20012434:	4596                	lw	a1,68(sp)
20012436:	4606                	lw	a2,64(sp)
20012438:	56f2                	lw	a3,60(sp)
2001243a:	5762                	lw	a4,56(sp)
2001243c:	57d2                	lw	a5,52(sp)
2001243e:	5842                	lw	a6,48(sp)
20012440:	58b2                	lw	a7,44(sp)
20012442:	5e22                	lw	t3,40(sp)
20012444:	5e92                	lw	t4,36(sp)
20012446:	5f02                	lw	t5,32(sp)
20012448:	4ff2                	lw	t6,28(sp)
2001244a:	6125                	addi	sp,sp,96
2001244c:	30200073          	mret

20012450 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20012450:	711d                	addi	sp,sp,-96
20012452:	ce86                	sw	ra,92(sp)
20012454:	cc96                	sw	t0,88(sp)
20012456:	ca9a                	sw	t1,84(sp)
20012458:	c89e                	sw	t2,80(sp)
2001245a:	c6a2                	sw	s0,76(sp)
2001245c:	c4aa                	sw	a0,72(sp)
2001245e:	c2ae                	sw	a1,68(sp)
20012460:	c0b2                	sw	a2,64(sp)
20012462:	de36                	sw	a3,60(sp)
20012464:	dc3a                	sw	a4,56(sp)
20012466:	da3e                	sw	a5,52(sp)
20012468:	d842                	sw	a6,48(sp)
2001246a:	d646                	sw	a7,44(sp)
2001246c:	d472                	sw	t3,40(sp)
2001246e:	d276                	sw	t4,36(sp)
20012470:	d07a                	sw	t5,32(sp)
20012472:	ce7e                	sw	t6,28(sp)
20012474:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20012476:	c48ff0ef          	jal	ra,200118be <__metal_myhart_id>
2001247a:	872a                	mv	a4,a0
2001247c:	800007b7          	lui	a5,0x80000
20012480:	070a                	slli	a4,a4,0x2
20012482:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20012486:	97ba                	add	a5,a5,a4
20012488:	439c                	lw	a5,0(a5)
2001248a:	faf42623          	sw	a5,-84(s0)
2001248e:	fac42783          	lw	a5,-84(s0)
20012492:	c78d                	beqz	a5,200124bc <metal_lc10_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20012494:	fac42503          	lw	a0,-84(s0)
20012498:	ba0ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
2001249c:	faa42423          	sw	a0,-88(s0)
200124a0:	fa842783          	lw	a5,-88(s0)
200124a4:	3087a783          	lw	a5,776(a5)
200124a8:	faf42223          	sw	a5,-92(s0)
200124ac:	fa842783          	lw	a5,-88(s0)
200124b0:	3007a783          	lw	a5,768(a5)
200124b4:	fa442583          	lw	a1,-92(s0)
200124b8:	4569                	li	a0,26
200124ba:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:267
}
200124bc:	0001                	nop
200124be:	40f6                	lw	ra,92(sp)
200124c0:	42e6                	lw	t0,88(sp)
200124c2:	4356                	lw	t1,84(sp)
200124c4:	43c6                	lw	t2,80(sp)
200124c6:	4436                	lw	s0,76(sp)
200124c8:	4526                	lw	a0,72(sp)
200124ca:	4596                	lw	a1,68(sp)
200124cc:	4606                	lw	a2,64(sp)
200124ce:	56f2                	lw	a3,60(sp)
200124d0:	5762                	lw	a4,56(sp)
200124d2:	57d2                	lw	a5,52(sp)
200124d4:	5842                	lw	a6,48(sp)
200124d6:	58b2                	lw	a7,44(sp)
200124d8:	5e22                	lw	t3,40(sp)
200124da:	5e92                	lw	t4,36(sp)
200124dc:	5f02                	lw	t5,32(sp)
200124de:	4ff2                	lw	t6,28(sp)
200124e0:	6125                	addi	sp,sp,96
200124e2:	30200073          	mret

200124e6 <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
200124e6:	711d                	addi	sp,sp,-96
200124e8:	ce86                	sw	ra,92(sp)
200124ea:	cc96                	sw	t0,88(sp)
200124ec:	ca9a                	sw	t1,84(sp)
200124ee:	c89e                	sw	t2,80(sp)
200124f0:	c6a2                	sw	s0,76(sp)
200124f2:	c4aa                	sw	a0,72(sp)
200124f4:	c2ae                	sw	a1,68(sp)
200124f6:	c0b2                	sw	a2,64(sp)
200124f8:	de36                	sw	a3,60(sp)
200124fa:	dc3a                	sw	a4,56(sp)
200124fc:	da3e                	sw	a5,52(sp)
200124fe:	d842                	sw	a6,48(sp)
20012500:	d646                	sw	a7,44(sp)
20012502:	d472                	sw	t3,40(sp)
20012504:	d276                	sw	t4,36(sp)
20012506:	d07a                	sw	t5,32(sp)
20012508:	ce7e                	sw	t6,28(sp)
2001250a:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
2001250c:	bb2ff0ef          	jal	ra,200118be <__metal_myhart_id>
20012510:	872a                	mv	a4,a0
20012512:	800007b7          	lui	a5,0x80000
20012516:	070a                	slli	a4,a4,0x2
20012518:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
2001251c:	97ba                	add	a5,a5,a4
2001251e:	439c                	lw	a5,0(a5)
20012520:	faf42623          	sw	a5,-84(s0)
20012524:	fac42783          	lw	a5,-84(s0)
20012528:	c78d                	beqz	a5,20012552 <metal_lc11_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
2001252a:	fac42503          	lw	a0,-84(s0)
2001252e:	b0aff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012532:	faa42423          	sw	a0,-88(s0)
20012536:	fa842783          	lw	a5,-88(s0)
2001253a:	3207a783          	lw	a5,800(a5)
2001253e:	faf42223          	sw	a5,-92(s0)
20012542:	fa842783          	lw	a5,-88(s0)
20012546:	3187a783          	lw	a5,792(a5)
2001254a:	fa442583          	lw	a1,-92(s0)
2001254e:	456d                	li	a0,27
20012550:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:273
}
20012552:	0001                	nop
20012554:	40f6                	lw	ra,92(sp)
20012556:	42e6                	lw	t0,88(sp)
20012558:	4356                	lw	t1,84(sp)
2001255a:	43c6                	lw	t2,80(sp)
2001255c:	4436                	lw	s0,76(sp)
2001255e:	4526                	lw	a0,72(sp)
20012560:	4596                	lw	a1,68(sp)
20012562:	4606                	lw	a2,64(sp)
20012564:	56f2                	lw	a3,60(sp)
20012566:	5762                	lw	a4,56(sp)
20012568:	57d2                	lw	a5,52(sp)
2001256a:	5842                	lw	a6,48(sp)
2001256c:	58b2                	lw	a7,44(sp)
2001256e:	5e22                	lw	t3,40(sp)
20012570:	5e92                	lw	t4,36(sp)
20012572:	5f02                	lw	t5,32(sp)
20012574:	4ff2                	lw	t6,28(sp)
20012576:	6125                	addi	sp,sp,96
20012578:	30200073          	mret

2001257c <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
2001257c:	711d                	addi	sp,sp,-96
2001257e:	ce86                	sw	ra,92(sp)
20012580:	cc96                	sw	t0,88(sp)
20012582:	ca9a                	sw	t1,84(sp)
20012584:	c89e                	sw	t2,80(sp)
20012586:	c6a2                	sw	s0,76(sp)
20012588:	c4aa                	sw	a0,72(sp)
2001258a:	c2ae                	sw	a1,68(sp)
2001258c:	c0b2                	sw	a2,64(sp)
2001258e:	de36                	sw	a3,60(sp)
20012590:	dc3a                	sw	a4,56(sp)
20012592:	da3e                	sw	a5,52(sp)
20012594:	d842                	sw	a6,48(sp)
20012596:	d646                	sw	a7,44(sp)
20012598:	d472                	sw	t3,40(sp)
2001259a:	d276                	sw	t4,36(sp)
2001259c:	d07a                	sw	t5,32(sp)
2001259e:	ce7e                	sw	t6,28(sp)
200125a0:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
200125a2:	b1cff0ef          	jal	ra,200118be <__metal_myhart_id>
200125a6:	872a                	mv	a4,a0
200125a8:	800007b7          	lui	a5,0x80000
200125ac:	070a                	slli	a4,a4,0x2
200125ae:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
200125b2:	97ba                	add	a5,a5,a4
200125b4:	439c                	lw	a5,0(a5)
200125b6:	faf42623          	sw	a5,-84(s0)
200125ba:	fac42783          	lw	a5,-84(s0)
200125be:	c78d                	beqz	a5,200125e8 <metal_lc12_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
200125c0:	fac42503          	lw	a0,-84(s0)
200125c4:	a74ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
200125c8:	faa42423          	sw	a0,-88(s0)
200125cc:	fa842783          	lw	a5,-88(s0)
200125d0:	3387a783          	lw	a5,824(a5)
200125d4:	faf42223          	sw	a5,-92(s0)
200125d8:	fa842783          	lw	a5,-88(s0)
200125dc:	3307a783          	lw	a5,816(a5)
200125e0:	fa442583          	lw	a1,-92(s0)
200125e4:	4571                	li	a0,28
200125e6:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:279
}
200125e8:	0001                	nop
200125ea:	40f6                	lw	ra,92(sp)
200125ec:	42e6                	lw	t0,88(sp)
200125ee:	4356                	lw	t1,84(sp)
200125f0:	43c6                	lw	t2,80(sp)
200125f2:	4436                	lw	s0,76(sp)
200125f4:	4526                	lw	a0,72(sp)
200125f6:	4596                	lw	a1,68(sp)
200125f8:	4606                	lw	a2,64(sp)
200125fa:	56f2                	lw	a3,60(sp)
200125fc:	5762                	lw	a4,56(sp)
200125fe:	57d2                	lw	a5,52(sp)
20012600:	5842                	lw	a6,48(sp)
20012602:	58b2                	lw	a7,44(sp)
20012604:	5e22                	lw	t3,40(sp)
20012606:	5e92                	lw	t4,36(sp)
20012608:	5f02                	lw	t5,32(sp)
2001260a:	4ff2                	lw	t6,28(sp)
2001260c:	6125                	addi	sp,sp,96
2001260e:	30200073          	mret

20012612 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20012612:	711d                	addi	sp,sp,-96
20012614:	ce86                	sw	ra,92(sp)
20012616:	cc96                	sw	t0,88(sp)
20012618:	ca9a                	sw	t1,84(sp)
2001261a:	c89e                	sw	t2,80(sp)
2001261c:	c6a2                	sw	s0,76(sp)
2001261e:	c4aa                	sw	a0,72(sp)
20012620:	c2ae                	sw	a1,68(sp)
20012622:	c0b2                	sw	a2,64(sp)
20012624:	de36                	sw	a3,60(sp)
20012626:	dc3a                	sw	a4,56(sp)
20012628:	da3e                	sw	a5,52(sp)
2001262a:	d842                	sw	a6,48(sp)
2001262c:	d646                	sw	a7,44(sp)
2001262e:	d472                	sw	t3,40(sp)
20012630:	d276                	sw	t4,36(sp)
20012632:	d07a                	sw	t5,32(sp)
20012634:	ce7e                	sw	t6,28(sp)
20012636:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20012638:	a86ff0ef          	jal	ra,200118be <__metal_myhart_id>
2001263c:	872a                	mv	a4,a0
2001263e:	800007b7          	lui	a5,0x80000
20012642:	070a                	slli	a4,a4,0x2
20012644:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20012648:	97ba                	add	a5,a5,a4
2001264a:	439c                	lw	a5,0(a5)
2001264c:	faf42623          	sw	a5,-84(s0)
20012650:	fac42783          	lw	a5,-84(s0)
20012654:	c78d                	beqz	a5,2001267e <metal_lc13_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20012656:	fac42503          	lw	a0,-84(s0)
2001265a:	9deff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
2001265e:	faa42423          	sw	a0,-88(s0)
20012662:	fa842783          	lw	a5,-88(s0)
20012666:	3507a783          	lw	a5,848(a5)
2001266a:	faf42223          	sw	a5,-92(s0)
2001266e:	fa842783          	lw	a5,-88(s0)
20012672:	3487a783          	lw	a5,840(a5)
20012676:	fa442583          	lw	a1,-92(s0)
2001267a:	4575                	li	a0,29
2001267c:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:285
}
2001267e:	0001                	nop
20012680:	40f6                	lw	ra,92(sp)
20012682:	42e6                	lw	t0,88(sp)
20012684:	4356                	lw	t1,84(sp)
20012686:	43c6                	lw	t2,80(sp)
20012688:	4436                	lw	s0,76(sp)
2001268a:	4526                	lw	a0,72(sp)
2001268c:	4596                	lw	a1,68(sp)
2001268e:	4606                	lw	a2,64(sp)
20012690:	56f2                	lw	a3,60(sp)
20012692:	5762                	lw	a4,56(sp)
20012694:	57d2                	lw	a5,52(sp)
20012696:	5842                	lw	a6,48(sp)
20012698:	58b2                	lw	a7,44(sp)
2001269a:	5e22                	lw	t3,40(sp)
2001269c:	5e92                	lw	t4,36(sp)
2001269e:	5f02                	lw	t5,32(sp)
200126a0:	4ff2                	lw	t6,28(sp)
200126a2:	6125                	addi	sp,sp,96
200126a4:	30200073          	mret

200126a8 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
200126a8:	711d                	addi	sp,sp,-96
200126aa:	ce86                	sw	ra,92(sp)
200126ac:	cc96                	sw	t0,88(sp)
200126ae:	ca9a                	sw	t1,84(sp)
200126b0:	c89e                	sw	t2,80(sp)
200126b2:	c6a2                	sw	s0,76(sp)
200126b4:	c4aa                	sw	a0,72(sp)
200126b6:	c2ae                	sw	a1,68(sp)
200126b8:	c0b2                	sw	a2,64(sp)
200126ba:	de36                	sw	a3,60(sp)
200126bc:	dc3a                	sw	a4,56(sp)
200126be:	da3e                	sw	a5,52(sp)
200126c0:	d842                	sw	a6,48(sp)
200126c2:	d646                	sw	a7,44(sp)
200126c4:	d472                	sw	t3,40(sp)
200126c6:	d276                	sw	t4,36(sp)
200126c8:	d07a                	sw	t5,32(sp)
200126ca:	ce7e                	sw	t6,28(sp)
200126cc:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
200126ce:	9f0ff0ef          	jal	ra,200118be <__metal_myhart_id>
200126d2:	872a                	mv	a4,a0
200126d4:	800007b7          	lui	a5,0x80000
200126d8:	070a                	slli	a4,a4,0x2
200126da:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
200126de:	97ba                	add	a5,a5,a4
200126e0:	439c                	lw	a5,0(a5)
200126e2:	faf42623          	sw	a5,-84(s0)
200126e6:	fac42783          	lw	a5,-84(s0)
200126ea:	c78d                	beqz	a5,20012714 <metal_lc14_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
200126ec:	fac42503          	lw	a0,-84(s0)
200126f0:	948ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
200126f4:	faa42423          	sw	a0,-88(s0)
200126f8:	fa842783          	lw	a5,-88(s0)
200126fc:	3687a783          	lw	a5,872(a5)
20012700:	faf42223          	sw	a5,-92(s0)
20012704:	fa842783          	lw	a5,-88(s0)
20012708:	3607a783          	lw	a5,864(a5)
2001270c:	fa442583          	lw	a1,-92(s0)
20012710:	4579                	li	a0,30
20012712:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:291
}
20012714:	0001                	nop
20012716:	40f6                	lw	ra,92(sp)
20012718:	42e6                	lw	t0,88(sp)
2001271a:	4356                	lw	t1,84(sp)
2001271c:	43c6                	lw	t2,80(sp)
2001271e:	4436                	lw	s0,76(sp)
20012720:	4526                	lw	a0,72(sp)
20012722:	4596                	lw	a1,68(sp)
20012724:	4606                	lw	a2,64(sp)
20012726:	56f2                	lw	a3,60(sp)
20012728:	5762                	lw	a4,56(sp)
2001272a:	57d2                	lw	a5,52(sp)
2001272c:	5842                	lw	a6,48(sp)
2001272e:	58b2                	lw	a7,44(sp)
20012730:	5e22                	lw	t3,40(sp)
20012732:	5e92                	lw	t4,36(sp)
20012734:	5f02                	lw	t5,32(sp)
20012736:	4ff2                	lw	t6,28(sp)
20012738:	6125                	addi	sp,sp,96
2001273a:	30200073          	mret

2001273e <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
2001273e:	711d                	addi	sp,sp,-96
20012740:	ce86                	sw	ra,92(sp)
20012742:	cc96                	sw	t0,88(sp)
20012744:	ca9a                	sw	t1,84(sp)
20012746:	c89e                	sw	t2,80(sp)
20012748:	c6a2                	sw	s0,76(sp)
2001274a:	c4aa                	sw	a0,72(sp)
2001274c:	c2ae                	sw	a1,68(sp)
2001274e:	c0b2                	sw	a2,64(sp)
20012750:	de36                	sw	a3,60(sp)
20012752:	dc3a                	sw	a4,56(sp)
20012754:	da3e                	sw	a5,52(sp)
20012756:	d842                	sw	a6,48(sp)
20012758:	d646                	sw	a7,44(sp)
2001275a:	d472                	sw	t3,40(sp)
2001275c:	d276                	sw	t4,36(sp)
2001275e:	d07a                	sw	t5,32(sp)
20012760:	ce7e                	sw	t6,28(sp)
20012762:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20012764:	95aff0ef          	jal	ra,200118be <__metal_myhart_id>
20012768:	872a                	mv	a4,a0
2001276a:	800007b7          	lui	a5,0x80000
2001276e:	070a                	slli	a4,a4,0x2
20012770:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20012774:	97ba                	add	a5,a5,a4
20012776:	439c                	lw	a5,0(a5)
20012778:	faf42623          	sw	a5,-84(s0)
2001277c:	fac42783          	lw	a5,-84(s0)
20012780:	c78d                	beqz	a5,200127aa <metal_lc15_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20012782:	fac42503          	lw	a0,-84(s0)
20012786:	8b2ff0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
2001278a:	faa42423          	sw	a0,-88(s0)
2001278e:	fa842783          	lw	a5,-88(s0)
20012792:	3807a783          	lw	a5,896(a5)
20012796:	faf42223          	sw	a5,-92(s0)
2001279a:	fa842783          	lw	a5,-88(s0)
2001279e:	3787a783          	lw	a5,888(a5)
200127a2:	fa442583          	lw	a1,-92(s0)
200127a6:	457d                	li	a0,31
200127a8:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:297
}
200127aa:	0001                	nop
200127ac:	40f6                	lw	ra,92(sp)
200127ae:	42e6                	lw	t0,88(sp)
200127b0:	4356                	lw	t1,84(sp)
200127b2:	43c6                	lw	t2,80(sp)
200127b4:	4436                	lw	s0,76(sp)
200127b6:	4526                	lw	a0,72(sp)
200127b8:	4596                	lw	a1,68(sp)
200127ba:	4606                	lw	a2,64(sp)
200127bc:	56f2                	lw	a3,60(sp)
200127be:	5762                	lw	a4,56(sp)
200127c0:	57d2                	lw	a5,52(sp)
200127c2:	5842                	lw	a6,48(sp)
200127c4:	58b2                	lw	a7,44(sp)
200127c6:	5e22                	lw	t3,40(sp)
200127c8:	5e92                	lw	t4,36(sp)
200127ca:	5f02                	lw	t5,32(sp)
200127cc:	4ff2                	lw	t6,28(sp)
200127ce:	6125                	addi	sp,sp,96
200127d0:	30200073          	mret

200127d4 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
200127d4:	1101                	addi	sp,sp,-32
200127d6:	ce22                	sw	s0,28(sp)
200127d8:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
200127da:	305027f3          	csrr	a5,mtvec
200127de:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
200127e2:	fec42783          	lw	a5,-20(s0)
200127e6:	03f7f793          	andi	a5,a5,63
200127ea:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
200127ee:	fec42703          	lw	a4,-20(s0)
200127f2:	478d                	li	a5,3
200127f4:	02f70363          	beq	a4,a5,2001281a <__metal_controller_interrupt_vector_mode+0x46>
200127f8:	fec42703          	lw	a4,-20(s0)
200127fc:	478d                	li	a5,3
200127fe:	02e7e263          	bltu	a5,a4,20012822 <__metal_controller_interrupt_vector_mode+0x4e>
20012802:	fec42703          	lw	a4,-20(s0)
20012806:	4785                	li	a5,1
20012808:	00f70b63          	beq	a4,a5,2001281e <__metal_controller_interrupt_vector_mode+0x4a>
2001280c:	fec42703          	lw	a4,-20(s0)
20012810:	4789                	li	a5,2
20012812:	00f71863          	bne	a4,a5,20012822 <__metal_controller_interrupt_vector_mode+0x4e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20012816:	478d                	li	a5,3
20012818:	a031                	j	20012824 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
2001281a:	4791                	li	a5,4
2001281c:	a021                	j	20012824 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
2001281e:	4785                	li	a5,1
20012820:	a011                	j	20012824 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20012822:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:314
}
20012824:	853e                	mv	a0,a5
20012826:	4472                	lw	s0,28(sp)
20012828:	6105                	addi	sp,sp,32
2001282a:	8082                	ret

2001282c <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
2001282c:	7179                	addi	sp,sp,-48
2001282e:	d622                	sw	s0,44(sp)
20012830:	1800                	addi	s0,sp,48
20012832:	fca42e23          	sw	a0,-36(s0)
20012836:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2001283a:	305027f3          	csrr	a5,mtvec
2001283e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20012842:	fec42783          	lw	a5,-20(s0)
20012846:	fc07f793          	andi	a5,a5,-64
2001284a:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
2001284e:	fd842783          	lw	a5,-40(s0)
20012852:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20012856:	fdc42703          	lw	a4,-36(s0)
2001285a:	4791                	li	a5,4
2001285c:	04f70563          	beq	a4,a5,200128a6 <__metal_controller_interrupt_vector+0x7a>
20012860:	fdc42703          	lw	a4,-36(s0)
20012864:	4791                	li	a5,4
20012866:	06e7e863          	bltu	a5,a4,200128d6 <__metal_controller_interrupt_vector+0xaa>
2001286a:	fdc42703          	lw	a4,-36(s0)
2001286e:	478d                	li	a5,3
20012870:	06e7e363          	bltu	a5,a4,200128d6 <__metal_controller_interrupt_vector+0xaa>
20012874:	fdc42703          	lw	a4,-36(s0)
20012878:	4789                	li	a5,2
2001287a:	00f77b63          	bgeu	a4,a5,20012890 <__metal_controller_interrupt_vector+0x64>
2001287e:	fdc42783          	lw	a5,-36(s0)
20012882:	c7a1                	beqz	a5,200128ca <__metal_controller_interrupt_vector+0x9e>
20012884:	fdc42703          	lw	a4,-36(s0)
20012888:	4785                	li	a5,1
2001288a:	02f70963          	beq	a4,a5,200128bc <__metal_controller_interrupt_vector+0x90>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
2001288e:	a0a1                	j	200128d6 <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20012890:	fe842783          	lw	a5,-24(s0)
20012894:	30779073          	csrw	mtvt,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20012898:	fec42783          	lw	a5,-20(s0)
2001289c:	0027e793          	ori	a5,a5,2
200128a0:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
200128a4:	a80d                	j	200128d6 <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
200128a6:	fe842783          	lw	a5,-24(s0)
200128aa:	30779073          	csrw	mtvt,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
200128ae:	fec42783          	lw	a5,-20(s0)
200128b2:	0037e793          	ori	a5,a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
200128b6:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
200128ba:	a831                	j	200128d6 <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
200128bc:	fe842783          	lw	a5,-24(s0)
200128c0:	0017e793          	ori	a5,a5,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
200128c4:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
200128c8:	a039                	j	200128d6 <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
200128ca:	fe842783          	lw	a5,-24(s0)
200128ce:	9bf1                	andi	a5,a5,-4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
200128d0:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
200128d4:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:344
}
200128d6:	0001                	nop
200128d8:	5432                	lw	s0,44(sp)
200128da:	6145                	addi	sp,sp,48
200128dc:	8082                	ret

200128de <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
200128de:	1101                	addi	sp,sp,-32
200128e0:	ce22                	sw	s0,28(sp)
200128e2:	1000                	addi	s0,sp,32
200128e4:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
200128e8:	fec42703          	lw	a4,-20(s0)
200128ec:	47fd                	li	a5,31
200128ee:	02e7c663          	blt	a5,a4,2001291a <__metal_valid_interrupt_id+0x3c>
200128f2:	fec42703          	lw	a4,-20(s0)
200128f6:	478d                	li	a5,3
200128f8:	02f74963          	blt	a4,a5,2001292a <__metal_valid_interrupt_id+0x4c>
200128fc:	fec42783          	lw	a5,-20(s0)
20012900:	4705                	li	a4,1
20012902:	00f71733          	sll	a4,a4,a5
20012906:	77c5                	lui	a5,0xffff1
20012908:	88878793          	addi	a5,a5,-1912 # ffff0888 <__global_pointer$+0x7ffefc00>
2001290c:	8ff9                	and	a5,a5,a4
2001290e:	00f037b3          	snez	a5,a5
20012912:	0ff7f793          	zext.b	a5,a5
20012916:	eb81                	bnez	a5,20012926 <__metal_valid_interrupt_id+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20012918:	a809                	j	2001292a <__metal_valid_interrupt_id+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2001291a:	fec42703          	lw	a4,-20(s0)
2001291e:	08000793          	li	a5,128
20012922:	00f71463          	bne	a4,a5,2001292a <__metal_valid_interrupt_id+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20012926:	4785                	li	a5,1
20012928:	a019                	j	2001292e <__metal_valid_interrupt_id+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
2001292a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
2001292c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:374
}
2001292e:	853e                	mv	a0,a5
20012930:	4472                	lw	s0,28(sp)
20012932:	6105                	addi	sp,sp,32
20012934:	8082                	ret

20012936 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20012936:	7179                	addi	sp,sp,-48
20012938:	d606                	sw	ra,44(sp)
2001293a:	d422                	sw	s0,40(sp)
2001293c:	1800                	addi	s0,sp,48
2001293e:	fca42e23          	sw	a0,-36(s0)
20012942:	fcb42c23          	sw	a1,-40(s0)
20012946:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
2001294a:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
2001294e:	fdc42783          	lw	a5,-36(s0)
20012952:	e399                	bnez	a5,20012958 <__metal_local_interrupt_enable+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20012954:	57fd                	li	a5,-1
20012956:	a849                	j	200129e8 <__metal_local_interrupt_enable+0xb2>
20012958:	fd842703          	lw	a4,-40(s0)
2001295c:	47fd                	li	a5,31
2001295e:	08e7e063          	bltu	a5,a4,200129de <__metal_local_interrupt_enable+0xa8>
20012962:	fd842783          	lw	a5,-40(s0)
20012966:	00279713          	slli	a4,a5,0x2
2001296a:	200107b7          	lui	a5,0x20010
2001296e:	3a078793          	addi	a5,a5,928 # 200103a0 <__metal_driver_vtable_riscv_clint0+0x64>
20012972:	97ba                	add	a5,a5,a4
20012974:	439c                	lw	a5,0(a5)
20012976:	8782                	jr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20012978:	fd442783          	lw	a5,-44(s0)
2001297c:	c781                	beqz	a5,20012984 <__metal_local_interrupt_enable+0x4e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
2001297e:	f5bfe0ef          	jal	ra,200118d8 <__metal_interrupt_global_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20012982:	a08d                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20012984:	f6dfe0ef          	jal	ra,200118f0 <__metal_interrupt_global_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20012988:	a8b1                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2001298a:	fd442783          	lw	a5,-44(s0)
2001298e:	c781                	beqz	a5,20012996 <__metal_local_interrupt_enable+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20012990:	f79fe0ef          	jal	ra,20011908 <__metal_interrupt_software_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20012994:	a881                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20012996:	f8bfe0ef          	jal	ra,20011920 <__metal_interrupt_software_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2001299a:	a0a9                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
2001299c:	fd442783          	lw	a5,-44(s0)
200129a0:	c781                	beqz	a5,200129a8 <__metal_local_interrupt_enable+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
200129a2:	f97fe0ef          	jal	ra,20011938 <__metal_interrupt_timer_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
200129a6:	a83d                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
200129a8:	fabfe0ef          	jal	ra,20011952 <__metal_interrupt_timer_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
200129ac:	a825                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
200129ae:	fd442783          	lw	a5,-44(s0)
200129b2:	c781                	beqz	a5,200129ba <__metal_local_interrupt_enable+0x84>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
200129b4:	fb9fe0ef          	jal	ra,2001196c <__metal_interrupt_external_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
200129b8:	a035                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
200129ba:	fcffe0ef          	jal	ra,20011988 <__metal_interrupt_external_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
200129be:	a01d                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
200129c0:	fd442783          	lw	a5,-44(s0)
200129c4:	c799                	beqz	a5,200129d2 <__metal_local_interrupt_enable+0x9c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
200129c6:	fd842783          	lw	a5,-40(s0)
200129ca:	853e                	mv	a0,a5
200129cc:	fd9fe0ef          	jal	ra,200119a4 <__metal_interrupt_local_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
200129d0:	a811                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
200129d2:	fd842783          	lw	a5,-40(s0)
200129d6:	853e                	mv	a0,a5
200129d8:	ff9fe0ef          	jal	ra,200119d0 <__metal_interrupt_local_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
200129dc:	a021                	j	200129e4 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
200129de:	57fd                	li	a5,-1
200129e0:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
200129e4:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:439
}
200129e8:	853e                	mv	a0,a5
200129ea:	50b2                	lw	ra,44(sp)
200129ec:	5422                	lw	s0,40(sp)
200129ee:	6145                	addi	sp,sp,48
200129f0:	8082                	ret

200129f2 <__metal_exception_register>:
__metal_exception_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
200129f2:	7179                	addi	sp,sp,-48
200129f4:	d622                	sw	s0,44(sp)
200129f6:	1800                	addi	s0,sp,48
200129f8:	fca42e23          	sw	a0,-36(s0)
200129fc:	fcb42c23          	sw	a1,-40(s0)
20012a00:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012a04:	fdc42783          	lw	a5,-36(s0)
20012a08:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20012a0c:	fd842703          	lw	a4,-40(s0)
20012a10:	47ad                	li	a5,11
20012a12:	02e7c263          	blt	a5,a4,20012a36 <__metal_exception_register+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20012a16:	fd442783          	lw	a5,-44(s0)
20012a1a:	cf91                	beqz	a5,20012a36 <__metal_exception_register+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20012a1c:	fec42703          	lw	a4,-20(s0)
20012a20:	fd842783          	lw	a5,-40(s0)
20012a24:	0e878793          	addi	a5,a5,232
20012a28:	078a                	slli	a5,a5,0x2
20012a2a:	97ba                	add	a5,a5,a4
20012a2c:	fd442703          	lw	a4,-44(s0)
20012a30:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20012a32:	4781                	li	a5,0
20012a34:	a011                	j	20012a38 <__metal_exception_register+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20012a36:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:450
}
20012a38:	853e                	mv	a0,a5
20012a3a:	5432                	lw	s0,44(sp)
20012a3c:	6145                	addi	sp,sp,48
20012a3e:	8082                	ret

20012a40 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20012a40:	7179                	addi	sp,sp,-48
20012a42:	d606                	sw	ra,44(sp)
20012a44:	d422                	sw	s0,40(sp)
20012a46:	1800                	addi	s0,sp,48
20012a48:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012a4c:	fdc42783          	lw	a5,-36(s0)
20012a50:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20012a54:	fe442783          	lw	a5,-28(s0)
20012a58:	43dc                	lw	a5,4(a5)
20012a5a:	efdd                	bnez	a5,20012b18 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20012a5c:	fe042623          	sw	zero,-20(s0)
20012a60:	a0b9                	j	20012aae <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20012a62:	fe442683          	lw	a3,-28(s0)
20012a66:	fec42703          	lw	a4,-20(s0)
20012a6a:	87ba                	mv	a5,a4
20012a6c:	0786                	slli	a5,a5,0x1
20012a6e:	97ba                	add	a5,a5,a4
20012a70:	078e                	slli	a5,a5,0x3
20012a72:	97b6                	add	a5,a5,a3
20012a74:	0807a823          	sw	zero,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20012a78:	fe442683          	lw	a3,-28(s0)
20012a7c:	fec42703          	lw	a4,-20(s0)
20012a80:	87ba                	mv	a5,a4
20012a82:	0786                	slli	a5,a5,0x1
20012a84:	97ba                	add	a5,a5,a4
20012a86:	078e                	slli	a5,a5,0x3
20012a88:	97b6                	add	a5,a5,a3
20012a8a:	0807aa23          	sw	zero,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20012a8e:	fe442683          	lw	a3,-28(s0)
20012a92:	fec42703          	lw	a4,-20(s0)
20012a96:	87ba                	mv	a5,a4
20012a98:	0786                	slli	a5,a5,0x1
20012a9a:	97ba                	add	a5,a5,a4
20012a9c:	078e                	slli	a5,a5,0x3
20012a9e:	97b6                	add	a5,a5,a3
20012aa0:	0807ac23          	sw	zero,152(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20012aa4:	fec42783          	lw	a5,-20(s0)
20012aa8:	0785                	addi	a5,a5,1
20012aaa:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20012aae:	fec42703          	lw	a4,-20(s0)
20012ab2:	47fd                	li	a5,31
20012ab4:	fae7d7e3          	bge	a5,a4,20012a62 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20012ab8:	fe042423          	sw	zero,-24(s0)
20012abc:	a01d                	j	20012ae2 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20012abe:	fe442703          	lw	a4,-28(s0)
20012ac2:	fe842783          	lw	a5,-24(s0)
20012ac6:	0e878793          	addi	a5,a5,232
20012aca:	078a                	slli	a5,a5,0x2
20012acc:	97ba                	add	a5,a5,a4
20012ace:	20012737          	lui	a4,0x20012
20012ad2:	9fc70713          	addi	a4,a4,-1540 # 200119fc <__metal_default_exception_handler>
20012ad6:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20012ad8:	fe842783          	lw	a5,-24(s0)
20012adc:	0785                	addi	a5,a5,1
20012ade:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20012ae2:	fe842703          	lw	a4,-24(s0)
20012ae6:	47ad                	li	a5,11
20012ae8:	fce7dbe3          	bge	a5,a4,20012abe <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20012aec:	305027f3          	csrr	a5,mtvec
20012af0:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20012af4:	200107b7          	lui	a5,0x20010
20012af8:	13478793          	addi	a5,a5,308 # 20010134 <early_trap_vector>
20012afc:	fe042703          	lw	a4,-32(s0)
20012b00:	00f71863          	bne	a4,a5,20012b10 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20012b04:	200127b7          	lui	a5,0x20012
20012b08:	c8078593          	addi	a1,a5,-896 # 20011c80 <__metal_exception_handler>
20012b0c:	4501                	li	a0,0
20012b0e:	3b39                	jal	2001282c <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20012b10:	fe442783          	lw	a5,-28(s0)
20012b14:	4705                	li	a4,1
20012b16:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20012b18:	0001                	nop
20012b1a:	50b2                	lw	ra,44(sp)
20012b1c:	5422                	lw	s0,40(sp)
20012b1e:	6145                	addi	sp,sp,48
20012b20:	8082                	ret

20012b22 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20012b22:	7179                	addi	sp,sp,-48
20012b24:	d606                	sw	ra,44(sp)
20012b26:	d422                	sw	s0,40(sp)
20012b28:	1800                	addi	s0,sp,48
20012b2a:	fca42e23          	sw	a0,-36(s0)
20012b2e:	fcb42c23          	sw	a1,-40(s0)
20012b32:	fcc42a23          	sw	a2,-44(s0)
20012b36:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20012b3a:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012b3e:	fdc42783          	lw	a5,-36(s0)
20012b42:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20012b46:	fd842503          	lw	a0,-40(s0)
20012b4a:	3b51                	jal	200128de <__metal_valid_interrupt_id>
20012b4c:	87aa                	mv	a5,a0
20012b4e:	e399                	bnez	a5,20012b54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20012b50:	57d5                	li	a5,-11
20012b52:	a25d                	j	20012cf8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012b54:	fd842703          	lw	a4,-40(s0)
20012b58:	08000793          	li	a5,128
20012b5c:	00f71763          	bne	a4,a5,20012b6a <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20012b60:	3995                	jal	200127d4 <__metal_controller_interrupt_vector_mode>
20012b62:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012b64:	c399                	beqz	a5,20012b6a <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20012b66:	57cd                	li	a5,-13
20012b68:	aa41                	j	20012cf8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20012b6a:	fd442783          	lw	a5,-44(s0)
20012b6e:	cfb9                	beqz	a5,20012bcc <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20012b70:	fd842703          	lw	a4,-40(s0)
20012b74:	08000793          	li	a5,128
20012b78:	00f71f63          	bne	a4,a5,20012b96 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20012b7c:	fe842783          	lw	a5,-24(s0)
20012b80:	fd442703          	lw	a4,-44(s0)
20012b84:	38e7a823          	sw	a4,912(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20012b88:	fe842783          	lw	a5,-24(s0)
20012b8c:	fd042703          	lw	a4,-48(s0)
20012b90:	38e7ac23          	sw	a4,920(a5)
20012b94:	a285                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20012b96:	fe842683          	lw	a3,-24(s0)
20012b9a:	fd842703          	lw	a4,-40(s0)
20012b9e:	87ba                	mv	a5,a4
20012ba0:	0786                	slli	a5,a5,0x1
20012ba2:	97ba                	add	a5,a5,a4
20012ba4:	078e                	slli	a5,a5,0x3
20012ba6:	97b6                	add	a5,a5,a3
20012ba8:	fd442703          	lw	a4,-44(s0)
20012bac:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20012bb0:	fe842683          	lw	a3,-24(s0)
20012bb4:	fd842703          	lw	a4,-40(s0)
20012bb8:	87ba                	mv	a5,a4
20012bba:	0786                	slli	a5,a5,0x1
20012bbc:	97ba                	add	a5,a5,a4
20012bbe:	078e                	slli	a5,a5,0x3
20012bc0:	97b6                	add	a5,a5,a3
20012bc2:	fd042703          	lw	a4,-48(s0)
20012bc6:	08e7ac23          	sw	a4,152(a5)
20012bca:	a22d                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20012bcc:	fd842703          	lw	a4,-40(s0)
20012bd0:	08000793          	li	a5,128
20012bd4:	0cf70163          	beq	a4,a5,20012c96 <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
20012bd8:	fd842703          	lw	a4,-40(s0)
20012bdc:	08000793          	li	a5,128
20012be0:	10e7c763          	blt	a5,a4,20012cee <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012be4:	fd842703          	lw	a4,-40(s0)
20012be8:	47fd                	li	a5,31
20012bea:	10e7c263          	blt	a5,a4,20012cee <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012bee:	fd842703          	lw	a4,-40(s0)
20012bf2:	47c1                	li	a5,16
20012bf4:	0cf75063          	bge	a4,a5,20012cb4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20012bf8:	fd842703          	lw	a4,-40(s0)
20012bfc:	47ad                	li	a5,11
20012bfe:	0af70b63          	beq	a4,a5,20012cb4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20012c02:	fd842703          	lw	a4,-40(s0)
20012c06:	47ad                	li	a5,11
20012c08:	0ee7c363          	blt	a5,a4,20012cee <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012c0c:	fd842703          	lw	a4,-40(s0)
20012c10:	478d                	li	a5,3
20012c12:	00f70863          	beq	a4,a5,20012c22 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
20012c16:	fd842703          	lw	a4,-40(s0)
20012c1a:	479d                	li	a5,7
20012c1c:	04f70063          	beq	a4,a5,20012c5c <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20012c20:	a0f9                	j	20012cee <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20012c22:	fe842683          	lw	a3,-24(s0)
20012c26:	fd842703          	lw	a4,-40(s0)
20012c2a:	87ba                	mv	a5,a4
20012c2c:	0786                	slli	a5,a5,0x1
20012c2e:	97ba                	add	a5,a5,a4
20012c30:	078e                	slli	a5,a5,0x3
20012c32:	97b6                	add	a5,a5,a3
20012c34:	20012737          	lui	a4,0x20012
20012c38:	aec70713          	addi	a4,a4,-1300 # 20011aec <__metal_default_sw_handler>
20012c3c:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20012c40:	fe842683          	lw	a3,-24(s0)
20012c44:	fd842703          	lw	a4,-40(s0)
20012c48:	87ba                	mv	a5,a4
20012c4a:	0786                	slli	a5,a5,0x1
20012c4c:	97ba                	add	a5,a5,a4
20012c4e:	078e                	slli	a5,a5,0x3
20012c50:	97b6                	add	a5,a5,a3
20012c52:	fd042703          	lw	a4,-48(s0)
20012c56:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20012c5a:	a869                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20012c5c:	fe842683          	lw	a3,-24(s0)
20012c60:	fd842703          	lw	a4,-40(s0)
20012c64:	87ba                	mv	a5,a4
20012c66:	0786                	slli	a5,a5,0x1
20012c68:	97ba                	add	a5,a5,a4
20012c6a:	078e                	slli	a5,a5,0x3
20012c6c:	97b6                	add	a5,a5,a3
20012c6e:	20012737          	lui	a4,0x20012
20012c72:	bfc70713          	addi	a4,a4,-1028 # 20011bfc <__metal_default_timer_handler>
20012c76:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20012c7a:	fe842683          	lw	a3,-24(s0)
20012c7e:	fd842703          	lw	a4,-40(s0)
20012c82:	87ba                	mv	a5,a4
20012c84:	0786                	slli	a5,a5,0x1
20012c86:	97ba                	add	a5,a5,a4
20012c88:	078e                	slli	a5,a5,0x3
20012c8a:	97b6                	add	a5,a5,a3
20012c8c:	fd042703          	lw	a4,-48(s0)
20012c90:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20012c94:	a085                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20012c96:	fe842783          	lw	a5,-24(s0)
20012c9a:	20012737          	lui	a4,0x20012
20012c9e:	be670713          	addi	a4,a4,-1050 # 20011be6 <__metal_default_beu_handler>
20012ca2:	38e7a823          	sw	a4,912(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20012ca6:	fe842783          	lw	a5,-24(s0)
20012caa:	fd042703          	lw	a4,-48(s0)
20012cae:	38e7ac23          	sw	a4,920(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20012cb2:	a089                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20012cb4:	fe842683          	lw	a3,-24(s0)
20012cb8:	fd842703          	lw	a4,-40(s0)
20012cbc:	87ba                	mv	a5,a4
20012cbe:	0786                	slli	a5,a5,0x1
20012cc0:	97ba                	add	a5,a5,a4
20012cc2:	078e                	slli	a5,a5,0x3
20012cc4:	97b6                	add	a5,a5,a3
20012cc6:	20012737          	lui	a4,0x20012
20012cca:	a1470713          	addi	a4,a4,-1516 # 20011a14 <__metal_default_interrupt_handler>
20012cce:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20012cd2:	fe842683          	lw	a3,-24(s0)
20012cd6:	fd842703          	lw	a4,-40(s0)
20012cda:	87ba                	mv	a5,a4
20012cdc:	0786                	slli	a5,a5,0x1
20012cde:	97ba                	add	a5,a5,a4
20012ce0:	078e                	slli	a5,a5,0x3
20012ce2:	97b6                	add	a5,a5,a3
20012ce4:	fd042703          	lw	a4,-48(s0)
20012ce8:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20012cec:	a021                	j	20012cf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20012cee:	57d1                	li	a5,-12
20012cf0:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20012cf4:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:549
}
20012cf8:	853e                	mv	a0,a5
20012cfa:	50b2                	lw	ra,44(sp)
20012cfc:	5422                	lw	s0,40(sp)
20012cfe:	6145                	addi	sp,sp,48
20012d00:	8082                	ret

20012d02 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20012d02:	1101                	addi	sp,sp,-32
20012d04:	ce06                	sw	ra,28(sp)
20012d06:	cc22                	sw	s0,24(sp)
20012d08:	1000                	addi	s0,sp,32
20012d0a:	fea42623          	sw	a0,-20(s0)
20012d0e:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20012d12:	fe842783          	lw	a5,-24(s0)
20012d16:	4605                	li	a2,1
20012d18:	85be                	mv	a1,a5
20012d1a:	fec42503          	lw	a0,-20(s0)
20012d1e:	3921                	jal	20012936 <__metal_local_interrupt_enable>
20012d20:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:554
}
20012d22:	853e                	mv	a0,a5
20012d24:	40f2                	lw	ra,28(sp)
20012d26:	4462                	lw	s0,24(sp)
20012d28:	6105                	addi	sp,sp,32
20012d2a:	8082                	ret

20012d2c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20012d2c:	1101                	addi	sp,sp,-32
20012d2e:	ce06                	sw	ra,28(sp)
20012d30:	cc22                	sw	s0,24(sp)
20012d32:	1000                	addi	s0,sp,32
20012d34:	fea42623          	sw	a0,-20(s0)
20012d38:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20012d3c:	fe842783          	lw	a5,-24(s0)
20012d40:	4601                	li	a2,0
20012d42:	85be                	mv	a1,a5
20012d44:	fec42503          	lw	a0,-20(s0)
20012d48:	36fd                	jal	20012936 <__metal_local_interrupt_enable>
20012d4a:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:559
}
20012d4c:	853e                	mv	a0,a5
20012d4e:	40f2                	lw	ra,28(sp)
20012d50:	4462                	lw	s0,24(sp)
20012d52:	6105                	addi	sp,sp,32
20012d54:	8082                	ret

20012d56 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20012d56:	1101                	addi	sp,sp,-32
20012d58:	ce06                	sw	ra,28(sp)
20012d5a:	cc22                	sw	s0,24(sp)
20012d5c:	1000                	addi	s0,sp,32
20012d5e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20012d62:	3c8d                	jal	200127d4 <__metal_controller_interrupt_vector_mode>
20012d64:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:593
}
20012d66:	853e                	mv	a0,a5
20012d68:	40f2                	lw	ra,28(sp)
20012d6a:	4462                	lw	s0,24(sp)
20012d6c:	6105                	addi	sp,sp,32
20012d6e:	8082                	ret

20012d70 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012d70:	1101                	addi	sp,sp,-32
20012d72:	ce06                	sw	ra,28(sp)
20012d74:	cc22                	sw	s0,24(sp)
20012d76:	1000                	addi	s0,sp,32
20012d78:	fea42623          	sw	a0,-20(s0)
20012d7c:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20012d80:	fe842783          	lw	a5,-24(s0)
20012d84:	eb91                	bnez	a5,20012d98 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20012d86:	200127b7          	lui	a5,0x20012
20012d8a:	c8078593          	addi	a1,a5,-896 # 20011c80 <__metal_exception_handler>
20012d8e:	fe842503          	lw	a0,-24(s0)
20012d92:	3c69                	jal	2001282c <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20012d94:	4781                	li	a5,0
20012d96:	a005                	j	20012db6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20012d98:	fe842703          	lw	a4,-24(s0)
20012d9c:	4785                	li	a5,1
20012d9e:	00f71b63          	bne	a4,a5,20012db4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20012da2:	200147b7          	lui	a5,0x20014
20012da6:	c8078593          	addi	a1,a5,-896 # 20013c80 <__metal_vector_table>
20012daa:	fe842503          	lw	a0,-24(s0)
20012dae:	3cbd                	jal	2001282c <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20012db0:	4781                	li	a5,0
20012db2:	a011                	j	20012db6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20012db4:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:609
}
20012db6:	853e                	mv	a0,a5
20012db8:	40f2                	lw	ra,28(sp)
20012dba:	4462                	lw	s0,24(sp)
20012dbc:	6105                	addi	sp,sp,32
20012dbe:	8082                	ret

20012dc0 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20012dc0:	1101                	addi	sp,sp,-32
20012dc2:	ce22                	sw	s0,28(sp)
20012dc4:	1000                	addi	s0,sp,32
20012dc6:	fea42623          	sw	a0,-20(s0)
20012dca:	feb42423          	sw	a1,-24(s0)
20012dce:	fec42223          	sw	a2,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20012dd2:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:616
}
20012dd4:	853e                	mv	a0,a5
20012dd6:	4472                	lw	s0,28(sp)
20012dd8:	6105                	addi	sp,sp,32
20012dda:	8082                	ret

20012ddc <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20012ddc:	7139                	addi	sp,sp,-64
20012dde:	de22                	sw	s0,60(sp)
20012de0:	0080                	addi	s0,sp,64
20012de2:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20012de6:	4501                	li	a0,0
20012de8:	4581                	li	a1,0
20012dea:	fea42423          	sw	a0,-24(s0)
20012dee:	feb42623          	sw	a1,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20012df2:	b80025f3          	csrr	a1,mcycleh
20012df6:	feb42223          	sw	a1,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20012dfa:	b00025f3          	csrr	a1,mcycle
20012dfe:	feb42023          	sw	a1,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20012e02:	b80025f3          	csrr	a1,mcycleh
20012e06:	fcb42e23          	sw	a1,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20012e0a:	fe442503          	lw	a0,-28(s0)
20012e0e:	fdc42583          	lw	a1,-36(s0)
20012e12:	feb510e3          	bne	a0,a1,20012df2 <__metal_driver_cpu_mcycle_get+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20012e16:	fe442583          	lw	a1,-28(s0)
20012e1a:	882e                	mv	a6,a1
20012e1c:	4881                	li	a7,0
20012e1e:	00081793          	slli	a5,a6,0x0
20012e22:	4701                	li	a4,0
20012e24:	fe042583          	lw	a1,-32(s0)
20012e28:	862e                	mv	a2,a1
20012e2a:	4681                	li	a3,0
20012e2c:	00c765b3          	or	a1,a4,a2
20012e30:	feb42423          	sw	a1,-24(s0)
20012e34:	8fd5                	or	a5,a5,a3
20012e36:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20012e3a:	fe842703          	lw	a4,-24(s0)
20012e3e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:640
}
20012e42:	853a                	mv	a0,a4
20012e44:	85be                	mv	a1,a5
20012e46:	5472                	lw	s0,60(sp)
20012e48:	6121                	addi	sp,sp,64
20012e4a:	8082                	ret

20012e4c <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20012e4c:	7179                	addi	sp,sp,-48
20012e4e:	d606                	sw	ra,44(sp)
20012e50:	d422                	sw	s0,40(sp)
20012e52:	d24a                	sw	s2,36(sp)
20012e54:	d04e                	sw	s3,32(sp)
20012e56:	1800                	addi	s0,sp,48
20012e58:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20012e5c:	fdc42783          	lw	a5,-36(s0)
20012e60:	e781                	bnez	a5,20012e68 <__metal_driver_cpu_timebase_get+0x1c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20012e62:	4901                	li	s2,0
20012e64:	4981                	li	s3,0
20012e66:	a821                	j	20012e7e <__metal_driver_cpu_timebase_get+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20012e68:	fdc42503          	lw	a0,-36(s0)
20012e6c:	99ffe0ef          	jal	ra,2001180a <__metal_driver_cpu_timebase>
20012e70:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20012e74:	fec42783          	lw	a5,-20(s0)
20012e78:	893e                	mv	s2,a5
20012e7a:	87fd                	srai	a5,a5,0x1f
20012e7c:	89be                	mv	s3,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:650
}
20012e7e:	874a                	mv	a4,s2
20012e80:	87ce                	mv	a5,s3
20012e82:	853a                	mv	a0,a4
20012e84:	85be                	mv	a1,a5
20012e86:	50b2                	lw	ra,44(sp)
20012e88:	5422                	lw	s0,40(sp)
20012e8a:	5912                	lw	s2,36(sp)
20012e8c:	5982                	lw	s3,32(sp)
20012e8e:	6145                	addi	sp,sp,48
20012e90:	8082                	ret

20012e92 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20012e92:	7179                	addi	sp,sp,-48
20012e94:	d606                	sw	ra,44(sp)
20012e96:	d422                	sw	s0,40(sp)
20012e98:	1800                	addi	s0,sp,48
20012e9a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20012e9e:	4781                	li	a5,0
20012ea0:	4801                	li	a6,0
20012ea2:	fef42023          	sw	a5,-32(s0)
20012ea6:	ff042223          	sw	a6,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012eaa:	fdc42503          	lw	a0,-36(s0)
20012eae:	98bfe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012eb2:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20012eb6:	fec42783          	lw	a5,-20(s0)
20012eba:	c78d                	beqz	a5,20012ee4 <__metal_driver_cpu_mtime_get+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012ebc:	fec42783          	lw	a5,-20(s0)
20012ec0:	13c7a783          	lw	a5,316(a5)
20012ec4:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20012ec8:	fe842783          	lw	a5,-24(s0)
20012ecc:	cf81                	beqz	a5,20012ee4 <__metal_driver_cpu_mtime_get+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20012ece:	fe842783          	lw	a5,-24(s0)
20012ed2:	439c                	lw	a5,0(a5)
20012ed4:	47f8                	lw	a4,76(a5)
20012ed6:	fe040793          	addi	a5,s0,-32
20012eda:	863e                	mv	a2,a5
20012edc:	4585                	li	a1,1
20012ede:	fe842503          	lw	a0,-24(s0)
20012ee2:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20012ee4:	fe042703          	lw	a4,-32(s0)
20012ee8:	fe442783          	lw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:667
}
20012eec:	853a                	mv	a0,a4
20012eee:	85be                	mv	a1,a5
20012ef0:	50b2                	lw	ra,44(sp)
20012ef2:	5422                	lw	s0,40(sp)
20012ef4:	6145                	addi	sp,sp,48
20012ef6:	8082                	ret

20012ef8 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20012ef8:	7179                	addi	sp,sp,-48
20012efa:	d606                	sw	ra,44(sp)
20012efc:	d422                	sw	s0,40(sp)
20012efe:	d226                	sw	s1,36(sp)
20012f00:	1800                	addi	s0,sp,48
20012f02:	fca42e23          	sw	a0,-36(s0)
20012f06:	fcb42823          	sw	a1,-48(s0)
20012f0a:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20012f0e:	57fd                	li	a5,-1
20012f10:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012f14:	fdc42503          	lw	a0,-36(s0)
20012f18:	921fe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012f1c:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20012f20:	fe842783          	lw	a5,-24(s0)
20012f24:	cf8d                	beqz	a5,20012f5e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012f26:	fe842783          	lw	a5,-24(s0)
20012f2a:	13c7a783          	lw	a5,316(a5)
20012f2e:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20012f32:	fe442783          	lw	a5,-28(s0)
20012f36:	c785                	beqz	a5,20012f5e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20012f38:	fe442783          	lw	a5,-28(s0)
20012f3c:	439c                	lw	a5,0(a5)
20012f3e:	4ba4                	lw	s1,80(a5)
20012f40:	fdc42503          	lw	a0,-36(s0)
20012f44:	89ffe0ef          	jal	ra,200117e2 <__metal_driver_cpu_hartid>
20012f48:	87aa                	mv	a5,a0
20012f4a:	fd042603          	lw	a2,-48(s0)
20012f4e:	fd442683          	lw	a3,-44(s0)
20012f52:	85be                	mv	a1,a5
20012f54:	fe442503          	lw	a0,-28(s0)
20012f58:	9482                	jalr	s1
20012f5a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20012f5e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:685
}
20012f62:	853e                	mv	a0,a5
20012f64:	50b2                	lw	ra,44(sp)
20012f66:	5422                	lw	s0,40(sp)
20012f68:	5492                	lw	s1,36(sp)
20012f6a:	6145                	addi	sp,sp,48
20012f6c:	8082                	ret

20012f6e <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20012f6e:	1101                	addi	sp,sp,-32
20012f70:	ce22                	sw	s0,28(sp)
20012f72:	1000                	addi	s0,sp,32
20012f74:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012f78:	800007b7          	lui	a5,0x80000
20012f7c:	48c78793          	addi	a5,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20012f80:	853e                	mv	a0,a5
20012f82:	4472                	lw	s0,28(sp)
20012f84:	6105                	addi	sp,sp,32
20012f86:	8082                	ret

20012f88 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20012f88:	1101                	addi	sp,sp,-32
20012f8a:	ce22                	sw	s0,28(sp)
20012f8c:	1000                	addi	s0,sp,32
20012f8e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20012f92:	479d                	li	a5,7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:703
}
20012f94:	853e                	mv	a0,a5
20012f96:	4472                	lw	s0,28(sp)
20012f98:	6105                	addi	sp,sp,32
20012f9a:	8082                	ret

20012f9c <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20012f9c:	1101                	addi	sp,sp,-32
20012f9e:	ce22                	sw	s0,28(sp)
20012fa0:	1000                	addi	s0,sp,32
20012fa2:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012fa6:	800007b7          	lui	a5,0x80000
20012faa:	48c78793          	addi	a5,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20012fae:	853e                	mv	a0,a5
20012fb0:	4472                	lw	s0,28(sp)
20012fb2:	6105                	addi	sp,sp,32
20012fb4:	8082                	ret

20012fb6 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20012fb6:	1101                	addi	sp,sp,-32
20012fb8:	ce22                	sw	s0,28(sp)
20012fba:	1000                	addi	s0,sp,32
20012fbc:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20012fc0:	478d                	li	a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:721
}
20012fc2:	853e                	mv	a0,a5
20012fc4:	4472                	lw	s0,28(sp)
20012fc6:	6105                	addi	sp,sp,32
20012fc8:	8082                	ret

20012fca <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20012fca:	7179                	addi	sp,sp,-48
20012fcc:	d606                	sw	ra,44(sp)
20012fce:	d422                	sw	s0,40(sp)
20012fd0:	1800                	addi	s0,sp,48
20012fd2:	fca42e23          	sw	a0,-36(s0)
20012fd6:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20012fda:	57fd                	li	a5,-1
20012fdc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012fe0:	fdc42503          	lw	a0,-36(s0)
20012fe4:	855fe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20012fe8:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20012fec:	fe842783          	lw	a5,-24(s0)
20012ff0:	c79d                	beqz	a5,2001301e <__metal_driver_cpu_set_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012ff2:	fe842783          	lw	a5,-24(s0)
20012ff6:	0dc7a783          	lw	a5,220(a5)
20012ffa:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20012ffe:	fe442783          	lw	a5,-28(s0)
20013002:	cf91                	beqz	a5,2001301e <__metal_driver_cpu_set_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20013004:	fe442783          	lw	a5,-28(s0)
20013008:	439c                	lw	a5,0(a5)
2001300a:	47f8                	lw	a4,76(a5)
2001300c:	fd840793          	addi	a5,s0,-40
20013010:	863e                	mv	a2,a5
20013012:	458d                	li	a1,3
20013014:	fe442503          	lw	a0,-28(s0)
20013018:	9702                	jalr	a4
2001301a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
2001301e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:738
}
20013022:	853e                	mv	a0,a5
20013024:	50b2                	lw	ra,44(sp)
20013026:	5422                	lw	s0,40(sp)
20013028:	6145                	addi	sp,sp,48
2001302a:	8082                	ret

2001302c <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001302c:	7179                	addi	sp,sp,-48
2001302e:	d606                	sw	ra,44(sp)
20013030:	d422                	sw	s0,40(sp)
20013032:	1800                	addi	s0,sp,48
20013034:	fca42e23          	sw	a0,-36(s0)
20013038:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
2001303c:	57fd                	li	a5,-1
2001303e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013042:	fdc42503          	lw	a0,-36(s0)
20013046:	ff2fe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
2001304a:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
2001304e:	fe842783          	lw	a5,-24(s0)
20013052:	c79d                	beqz	a5,20013080 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013054:	fe842783          	lw	a5,-24(s0)
20013058:	0dc7a783          	lw	a5,220(a5)
2001305c:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20013060:	fe442783          	lw	a5,-28(s0)
20013064:	cf91                	beqz	a5,20013080 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20013066:	fe442783          	lw	a5,-28(s0)
2001306a:	439c                	lw	a5,0(a5)
2001306c:	47f8                	lw	a4,76(a5)
2001306e:	fd840793          	addi	a5,s0,-40
20013072:	863e                	mv	a2,a5
20013074:	4589                	li	a1,2
20013076:	fe442503          	lw	a0,-28(s0)
2001307a:	9702                	jalr	a4
2001307c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20013080:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:755
}
20013084:	853e                	mv	a0,a5
20013086:	50b2                	lw	ra,44(sp)
20013088:	5422                	lw	s0,40(sp)
2001308a:	6145                	addi	sp,sp,48
2001308c:	8082                	ret

2001308e <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
2001308e:	7179                	addi	sp,sp,-48
20013090:	d606                	sw	ra,44(sp)
20013092:	d422                	sw	s0,40(sp)
20013094:	1800                	addi	s0,sp,48
20013096:	fca42e23          	sw	a0,-36(s0)
2001309a:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
2001309e:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200130a2:	fdc42503          	lw	a0,-36(s0)
200130a6:	f92fe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
200130aa:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
200130ae:	fe842783          	lw	a5,-24(s0)
200130b2:	c79d                	beqz	a5,200130e0 <__metal_driver_cpu_get_msip+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200130b4:	fe842783          	lw	a5,-24(s0)
200130b8:	0dc7a783          	lw	a5,220(a5)
200130bc:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
200130c0:	fe442783          	lw	a5,-28(s0)
200130c4:	cf91                	beqz	a5,200130e0 <__metal_driver_cpu_get_msip+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
200130c6:	fe442783          	lw	a5,-28(s0)
200130ca:	439c                	lw	a5,0(a5)
200130cc:	47f8                	lw	a4,76(a5)
200130ce:	fd840793          	addi	a5,s0,-40
200130d2:	863e                	mv	a2,a5
200130d4:	4591                	li	a1,4
200130d6:	fe442503          	lw	a0,-28(s0)
200130da:	9702                	jalr	a4
200130dc:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
200130e0:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:772
}
200130e4:	853e                	mv	a0,a5
200130e6:	50b2                	lw	ra,44(sp)
200130e8:	5422                	lw	s0,40(sp)
200130ea:	6145                	addi	sp,sp,48
200130ec:	8082                	ret

200130ee <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
200130ee:	1101                	addi	sp,sp,-32
200130f0:	ce06                	sw	ra,28(sp)
200130f2:	cc22                	sw	s0,24(sp)
200130f4:	1000                	addi	s0,sp,32
200130f6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
200130fa:	fec42503          	lw	a0,-20(s0)
200130fe:	f3afe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
20013102:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:777
}
20013104:	853e                	mv	a0,a5
20013106:	40f2                	lw	ra,28(sp)
20013108:	4462                	lw	s0,24(sp)
2001310a:	6105                	addi	sp,sp,32
2001310c:	8082                	ret

2001310e <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
2001310e:	7179                	addi	sp,sp,-48
20013110:	d606                	sw	ra,44(sp)
20013112:	d422                	sw	s0,40(sp)
20013114:	1800                	addi	s0,sp,48
20013116:	fca42e23          	sw	a0,-36(s0)
2001311a:	fcb42c23          	sw	a1,-40(s0)
2001311e:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013122:	fdc42503          	lw	a0,-36(s0)
20013126:	f12fe0ef          	jal	ra,20011838 <__metal_driver_cpu_interrupt_controller>
2001312a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
2001312e:	fec42783          	lw	a5,-20(s0)
20013132:	cb99                	beqz	a5,20013148 <__metal_driver_cpu_exception_register+0x3a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20013134:	fd442603          	lw	a2,-44(s0)
20013138:	fd842583          	lw	a1,-40(s0)
2001313c:	fec42503          	lw	a0,-20(s0)
20013140:	8b3ff0ef          	jal	ra,200129f2 <__metal_exception_register>
20013144:	87aa                	mv	a5,a0
20013146:	a011                	j	2001314a <__metal_driver_cpu_exception_register+0x3c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20013148:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:808
}
2001314a:	853e                	mv	a0,a5
2001314c:	50b2                	lw	ra,44(sp)
2001314e:	5422                	lw	s0,40(sp)
20013150:	6145                	addi	sp,sp,48
20013152:	8082                	ret

20013154 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20013154:	1101                	addi	sp,sp,-32
20013156:	ce22                	sw	s0,28(sp)
20013158:	1000                	addi	s0,sp,32
2001315a:	fea42623          	sw	a0,-20(s0)
2001315e:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20013162:	fe842783          	lw	a5,-24(s0)
20013166:	0007d783          	lhu	a5,0(a5)
2001316a:	0037f713          	andi	a4,a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
2001316e:	478d                	li	a5,3
20013170:	00f71463          	bne	a4,a5,20013178 <__metal_driver_cpu_get_instruction_length+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20013174:	4791                	li	a5,4
20013176:	a011                	j	2001317a <__metal_driver_cpu_get_instruction_length+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20013178:	4789                	li	a5,2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2001317a:	853e                	mv	a0,a5
2001317c:	4472                	lw	s0,28(sp)
2001317e:	6105                	addi	sp,sp,32
20013180:	8082                	ret

20013182 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20013182:	7179                	addi	sp,sp,-48
20013184:	d622                	sw	s0,44(sp)
20013186:	1800                	addi	s0,sp,48
20013188:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2001318c:	341027f3          	csrr	a5,mepc
20013190:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20013194:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:827
}
20013198:	853e                	mv	a0,a5
2001319a:	5432                	lw	s0,44(sp)
2001319c:	6145                	addi	sp,sp,48
2001319e:	8082                	ret

200131a0 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
200131a0:	1101                	addi	sp,sp,-32
200131a2:	ce22                	sw	s0,28(sp)
200131a4:	1000                	addi	s0,sp,32
200131a6:	fea42623          	sw	a0,-20(s0)
200131aa:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
200131ae:	fe842783          	lw	a5,-24(s0)
200131b2:	34179073          	csrw	mepc,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
200131b6:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:832
}
200131b8:	853e                	mv	a0,a5
200131ba:	4472                	lw	s0,28(sp)
200131bc:	6105                	addi	sp,sp,32
200131be:	8082                	ret

200131c0 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200131c0:	1101                	addi	sp,sp,-32
200131c2:	ce06                	sw	ra,28(sp)
200131c4:	cc22                	sw	s0,24(sp)
200131c6:	1000                	addi	s0,sp,32
200131c8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200131cc:	fec42503          	lw	a0,-20(s0)
200131d0:	e96fe0ef          	jal	ra,20011866 <__metal_driver_cpu_buserror>
200131d4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:836
}
200131d6:	853e                	mv	a0,a5
200131d8:	40f2                	lw	ra,28(sp)
200131da:	4462                	lw	s0,24(sp)
200131dc:	6105                	addi	sp,sp,32
200131de:	8082                	ret

200131e0 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1248



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
200131e0:	1101                	addi	sp,sp,-32
200131e2:	ce22                	sw	s0,28(sp)
200131e4:	1000                	addi	s0,sp,32
200131e6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1249
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
200131ea:	800007b7          	lui	a5,0x80000
200131ee:	06c78793          	addi	a5,a5,108 # 8000006c <__global_pointer$+0xfffff3e4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1250
}
200131f2:	853e                	mv	a0,a5
200131f4:	4472                	lw	s0,28(sp)
200131f6:	6105                	addi	sp,sp,32
200131f8:	8082                	ret

200131fa <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1253

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
200131fa:	1101                	addi	sp,sp,-32
200131fc:	ce22                	sw	s0,28(sp)
200131fe:	1000                	addi	s0,sp,32
20013200:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1254
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013204:	81418793          	addi	a5,gp,-2028 # 8000049c <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1255
}
20013208:	853e                	mv	a0,a5
2001320a:	4472                	lw	s0,28(sp)
2001320c:	6105                	addi	sp,sp,32
2001320e:	8082                	ret

20013210 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1263
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20013210:	1101                	addi	sp,sp,-32
20013212:	ce22                	sw	s0,28(sp)
20013214:	1000                	addi	s0,sp,32
20013216:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1264
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2001321a:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1265
}
2001321c:	853e                	mv	a0,a5
2001321e:	4472                	lw	s0,28(sp)
20013220:	6105                	addi	sp,sp,32
20013222:	8082                	ret

20013224 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20013224:	1141                	addi	sp,sp,-16
20013226:	c622                	sw	s0,12(sp)
20013228:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001322a:	200117b7          	lui	a5,0x20011
2001322e:	d6c78793          	addi	a5,a5,-660 # 20010d6c <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
20013232:	853e                	mv	a0,a5
20013234:	4432                	lw	s0,12(sp)
20013236:	0141                	addi	sp,sp,16
20013238:	8082                	ret

2001323a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2001323a:	7139                	addi	sp,sp,-64
2001323c:	de06                	sw	ra,60(sp)
2001323e:	dc22                	sw	s0,56(sp)
20013240:	0080                	addi	s0,sp,64
20013242:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20013246:	fcc42503          	lw	a0,-52(s0)
2001324a:	3f59                	jal	200131e0 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2001324c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20013250:	fcc42503          	lw	a0,-52(s0)
20013254:	3f75                	jal	20013210 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20013256:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
2001325a:	fcc42503          	lw	a0,-52(s0)
2001325e:	3f71                	jal	200131fa <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20013260:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013264:	37c1                	jal	20013224 <__metal_driver_sifive_fe310_g000_prci_vtable>
20013266:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
2001326a:	fe042783          	lw	a5,-32(s0)
2001326e:	439c                	lw	a5,0(a5)
20013270:	fe842583          	lw	a1,-24(s0)
20013274:	fe442503          	lw	a0,-28(s0)
20013278:	9782                	jalr	a5
2001327a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
2001327e:	fdc42703          	lw	a4,-36(s0)
20013282:	400007b7          	lui	a5,0x40000
20013286:	8ff9                	and	a5,a5,a4
20013288:	e399                	bnez	a5,2001328e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
2001328a:	57fd                	li	a5,-1
2001328c:	a025                	j	200132b4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
2001328e:	fdc42783          	lw	a5,-36(s0)
20013292:	0007c463          	bltz	a5,2001329a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20013296:	57fd                	li	a5,-1
20013298:	a831                	j	200132b4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
2001329a:	fec42503          	lw	a0,-20(s0)
2001329e:	0bf000ef          	jal	ra,20013b5c <metal_clock_get_rate_hz>
200132a2:	87aa                	mv	a5,a0
200132a4:	873e                	mv	a4,a5
200132a6:	fdc42783          	lw	a5,-36(s0)
200132aa:	03f7f793          	andi	a5,a5,63
200132ae:	0785                	addi	a5,a5,1
200132b0:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
200132b4:	853e                	mv	a0,a5
200132b6:	50f2                	lw	ra,60(sp)
200132b8:	5462                	lw	s0,56(sp)
200132ba:	6121                	addi	sp,sp,64
200132bc:	8082                	ret

200132be <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200132be:	1101                	addi	sp,sp,-32
200132c0:	ce06                	sw	ra,28(sp)
200132c2:	cc22                	sw	s0,24(sp)
200132c4:	1000                	addi	s0,sp,32
200132c6:	fea42623          	sw	a0,-20(s0)
200132ca:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
200132ce:	fec42503          	lw	a0,-20(s0)
200132d2:	37a5                	jal	2001323a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
200132d4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
200132d6:	853e                	mv	a0,a5
200132d8:	40f2                	lw	ra,28(sp)
200132da:	4462                	lw	s0,24(sp)
200132dc:	6105                	addi	sp,sp,32
200132de:	8082                	ret

200132e0 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1271
{
200132e0:	1101                	addi	sp,sp,-32
200132e2:	ce22                	sw	s0,28(sp)
200132e4:	1000                	addi	s0,sp,32
200132e6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1272
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
200132ea:	800007b7          	lui	a5,0x80000
200132ee:	06078793          	addi	a5,a5,96 # 80000060 <__global_pointer$+0xfffff3d8>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1273
}
200132f2:	853e                	mv	a0,a5
200132f4:	4472                	lw	s0,28(sp)
200132f6:	6105                	addi	sp,sp,32
200132f8:	8082                	ret

200132fa <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1276
{
200132fa:	1101                	addi	sp,sp,-32
200132fc:	ce22                	sw	s0,28(sp)
200132fe:	1000                	addi	s0,sp,32
20013300:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1277
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013304:	81418793          	addi	a5,gp,-2028 # 8000049c <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1278
}
20013308:	853e                	mv	a0,a5
2001330a:	4472                	lw	s0,28(sp)
2001330c:	6105                	addi	sp,sp,32
2001330e:	8082                	ret

20013310 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1281
{
20013310:	1101                	addi	sp,sp,-32
20013312:	ce22                	sw	s0,28(sp)
20013314:	1000                	addi	s0,sp,32
20013316:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1282
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2001331a:	4791                	li	a5,4
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1283
}
2001331c:	853e                	mv	a0,a5
2001331e:	4472                	lw	s0,28(sp)
20013320:	6105                	addi	sp,sp,32
20013322:	8082                	ret

20013324 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
20013324:	1141                	addi	sp,sp,-16
20013326:	c622                	sw	s0,12(sp)
20013328:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001332a:	200117b7          	lui	a5,0x20011
2001332e:	d6c78793          	addi	a5,a5,-660 # 20010d6c <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
20013332:	853e                	mv	a0,a5
20013334:	4432                	lw	s0,12(sp)
20013336:	0141                	addi	sp,sp,16
20013338:	8082                	ret

2001333a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
2001333a:	7139                	addi	sp,sp,-64
2001333c:	de06                	sw	ra,60(sp)
2001333e:	dc22                	sw	s0,56(sp)
20013340:	0080                	addi	s0,sp,64
20013342:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20013346:	fcc42503          	lw	a0,-52(s0)
2001334a:	3f59                	jal	200132e0 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2001334c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20013350:	fcc42503          	lw	a0,-52(s0)
20013354:	3f75                	jal	20013310 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20013356:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
2001335a:	fcc42503          	lw	a0,-52(s0)
2001335e:	3f71                	jal	200132fa <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20013360:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013364:	37c1                	jal	20013324 <__metal_driver_sifive_fe310_g000_prci_vtable>
20013366:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
2001336a:	fe042783          	lw	a5,-32(s0)
2001336e:	439c                	lw	a5,0(a5)
20013370:	fe842583          	lw	a1,-24(s0)
20013374:	fe442503          	lw	a0,-28(s0)
20013378:	9782                	jalr	a5
2001337a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
2001337e:	fdc42703          	lw	a4,-36(s0)
20013382:	400007b7          	lui	a5,0x40000
20013386:	8ff9                	and	a5,a5,a4
20013388:	e399                	bnez	a5,2001338e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
2001338a:	57fd                	li	a5,-1
2001338c:	a821                	j	200133a4 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
2001338e:	fdc42783          	lw	a5,-36(s0)
20013392:	0007c463          	bltz	a5,2001339a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20013396:	57fd                	li	a5,-1
20013398:	a031                	j	200133a4 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
2001339a:	fec42503          	lw	a0,-20(s0)
2001339e:	7be000ef          	jal	ra,20013b5c <metal_clock_get_rate_hz>
200133a2:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
200133a4:	853e                	mv	a0,a5
200133a6:	50f2                	lw	ra,60(sp)
200133a8:	5462                	lw	s0,56(sp)
200133aa:	6121                	addi	sp,sp,64
200133ac:	8082                	ret

200133ae <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200133ae:	1101                	addi	sp,sp,-32
200133b0:	ce06                	sw	ra,28(sp)
200133b2:	cc22                	sw	s0,24(sp)
200133b4:	1000                	addi	s0,sp,32
200133b6:	fea42623          	sw	a0,-20(s0)
200133ba:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
200133be:	fec42503          	lw	a0,-20(s0)
200133c2:	3fa5                	jal	2001333a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
200133c4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
200133c6:	853e                	mv	a0,a5
200133c8:	40f2                	lw	ra,28(sp)
200133ca:	4462                	lw	s0,24(sp)
200133cc:	6105                	addi	sp,sp,32
200133ce:	8082                	ret

200133d0 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1332
{
200133d0:	1101                	addi	sp,sp,-32
200133d2:	ce22                	sw	s0,28(sp)
200133d4:	1000                	addi	s0,sp,32
200133d6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1333
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
200133da:	800007b7          	lui	a5,0x80000
200133de:	46078793          	addi	a5,a5,1120 # 80000460 <__global_pointer$+0xfffff7d8>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1334
}
200133e2:	853e                	mv	a0,a5
200133e4:	4472                	lw	s0,28(sp)
200133e6:	6105                	addi	sp,sp,32
200133e8:	8082                	ret

200133ea <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1337
{
200133ea:	1101                	addi	sp,sp,-32
200133ec:	ce22                	sw	s0,28(sp)
200133ee:	1000                	addi	s0,sp,32
200133f0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1338
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
200133f4:	800007b7          	lui	a5,0x80000
200133f8:	46c78793          	addi	a5,a5,1132 # 8000046c <__global_pointer$+0xfffff7e4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1339
}
200133fc:	853e                	mv	a0,a5
200133fe:	4472                	lw	s0,28(sp)
20013400:	6105                	addi	sp,sp,32
20013402:	8082                	ret

20013404 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1342
{
20013404:	1101                	addi	sp,sp,-32
20013406:	ce22                	sw	s0,28(sp)
20013408:	1000                	addi	s0,sp,32
2001340a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1343
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001340e:	81418793          	addi	a5,gp,-2028 # 8000049c <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1344
}
20013412:	853e                	mv	a0,a5
20013414:	4472                	lw	s0,28(sp)
20013416:	6105                	addi	sp,sp,32
20013418:	8082                	ret

2001341a <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1347
{
2001341a:	1101                	addi	sp,sp,-32
2001341c:	ce22                	sw	s0,28(sp)
2001341e:	1000                	addi	s0,sp,32
20013420:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1348
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20013424:	47b1                	li	a5,12
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1349
}
20013426:	853e                	mv	a0,a5
20013428:	4472                	lw	s0,28(sp)
2001342a:	6105                	addi	sp,sp,32
2001342c:	8082                	ret

2001342e <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1352
{
2001342e:	1141                	addi	sp,sp,-16
20013430:	c622                	sw	s0,12(sp)
20013432:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1353
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013434:	81418793          	addi	a5,gp,-2028 # 8000049c <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1354
}
20013438:	853e                	mv	a0,a5
2001343a:	4432                	lw	s0,12(sp)
2001343c:	0141                	addi	sp,sp,16
2001343e:	8082                	ret

20013440 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1357
{
20013440:	1141                	addi	sp,sp,-16
20013442:	c622                	sw	s0,12(sp)
20013444:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1358
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20013446:	47a1                	li	a5,8
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1359
}
20013448:	853e                	mv	a0,a5
2001344a:	4432                	lw	s0,12(sp)
2001344c:	0141                	addi	sp,sp,16
2001344e:	8082                	ret

20013450 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1362
{
20013450:	1141                	addi	sp,sp,-16
20013452:	c622                	sw	s0,12(sp)
20013454:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1363
		return 16000000;
20013456:	00f427b7          	lui	a5,0xf42
2001345a:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1364
}
2001345e:	853e                	mv	a0,a5
20013460:	4432                	lw	s0,12(sp)
20013462:	0141                	addi	sp,sp,16
20013464:	8082                	ret

20013466 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1370
{
20013466:	1141                	addi	sp,sp,-16
20013468:	c622                	sw	s0,12(sp)
2001346a:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1371
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2001346c:	100087b7          	lui	a5,0x10008
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1372
}
20013470:	853e                	mv	a0,a5
20013472:	4432                	lw	s0,12(sp)
20013474:	0141                	addi	sp,sp,16
20013476:	8082                	ret

20013478 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
20013478:	1141                	addi	sp,sp,-16
2001347a:	c622                	sw	s0,12(sp)
2001347c:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001347e:	200117b7          	lui	a5,0x20011
20013482:	d6c78793          	addi	a5,a5,-660 # 20010d6c <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
20013486:	853e                	mv	a0,a5
20013488:	4432                	lw	s0,12(sp)
2001348a:	0141                	addi	sp,sp,16
2001348c:	8082                	ret

2001348e <get_pll_config_freq>:
get_pll_config_freq():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
2001348e:	1101                	addi	sp,sp,-32
20013490:	ce22                	sw	s0,28(sp)
20013492:	1000                	addi	s0,sp,32
20013494:	fea42623          	sw	a0,-20(s0)
20013498:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2001349c:	fe842783          	lw	a5,-24(s0)
200134a0:	479c                	lw	a5,8(a5)
200134a2:	fec42703          	lw	a4,-20(s0)
200134a6:	00f76963          	bltu	a4,a5,200134b8 <get_pll_config_freq+0x2a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
200134aa:	fe842783          	lw	a5,-24(s0)
200134ae:	47dc                	lw	a5,12(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
200134b0:	fec42703          	lw	a4,-20(s0)
200134b4:	00e7f463          	bgeu	a5,a4,200134bc <get_pll_config_freq+0x2e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
200134b8:	57fd                	li	a5,-1
200134ba:	a829                	j	200134d4 <get_pll_config_freq+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
200134bc:	fe842783          	lw	a5,-24(s0)
200134c0:	4398                	lw	a4,0(a5)
200134c2:	fec42783          	lw	a5,-20(s0)
200134c6:	02f70733          	mul	a4,a4,a5
200134ca:	fe842783          	lw	a5,-24(s0)
200134ce:	43dc                	lw	a5,4(a5)
200134d0:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
200134d4:	853e                	mv	a0,a5
200134d6:	4472                	lw	s0,28(sp)
200134d8:	6105                	addi	sp,sp,32
200134da:	8082                	ret

200134dc <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
200134dc:	7139                	addi	sp,sp,-64
200134de:	de06                	sw	ra,60(sp)
200134e0:	dc22                	sw	s0,56(sp)
200134e2:	0080                	addi	s0,sp,64
200134e4:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
200134e8:	fcc42783          	lw	a5,-52(s0)
200134ec:	853e                	mv	a0,a5
200134ee:	3df5                	jal	200133ea <__metal_driver_sifive_fe310_g000_pll_pllref>
200134f0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200134f4:	3fb1                	jal	20013450 <__metal_driver_sifive_fe310_g000_pll_init_rate>
200134f6:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
200134fa:	3799                	jal	20013440 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200134fc:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013500:	379d                	jal	20013466 <__metal_driver_sifive_fe310_g000_prci_base>
20013502:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20013506:	fe042703          	lw	a4,-32(s0)
2001350a:	fe442783          	lw	a5,-28(s0)
2001350e:	97ba                	add	a5,a5,a4
20013510:	fcf42e23          	sw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20013514:	fcc42783          	lw	a5,-52(s0)
20013518:	43dc                	lw	a5,4(a5)
2001351a:	853e                	mv	a0,a5
2001351c:	2bfd                	jal	20013b1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2001351e:	fdc42783          	lw	a5,-36(s0)
20013522:	4398                	lw	a4,0(a5)
20013524:	67c1                	lui	a5,0x10
20013526:	8ff9                	and	a5,a5,a4
20013528:	cb91                	beqz	a5,2001353c <__metal_driver_sifive_fe310_g000_pll_init+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001352a:	fdc42783          	lw	a5,-36(s0)
2001352e:	4398                	lw	a4,0(a5)
20013530:	77c1                	lui	a5,0xffff0
20013532:	17fd                	addi	a5,a5,-1
20013534:	8f7d                	and	a4,a4,a5
20013536:	fdc42783          	lw	a5,-36(s0)
2001353a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2001353c:	fec42783          	lw	a5,-20(s0)
20013540:	cb91                	beqz	a5,20013554 <__metal_driver_sifive_fe310_g000_pll_init+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20013542:	fdc42783          	lw	a5,-36(s0)
20013546:	4398                	lw	a4,0(a5)
20013548:	000207b7          	lui	a5,0x20
2001354c:	8f5d                	or	a4,a4,a5
2001354e:	fdc42783          	lw	a5,-36(s0)
20013552:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20013554:	fcc42783          	lw	a5,-52(s0)
20013558:	439c                	lw	a5,0(a5)
2001355a:	43d8                	lw	a4,4(a5)
2001355c:	fcc42783          	lw	a5,-52(s0)
20013560:	fe842583          	lw	a1,-24(s0)
20013564:	853e                	mv	a0,a5
20013566:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20013568:	fcc42783          	lw	a5,-52(s0)
2001356c:	479c                	lw	a5,8(a5)
2001356e:	853e                	mv	a0,a5
20013570:	236d                	jal	20013b1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20013572:	0001                	nop
20013574:	50f2                	lw	ra,60(sp)
20013576:	5462                	lw	s0,56(sp)
20013578:	6121                	addi	sp,sp,64
2001357a:	8082                	ret

2001357c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
2001357c:	711d                	addi	sp,sp,-96
2001357e:	ce86                	sw	ra,92(sp)
20013580:	cca2                	sw	s0,88(sp)
20013582:	1080                	addi	s0,sp,96
20013584:	faa42623          	sw	a0,-84(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20013588:	fac42503          	lw	a0,-84(s0)
2001358c:	3db9                	jal	200133ea <__metal_driver_sifive_fe310_g000_pll_pllref>
2001358e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20013592:	fac42503          	lw	a0,-84(s0)
20013596:	3d2d                	jal	200133d0 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20013598:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001359c:	fac42503          	lw	a0,-84(s0)
200135a0:	3545                	jal	20013440 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200135a2:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200135a6:	fac42503          	lw	a0,-84(s0)
200135aa:	3551                	jal	2001342e <__metal_driver_sifive_fe310_g000_pll_config_base>
200135ac:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200135b0:	fac42503          	lw	a0,-84(s0)
200135b4:	359d                	jal	2001341a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200135b6:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
200135ba:	fac42503          	lw	a0,-84(s0)
200135be:	3599                	jal	20013404 <__metal_driver_sifive_fe310_g000_pll_divider_base>
200135c0:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
200135c4:	3d55                	jal	20013478 <__metal_driver_sifive_fe310_g000_prci_vtable>
200135c6:	fca42a23          	sw	a0,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
200135ca:	fd442783          	lw	a5,-44(s0)
200135ce:	439c                	lw	a5,0(a5)
200135d0:	fe442583          	lw	a1,-28(s0)
200135d4:	fe042503          	lw	a0,-32(s0)
200135d8:	9782                	jalr	a5
200135da:	fca42823          	sw	a0,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
200135de:	fd442783          	lw	a5,-44(s0)
200135e2:	439c                	lw	a5,0(a5)
200135e4:	fdc42583          	lw	a1,-36(s0)
200135e8:	fd842503          	lw	a0,-40(s0)
200135ec:	9782                	jalr	a5
200135ee:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
200135f2:	fd042703          	lw	a4,-48(s0)
200135f6:	67c1                	lui	a5,0x10
200135f8:	8f7d                	and	a4,a4,a5
200135fa:	67c1                	lui	a5,0x10
200135fc:	00f77763          	bgeu	a4,a5,2001360a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x8e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20013600:	fe842503          	lw	a0,-24(s0)
20013604:	2ba1                	jal	20013b5c <metal_clock_get_rate_hz>
20013606:	87aa                	mv	a5,a0
20013608:	a8d9                	j	200136de <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2001360a:	fd042703          	lw	a4,-48(s0)
2001360e:	000207b7          	lui	a5,0x20
20013612:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20013614:	000207b7          	lui	a5,0x20
20013618:	00f76563          	bltu	a4,a5,20013622 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2001361c:	fec42783          	lw	a5,-20(s0)
20013620:	a019                	j	20013626 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20013622:	fe842783          	lw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20013626:	853e                	mv	a0,a5
20013628:	2b15                	jal	20013b5c <metal_clock_get_rate_hz>
2001362a:	fca42423          	sw	a0,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
2001362e:	fd042703          	lw	a4,-48(s0)
20013632:	000407b7          	lui	a5,0x40
20013636:	8f7d                	and	a4,a4,a5
20013638:	000407b7          	lui	a5,0x40
2001363c:	00f76563          	bltu	a4,a5,20013646 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xca>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20013640:	fc842783          	lw	a5,-56(s0)
20013644:	a869                	j	200136de <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20013646:	fd042783          	lw	a5,-48(s0)
2001364a:	8b9d                	andi	a5,a5,7
2001364c:	0785                	addi	a5,a5,1
2001364e:	fcf42223          	sw	a5,-60(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20013652:	fd042783          	lw	a5,-48(s0)
20013656:	3f07f793          	andi	a5,a5,1008
2001365a:	8391                	srli	a5,a5,0x4
2001365c:	0785                	addi	a5,a5,1
2001365e:	0786                	slli	a5,a5,0x1
20013660:	fcf42023          	sw	a5,-64(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20013664:	fd042703          	lw	a4,-48(s0)
20013668:	6785                	lui	a5,0x1
2001366a:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001366e:	8f7d                	and	a4,a4,a5
20013670:	3ff00793          	li	a5,1023
20013674:	00e7e463          	bltu	a5,a4,2001367c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x100>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20013678:	57fd                	li	a5,-1
2001367a:	a095                	j	200136de <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
2001367c:	fd042703          	lw	a4,-48(s0)
20013680:	6785                	lui	a5,0x1
20013682:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013686:	8ff9                	and	a5,a5,a4
20013688:	83a9                	srli	a5,a5,0xa
2001368a:	4705                	li	a4,1
2001368c:	00f717b3          	sll	a5,a4,a5
20013690:	faf42e23          	sw	a5,-68(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20013694:	fc842703          	lw	a4,-56(s0)
20013698:	fc442783          	lw	a5,-60(s0)
2001369c:	02f74733          	div	a4,a4,a5
200136a0:	fc042783          	lw	a5,-64(s0)
200136a4:	02f70733          	mul	a4,a4,a5
200136a8:	fbc42783          	lw	a5,-68(s0)
200136ac:	02f747b3          	div	a5,a4,a5
200136b0:	faf42c23          	sw	a5,-72(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
200136b4:	fcc42783          	lw	a5,-52(s0)
200136b8:	1007f713          	andi	a4,a5,256
200136bc:	0ff00793          	li	a5,255
200136c0:	00e7f563          	bgeu	a5,a4,200136ca <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x14e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
200136c4:	fb842783          	lw	a5,-72(s0)
200136c8:	a819                	j	200136de <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
200136ca:	fb842703          	lw	a4,-72(s0)
200136ce:	fcc42783          	lw	a5,-52(s0)
200136d2:	03f7f793          	andi	a5,a5,63
200136d6:	0785                	addi	a5,a5,1
200136d8:	0786                	slli	a5,a5,0x1
200136da:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
200136de:	853e                	mv	a0,a5
200136e0:	40f6                	lw	ra,92(sp)
200136e2:	4466                	lw	s0,88(sp)
200136e4:	6125                	addi	sp,sp,96
200136e6:	8082                	ret

200136e8 <find_closest_config>:
find_closest_config():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
200136e8:	7139                	addi	sp,sp,-64
200136ea:	de06                	sw	ra,60(sp)
200136ec:	dc22                	sw	s0,56(sp)
200136ee:	0080                	addi	s0,sp,64
200136f0:	fca42623          	sw	a0,-52(s0)
200136f4:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
200136f8:	57fd                	li	a5,-1
200136fa:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
200136fe:	800007b7          	lui	a5,0x80000
20013702:	fff7c793          	not	a5,a5
20013706:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2001370a:	04300793          	li	a5,67
2001370e:	fef42223          	sw	a5,-28(s0)
20013712:	a0ad                	j	2001377c <find_closest_config+0x94>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20013714:	fcc42683          	lw	a3,-52(s0)
20013718:	fe442783          	lw	a5,-28(s0)
2001371c:	00579713          	slli	a4,a5,0x5
20013720:	200107b7          	lui	a5,0x20010
20013724:	4c878793          	addi	a5,a5,1224 # 200104c8 <pll_configs>
20013728:	97ba                	add	a5,a5,a4
2001372a:	85be                	mv	a1,a5
2001372c:	8536                	mv	a0,a3
2001372e:	3385                	jal	2001348e <get_pll_config_freq>
20013730:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20013734:	fe042703          	lw	a4,-32(s0)
20013738:	57fd                	li	a5,-1
2001373a:	02f70c63          	beq	a4,a5,20013772 <find_closest_config+0x8a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2001373e:	fe042703          	lw	a4,-32(s0)
20013742:	fc842783          	lw	a5,-56(s0)
20013746:	8f1d                	sub	a4,a4,a5
20013748:	41f75793          	srai	a5,a4,0x1f
2001374c:	8f3d                	xor	a4,a4,a5
2001374e:	40f707b3          	sub	a5,a4,a5
20013752:	fcf42e23          	sw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20013756:	fdc42703          	lw	a4,-36(s0)
2001375a:	fe842783          	lw	a5,-24(s0)
2001375e:	00f75a63          	bge	a4,a5,20013772 <find_closest_config+0x8a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20013762:	fe442783          	lw	a5,-28(s0)
20013766:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2001376a:	fdc42783          	lw	a5,-36(s0)
2001376e:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20013772:	fe442783          	lw	a5,-28(s0)
20013776:	17fd                	addi	a5,a5,-1
20013778:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2001377c:	fe442783          	lw	a5,-28(s0)
20013780:	f807dae3          	bgez	a5,20013714 <find_closest_config+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20013784:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20013788:	853e                	mv	a0,a5
2001378a:	50f2                	lw	ra,60(sp)
2001378c:	5462                	lw	s0,56(sp)
2001378e:	6121                	addi	sp,sp,64
20013790:	8082                	ret

20013792 <configure_pll>:
configure_pll():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20013792:	7179                	addi	sp,sp,-48
20013794:	d606                	sw	ra,44(sp)
20013796:	d422                	sw	s0,40(sp)
20013798:	1800                	addi	s0,sp,48
2001379a:	fca42e23          	sw	a0,-36(s0)
2001379e:	fcb42c23          	sw	a1,-40(s0)
200137a2:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200137a6:	fdc42783          	lw	a5,-36(s0)
200137aa:	439c                	lw	a5,0(a5)
200137ac:	ff87f713          	andi	a4,a5,-8
200137b0:	fdc42783          	lw	a5,-36(s0)
200137b4:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
200137b6:	fdc42783          	lw	a5,-36(s0)
200137ba:	4398                	lw	a4,0(a5)
200137bc:	fd442783          	lw	a5,-44(s0)
200137c0:	4b9c                	lw	a5,16(a5)
200137c2:	8b9d                	andi	a5,a5,7
200137c4:	8f5d                	or	a4,a4,a5
200137c6:	fdc42783          	lw	a5,-36(s0)
200137ca:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
200137cc:	fdc42783          	lw	a5,-36(s0)
200137d0:	439c                	lw	a5,0(a5)
200137d2:	c0f7f713          	andi	a4,a5,-1009
200137d6:	fdc42783          	lw	a5,-36(s0)
200137da:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
200137dc:	fdc42783          	lw	a5,-36(s0)
200137e0:	4398                	lw	a4,0(a5)
200137e2:	fd442783          	lw	a5,-44(s0)
200137e6:	4bdc                	lw	a5,20(a5)
200137e8:	0792                	slli	a5,a5,0x4
200137ea:	3f07f793          	andi	a5,a5,1008
200137ee:	8f5d                	or	a4,a4,a5
200137f0:	fdc42783          	lw	a5,-36(s0)
200137f4:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
200137f6:	fdc42783          	lw	a5,-36(s0)
200137fa:	4398                	lw	a4,0(a5)
200137fc:	77fd                	lui	a5,0xfffff
200137fe:	3ff78793          	addi	a5,a5,1023 # fffff3ff <__global_pointer$+0x7fffe777>
20013802:	8f7d                	and	a4,a4,a5
20013804:	fdc42783          	lw	a5,-36(s0)
20013808:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2001380a:	fdc42783          	lw	a5,-36(s0)
2001380e:	4398                	lw	a4,0(a5)
20013810:	fd442783          	lw	a5,-44(s0)
20013814:	4f9c                	lw	a5,24(a5)
20013816:	00a79693          	slli	a3,a5,0xa
2001381a:	6785                	lui	a5,0x1
2001381c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013820:	8ff5                	and	a5,a5,a3
20013822:	8f5d                	or	a4,a4,a5
20013824:	fdc42783          	lw	a5,-36(s0)
20013828:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2001382a:	fd442783          	lw	a5,-44(s0)
2001382e:	4fdc                	lw	a5,28(a5)
20013830:	0207db63          	bgez	a5,20013866 <configure_pll+0xd4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20013834:	fd842783          	lw	a5,-40(s0)
20013838:	439c                	lw	a5,0(a5)
2001383a:	1007e713          	ori	a4,a5,256
2001383e:	fd842783          	lw	a5,-40(s0)
20013842:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20013844:	fd842783          	lw	a5,-40(s0)
20013848:	439c                	lw	a5,0(a5)
2001384a:	fc07f713          	andi	a4,a5,-64
2001384e:	fd842783          	lw	a5,-40(s0)
20013852:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20013854:	fd842783          	lw	a5,-40(s0)
20013858:	439c                	lw	a5,0(a5)
2001385a:	0017e713          	ori	a4,a5,1
2001385e:	fd842783          	lw	a5,-40(s0)
20013862:	c398                	sw	a4,0(a5)
20013864:	a82d                	j	2001389e <configure_pll+0x10c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20013866:	fd842783          	lw	a5,-40(s0)
2001386a:	439c                	lw	a5,0(a5)
2001386c:	eff7f713          	andi	a4,a5,-257
20013870:	fd842783          	lw	a5,-40(s0)
20013874:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20013876:	fd842783          	lw	a5,-40(s0)
2001387a:	439c                	lw	a5,0(a5)
2001387c:	fc07f713          	andi	a4,a5,-64
20013880:	fd842783          	lw	a5,-40(s0)
20013884:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20013886:	fd842783          	lw	a5,-40(s0)
2001388a:	4398                	lw	a4,0(a5)
2001388c:	fd442783          	lw	a5,-44(s0)
20013890:	4fdc                	lw	a5,28(a5)
20013892:	03f7f793          	andi	a5,a5,63
20013896:	8f5d                	or	a4,a4,a5
20013898:	fd842783          	lw	a5,-40(s0)
2001389c:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2001389e:	fdc42783          	lw	a5,-36(s0)
200138a2:	4398                	lw	a4,0(a5)
200138a4:	fffc07b7          	lui	a5,0xfffc0
200138a8:	17fd                	addi	a5,a5,-1
200138aa:	8f7d                	and	a4,a4,a5
200138ac:	fdc42783          	lw	a5,-36(s0)
200138b0:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
200138b2:	fe040793          	addi	a5,s0,-32
200138b6:	863e                	mv	a2,a5
200138b8:	4585                	li	a1,1
200138ba:	800007b7          	lui	a5,0x80000
200138be:	48c78513          	addi	a0,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
200138c2:	d7dfd0ef          	jal	ra,2001163e <__metal_driver_riscv_clint0_command_request>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
200138c6:	fe042603          	lw	a2,-32(s0)
200138ca:	fe442683          	lw	a3,-28(s0)
200138ce:	4511                	li	a0,4
200138d0:	4581                	li	a1,0
200138d2:	00a60733          	add	a4,a2,a0
200138d6:	883a                	mv	a6,a4
200138d8:	00c83833          	sltu	a6,a6,a2
200138dc:	00b687b3          	add	a5,a3,a1
200138e0:	00f806b3          	add	a3,a6,a5
200138e4:	87b6                	mv	a5,a3
200138e6:	fee42423          	sw	a4,-24(s0)
200138ea:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200138ee:	a819                	j	20013904 <configure_pll+0x172>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
200138f0:	fe040793          	addi	a5,s0,-32
200138f4:	863e                	mv	a2,a5
200138f6:	4585                	li	a1,1
200138f8:	800007b7          	lui	a5,0x80000
200138fc:	48c78513          	addi	a0,a5,1164 # 8000048c <__global_pointer$+0xfffff804>
20013900:	d3ffd0ef          	jal	ra,2001163e <__metal_driver_riscv_clint0_command_request>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20013904:	fe042703          	lw	a4,-32(s0)
20013908:	fe442783          	lw	a5,-28(s0)
2001390c:	fec42683          	lw	a3,-20(s0)
20013910:	863e                	mv	a2,a5
20013912:	00c6ec63          	bltu	a3,a2,2001392a <configure_pll+0x198>
20013916:	fec42683          	lw	a3,-20(s0)
2001391a:	863e                	mv	a2,a5
2001391c:	fcc69ae3          	bne	a3,a2,200138f0 <configure_pll+0x15e>
20013920:	fe842683          	lw	a3,-24(s0)
20013924:	87ba                	mv	a5,a4
20013926:	fcf6f5e3          	bgeu	a3,a5,200138f0 <configure_pll+0x15e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2001392a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2001392c:	fdc42783          	lw	a5,-36(s0)
20013930:	439c                	lw	a5,0(a5)
20013932:	fe07dde3          	bgez	a5,2001392c <configure_pll+0x19a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20013936:	0001                	nop
20013938:	0001                	nop
2001393a:	50b2                	lw	ra,44(sp)
2001393c:	5422                	lw	s0,40(sp)
2001393e:	6145                	addi	sp,sp,48
20013940:	8082                	ret

20013942 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20013942:	715d                	addi	sp,sp,-80
20013944:	c686                	sw	ra,76(sp)
20013946:	c4a2                	sw	s0,72(sp)
20013948:	0880                	addi	s0,sp,80
2001394a:	faa42e23          	sw	a0,-68(s0)
2001394e:	fab42c23          	sw	a1,-72(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20013952:	fbc42503          	lw	a0,-68(s0)
20013956:	a95ff0ef          	jal	ra,200133ea <__metal_driver_sifive_fe310_g000_pll_pllref>
2001395a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2001395e:	fbc42503          	lw	a0,-68(s0)
20013962:	a6fff0ef          	jal	ra,200133d0 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20013966:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001396a:	fbc42503          	lw	a0,-68(s0)
2001396e:	ad3ff0ef          	jal	ra,20013440 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013972:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20013976:	fbc42503          	lw	a0,-68(s0)
2001397a:	aa1ff0ef          	jal	ra,2001341a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001397e:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013982:	ae5ff0ef          	jal	ra,20013466 <__metal_driver_sifive_fe310_g000_prci_base>
20013986:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001398a:	fdc42703          	lw	a4,-36(s0)
2001398e:	fe442783          	lw	a5,-28(s0)
20013992:	97ba                	add	a5,a5,a4
20013994:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20013998:	fdc42703          	lw	a4,-36(s0)
2001399c:	fe042783          	lw	a5,-32(s0)
200139a0:	97ba                	add	a5,a5,a4
200139a2:	fcf42a23          	sw	a5,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200139a6:	fd842783          	lw	a5,-40(s0)
200139aa:	4398                	lw	a4,0(a5)
200139ac:	67c1                	lui	a5,0x10
200139ae:	8ff9                	and	a5,a5,a4
200139b0:	cb91                	beqz	a5,200139c4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200139b2:	fd842783          	lw	a5,-40(s0)
200139b6:	4398                	lw	a4,0(a5)
200139b8:	77c1                	lui	a5,0xffff0
200139ba:	17fd                	addi	a5,a5,-1
200139bc:	8f7d                	and	a4,a4,a5
200139be:	fd842783          	lw	a5,-40(s0)
200139c2:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
200139c4:	fd842783          	lw	a5,-40(s0)
200139c8:	4398                	lw	a4,0(a5)
200139ca:	000207b7          	lui	a5,0x20
200139ce:	8ff9                	and	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
200139d0:	c781                	beqz	a5,200139d8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
200139d2:	fec42783          	lw	a5,-20(s0)
200139d6:	a019                	j	200139dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
200139d8:	fe842783          	lw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
200139dc:	853e                	mv	a0,a5
200139de:	2abd                	jal	20013b5c <metal_clock_get_rate_hz>
200139e0:	fca42823          	sw	a0,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
200139e4:	fd042703          	lw	a4,-48(s0)
200139e8:	87ba                	mv	a5,a4
200139ea:	0786                	slli	a5,a5,0x1
200139ec:	97ba                	add	a5,a5,a4
200139ee:	41f7d713          	srai	a4,a5,0x1f
200139f2:	8b0d                	andi	a4,a4,3
200139f4:	97ba                	add	a5,a5,a4
200139f6:	8789                	srai	a5,a5,0x2
200139f8:	873e                	mv	a4,a5
200139fa:	fb842783          	lw	a5,-72(s0)
200139fe:	02e7cb63          	blt	a5,a4,20013a34 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20013a02:	fd042703          	lw	a4,-48(s0)
20013a06:	87ba                	mv	a5,a4
20013a08:	078a                	slli	a5,a5,0x2
20013a0a:	97ba                	add	a5,a5,a4
20013a0c:	41f7d713          	srai	a4,a5,0x1f
20013a10:	8b0d                	andi	a4,a4,3
20013a12:	97ba                	add	a5,a5,a4
20013a14:	8789                	srai	a5,a5,0x2
20013a16:	873e                	mv	a4,a5
20013a18:	fb842783          	lw	a5,-72(s0)
20013a1c:	00f74c63          	blt	a4,a5,20013a34 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20013a20:	fd842783          	lw	a5,-40(s0)
20013a24:	4398                	lw	a4,0(a5)
20013a26:	000407b7          	lui	a5,0x40
20013a2a:	8f5d                	or	a4,a4,a5
20013a2c:	fd842783          	lw	a5,-40(s0)
20013a30:	c398                	sw	a4,0(a5)
20013a32:	a0b1                	j	20013a7e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20013a34:	fb842583          	lw	a1,-72(s0)
20013a38:	fd042503          	lw	a0,-48(s0)
20013a3c:	3175                	jal	200136e8 <find_closest_config>
20013a3e:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20013a42:	fcc42703          	lw	a4,-52(s0)
20013a46:	57fd                	li	a5,-1
20013a48:	02f70263          	beq	a4,a5,20013a6c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x12a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20013a4c:	fcc42783          	lw	a5,-52(s0)
20013a50:	00579713          	slli	a4,a5,0x5
20013a54:	200107b7          	lui	a5,0x20010
20013a58:	4c878793          	addi	a5,a5,1224 # 200104c8 <pll_configs>
20013a5c:	97ba                	add	a5,a5,a4
20013a5e:	863e                	mv	a2,a5
20013a60:	fd442583          	lw	a1,-44(s0)
20013a64:	fd842503          	lw	a0,-40(s0)
20013a68:	332d                	jal	20013792 <configure_pll>
20013a6a:	a811                	j	20013a7e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20013a6c:	fd842783          	lw	a5,-40(s0)
20013a70:	4398                	lw	a4,0(a5)
20013a72:	000407b7          	lui	a5,0x40
20013a76:	8f5d                	or	a4,a4,a5
20013a78:	fd842783          	lw	a5,-40(s0)
20013a7c:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20013a7e:	fd842783          	lw	a5,-40(s0)
20013a82:	4398                	lw	a4,0(a5)
20013a84:	67c1                	lui	a5,0x10
20013a86:	8f5d                	or	a4,a4,a5
20013a88:	fd842783          	lw	a5,-40(s0)
20013a8c:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20013a8e:	fbc42503          	lw	a0,-68(s0)
20013a92:	aebff0ef          	jal	ra,2001357c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20013a96:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20013a98:	853e                	mv	a0,a5
20013a9a:	40b6                	lw	ra,76(sp)
20013a9c:	4426                	lw	s0,72(sp)
20013a9e:	6161                	addi	sp,sp,80
20013aa0:	8082                	ret

20013aa2 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1370
{
20013aa2:	1141                	addi	sp,sp,-16
20013aa4:	c622                	sw	s0,12(sp)
20013aa6:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1371
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20013aa8:	100087b7          	lui	a5,0x10008
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1372
}
20013aac:	853e                	mv	a0,a5
20013aae:	4432                	lw	s0,12(sp)
20013ab0:	0141                	addi	sp,sp,16
20013ab2:	8082                	ret

20013ab4 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20013ab4:	7179                	addi	sp,sp,-48
20013ab6:	d606                	sw	ra,44(sp)
20013ab8:	d422                	sw	s0,40(sp)
20013aba:	1800                	addi	s0,sp,48
20013abc:	fca42e23          	sw	a0,-36(s0)
20013ac0:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20013ac4:	3ff9                	jal	20013aa2 <__metal_driver_sifive_fe310_g000_prci_base>
20013ac6:	87aa                	mv	a5,a0
20013ac8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20013acc:	fd842703          	lw	a4,-40(s0)
20013ad0:	fec42783          	lw	a5,-20(s0)
20013ad4:	97ba                	add	a5,a5,a4
20013ad6:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20013ad8:	853e                	mv	a0,a5
20013ada:	50b2                	lw	ra,44(sp)
20013adc:	5422                	lw	s0,40(sp)
20013ade:	6145                	addi	sp,sp,48
20013ae0:	8082                	ret

20013ae2 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20013ae2:	7179                	addi	sp,sp,-48
20013ae4:	d606                	sw	ra,44(sp)
20013ae6:	d422                	sw	s0,40(sp)
20013ae8:	1800                	addi	s0,sp,48
20013aea:	fca42e23          	sw	a0,-36(s0)
20013aee:	fcb42c23          	sw	a1,-40(s0)
20013af2:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20013af6:	3775                	jal	20013aa2 <__metal_driver_sifive_fe310_g000_prci_base>
20013af8:	87aa                	mv	a5,a0
20013afa:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20013afe:	fd842703          	lw	a4,-40(s0)
20013b02:	fec42783          	lw	a5,-20(s0)
20013b06:	97ba                	add	a5,a5,a4
20013b08:	873e                	mv	a4,a5
20013b0a:	fd442783          	lw	a5,-44(s0)
20013b0e:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20013b10:	853e                	mv	a0,a5
20013b12:	50b2                	lw	ra,44(sp)
20013b14:	5422                	lw	s0,40(sp)
20013b16:	6145                	addi	sp,sp,48
20013b18:	8082                	ret

20013b1a <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20013b1a:	7179                	addi	sp,sp,-48
20013b1c:	d606                	sw	ra,44(sp)
20013b1e:	d422                	sw	s0,40(sp)
20013b20:	1800                	addi	s0,sp,48
20013b22:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20013b26:	fdc42783          	lw	a5,-36(s0)
20013b2a:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:52
    while (current) {
20013b2e:	a831                	j	20013b4a <_metal_clock_call_all_callbacks+0x30>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20013b30:	fec42783          	lw	a5,-20(s0)
20013b34:	4398                	lw	a4,0(a5)
20013b36:	fec42783          	lw	a5,-20(s0)
20013b3a:	43dc                	lw	a5,4(a5)
20013b3c:	853e                	mv	a0,a5
20013b3e:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:54
        current = current->_next;
20013b40:	fec42783          	lw	a5,-20(s0)
20013b44:	479c                	lw	a5,8(a5)
20013b46:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:52
    while (current) {
20013b4a:	fec42783          	lw	a5,-20(s0)
20013b4e:	f3ed                	bnez	a5,20013b30 <_metal_clock_call_all_callbacks+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:56
    }
}
20013b50:	0001                	nop
20013b52:	0001                	nop
20013b54:	50b2                	lw	ra,44(sp)
20013b56:	5422                	lw	s0,40(sp)
20013b58:	6145                	addi	sp,sp,48
20013b5a:	8082                	ret

20013b5c <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20013b5c:	1101                	addi	sp,sp,-32
20013b5e:	ce06                	sw	ra,28(sp)
20013b60:	cc22                	sw	s0,24(sp)
20013b62:	1000                	addi	s0,sp,32
20013b64:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20013b68:	fec42783          	lw	a5,-20(s0)
20013b6c:	439c                	lw	a5,0(a5)
20013b6e:	439c                	lw	a5,0(a5)
20013b70:	fec42503          	lw	a0,-20(s0)
20013b74:	9782                	jalr	a5
20013b76:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:112
}
20013b78:	853e                	mv	a0,a5
20013b7a:	40f2                	lw	ra,28(sp)
20013b7c:	4462                	lw	s0,24(sp)
20013b7e:	6105                	addi	sp,sp,32
20013b80:	8082                	ret

20013b82 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20013b82:	7179                	addi	sp,sp,-48
20013b84:	d606                	sw	ra,44(sp)
20013b86:	d422                	sw	s0,40(sp)
20013b88:	1800                	addi	s0,sp,48
20013b8a:	fca42e23          	sw	a0,-36(s0)
20013b8e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20013b92:	fdc42783          	lw	a5,-36(s0)
20013b96:	43dc                	lw	a5,4(a5)
20013b98:	853e                	mv	a0,a5
20013b9a:	3741                	jal	20013b1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20013b9c:	fdc42783          	lw	a5,-36(s0)
20013ba0:	439c                	lw	a5,0(a5)
20013ba2:	43dc                	lw	a5,4(a5)
20013ba4:	fd842583          	lw	a1,-40(s0)
20013ba8:	fdc42503          	lw	a0,-36(s0)
20013bac:	9782                	jalr	a5
20013bae:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20013bb2:	fdc42783          	lw	a5,-36(s0)
20013bb6:	479c                	lw	a5,8(a5)
20013bb8:	853e                	mv	a0,a5
20013bba:	3785                	jal	20013b1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:135

    return out;
20013bbc:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:136
}
20013bc0:	853e                	mv	a0,a5
20013bc2:	50b2                	lw	ra,44(sp)
20013bc4:	5422                	lw	s0,40(sp)
20013bc6:	6145                	addi	sp,sp,48
20013bc8:	8082                	ret

20013bca <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20013bca:	1101                	addi	sp,sp,-32
20013bcc:	ce06                	sw	ra,28(sp)
20013bce:	cc22                	sw	s0,24(sp)
20013bd0:	1000                	addi	s0,sp,32
20013bd2:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20013bd6:	fec42783          	lw	a5,-20(s0)
20013bda:	439c                	lw	a5,0(a5)
20013bdc:	57dc                	lw	a5,44(a5)
20013bde:	fec42503          	lw	a0,-20(s0)
20013be2:	9782                	jalr	a5
20013be4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:226
}
20013be6:	853e                	mv	a0,a5
20013be8:	40f2                	lw	ra,28(sp)
20013bea:	4462                	lw	s0,24(sp)
20013bec:	6105                	addi	sp,sp,32
20013bee:	8082                	ret

20013bf0 <metal_cpu_get>:
metal_cpu_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20013bf0:	1101                	addi	sp,sp,-32
20013bf2:	ce22                	sw	s0,28(sp)
20013bf4:	1000                	addi	s0,sp,32
20013bf6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20013bfa:	fec42783          	lw	a5,-20(s0)
20013bfe:	eb99                	bnez	a5,20013c14 <metal_cpu_get+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20013c00:	800007b7          	lui	a5,0x80000
20013c04:	fec42703          	lw	a4,-20(s0)
20013c08:	070a                	slli	a4,a4,0x2
20013c0a:	48878793          	addi	a5,a5,1160 # 80000488 <__global_pointer$+0xfffff800>
20013c0e:	97ba                	add	a5,a5,a4
20013c10:	439c                	lw	a5,0(a5)
20013c12:	a011                	j	20013c16 <metal_cpu_get+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:11
    }
    return NULL;
20013c14:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:12
}
20013c16:	853e                	mv	a0,a5
20013c18:	4472                	lw	s0,28(sp)
20013c1a:	6105                	addi	sp,sp,32
20013c1c:	8082                	ret

20013c1e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20013c1e:	1101                	addi	sp,sp,-32
20013c20:	ce22                	sw	s0,28(sp)
20013c22:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20013c24:	f14027f3          	csrr	a5,mhartid
20013c28:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:18
    return mhartid;
20013c2c:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:20
#endif
}
20013c30:	853e                	mv	a0,a5
20013c32:	4472                	lw	s0,28(sp)
20013c34:	6105                	addi	sp,sp,32
20013c36:	8082                	ret

20013c38 <metal_shutdown>:
metal_shutdown():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20013c38:	1101                	addi	sp,sp,-32
20013c3a:	ce22                	sw	s0,28(sp)
20013c3c:	1000                	addi	s0,sp,32
20013c3e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20013c42:	0001                	nop
20013c44:	bffd                	j	20013c42 <metal_shutdown+0xa>
	...

20013c80 <__metal_vector_table>:
IRQ_0():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:76
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20013c80:	dadfd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c84 <IRQ_1>:
IRQ_1():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:78
IRQ_1:
        j metal_interrupt_vector_handler
20013c84:	da9fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c88 <IRQ_2>:
IRQ_2():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:80
IRQ_2:
        j metal_interrupt_vector_handler
20013c88:	da5fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c8c <IRQ_3>:
IRQ_3():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:82
IRQ_3:
        j metal_software_interrupt_vector_handler
20013c8c:	dcffd06f          	j	20011a5a <metal_software_interrupt_vector_handler>

20013c90 <IRQ_4>:
IRQ_4():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:84
IRQ_4:
        j metal_interrupt_vector_handler
20013c90:	d9dfd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c94 <IRQ_5>:
IRQ_5():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:86
IRQ_5:
        j metal_interrupt_vector_handler
20013c94:	d99fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c98 <IRQ_6>:
IRQ_6():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:88
IRQ_6:
        j metal_interrupt_vector_handler
20013c98:	d95fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013c9c <IRQ_7>:
IRQ_7():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:90
IRQ_7:
        j metal_timer_interrupt_vector_handler
20013c9c:	eb9fd06f          	j	20011b54 <metal_timer_interrupt_vector_handler>

20013ca0 <IRQ_8>:
IRQ_8():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:92
IRQ_8:
        j metal_interrupt_vector_handler
20013ca0:	d8dfd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013ca4 <IRQ_9>:
IRQ_9():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:94
IRQ_9:
        j metal_interrupt_vector_handler
20013ca4:	d89fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013ca8 <IRQ_10>:
IRQ_10():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:96
IRQ_10:
        j metal_interrupt_vector_handler
20013ca8:	d85fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cac <IRQ_11>:
IRQ_11():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:98
IRQ_11:
        j metal_interrupt_vector_handler
20013cac:	d81fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cb0 <IRQ_12>:
IRQ_12():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:100
IRQ_12:
        j metal_interrupt_vector_handler
20013cb0:	d7dfd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cb4 <IRQ_13>:
IRQ_13():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:102
IRQ_13:
        j metal_interrupt_vector_handler
20013cb4:	d79fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cb8 <IRQ_14>:
IRQ_14():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:104
IRQ_14:
        j metal_interrupt_vector_handler
20013cb8:	d75fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cbc <IRQ_15>:
IRQ_15():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:106
IRQ_15:
        j metal_interrupt_vector_handler
20013cbc:	d71fd06f          	j	20011a2c <metal_interrupt_vector_handler>

20013cc0 <IRQ_LC0>:
IRQ_LC0():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:108
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20013cc0:	9b6fe06f          	j	20011e76 <metal_lc0_interrupt_vector_handler>

20013cc4 <IRQ_LC1>:
IRQ_LC1():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:110
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20013cc4:	a46fe06f          	j	20011f0a <metal_lc1_interrupt_vector_handler>

20013cc8 <IRQ_LC2>:
IRQ_LC2():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:112
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20013cc8:	ad8fe06f          	j	20011fa0 <metal_lc2_interrupt_vector_handler>

20013ccc <IRQ_LC3>:
IRQ_LC3():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:114
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20013ccc:	b6afe06f          	j	20012036 <metal_lc3_interrupt_vector_handler>

20013cd0 <IRQ_LC4>:
IRQ_LC4():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:116
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20013cd0:	bfcfe06f          	j	200120cc <metal_lc4_interrupt_vector_handler>

20013cd4 <IRQ_LC5>:
IRQ_LC5():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:118
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20013cd4:	c8efe06f          	j	20012162 <metal_lc5_interrupt_vector_handler>

20013cd8 <IRQ_LC6>:
IRQ_LC6():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:120
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20013cd8:	d20fe06f          	j	200121f8 <metal_lc6_interrupt_vector_handler>

20013cdc <IRQ_LC7>:
IRQ_LC7():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:122
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20013cdc:	db2fe06f          	j	2001228e <metal_lc7_interrupt_vector_handler>

20013ce0 <IRQ_LC8>:
IRQ_LC8():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:124
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20013ce0:	e44fe06f          	j	20012324 <metal_lc8_interrupt_vector_handler>

20013ce4 <IRQ_LC9>:
IRQ_LC9():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:126
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20013ce4:	ed6fe06f          	j	200123ba <metal_lc9_interrupt_vector_handler>

20013ce8 <IRQ_LC10>:
IRQ_LC10():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:128
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20013ce8:	f68fe06f          	j	20012450 <metal_lc10_interrupt_vector_handler>

20013cec <IRQ_LC11>:
IRQ_LC11():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:130
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20013cec:	ffafe06f          	j	200124e6 <metal_lc11_interrupt_vector_handler>

20013cf0 <IRQ_LC12>:
IRQ_LC12():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:132
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20013cf0:	88dfe06f          	j	2001257c <metal_lc12_interrupt_vector_handler>

20013cf4 <IRQ_LC13>:
IRQ_LC13():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:134
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20013cf4:	91ffe06f          	j	20012612 <metal_lc13_interrupt_vector_handler>

20013cf8 <IRQ_LC14>:
IRQ_LC14():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:136
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20013cf8:	9b1fe06f          	j	200126a8 <metal_lc14_interrupt_vector_handler>

20013cfc <IRQ_LC15>:
IRQ_LC15():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:138
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20013cfc:	a43fe06f          	j	2001273e <metal_lc15_interrupt_vector_handler>

20013d00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
{
20013d00:	1101                	addi	sp,sp,-32
20013d02:	ce22                	sw	s0,28(sp)
20013d04:	1000                	addi	s0,sp,32
20013d06:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20013d0a:	fec42703          	lw	a4,-20(s0)
20013d0e:	800007b7          	lui	a5,0x80000
20013d12:	06078793          	addi	a5,a5,96 # 80000060 <__global_pointer$+0xfffff3d8>
20013d16:	00f71763          	bne	a4,a5,20013d24 <__metal_driver_fixed_clock_rate+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_0_CLOCK_FREQUENCY;
20013d1a:	00f427b7          	lui	a5,0xf42
20013d1e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20013d22:	a099                	j	20013d68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20013d24:	fec42703          	lw	a4,-20(s0)
20013d28:	800007b7          	lui	a5,0x80000
20013d2c:	06c78793          	addi	a5,a5,108 # 8000006c <__global_pointer$+0xfffff3e4>
20013d30:	00f71763          	bne	a4,a5,20013d3e <__metal_driver_fixed_clock_rate+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_2_CLOCK_FREQUENCY;
20013d34:	044aa7b7          	lui	a5,0x44aa
20013d38:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20013d3c:	a035                	j	20013d68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20013d3e:	fec42703          	lw	a4,-20(s0)
20013d42:	800007b7          	lui	a5,0x80000
20013d46:	07878793          	addi	a5,a5,120 # 80000078 <__global_pointer$+0xfffff3f0>
20013d4a:	00f71463          	bne	a4,a5,20013d52 <__metal_driver_fixed_clock_rate+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_5_CLOCK_FREQUENCY;
20013d4e:	67a1                	lui	a5,0x8
20013d50:	a821                	j	20013d68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20013d52:	fec42703          	lw	a4,-20(s0)
20013d56:	800007b7          	lui	a5,0x80000
20013d5a:	08478793          	addi	a5,a5,132 # 80000084 <__global_pointer$+0xfffff3fc>
20013d5e:	00f71463          	bne	a4,a5,20013d66 <__metal_driver_fixed_clock_rate+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_6_CLOCK_FREQUENCY;
20013d62:	67a1                	lui	a5,0x8
20013d64:	a011                	j	20013d68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:222
		return 0;
20013d66:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:224
}
20013d68:	853e                	mv	a0,a5
20013d6a:	4472                	lw	s0,28(sp)
20013d6c:	6105                	addi	sp,sp,32
20013d6e:	8082                	ret

20013d70 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20013d70:	1101                	addi	sp,sp,-32
20013d72:	ce06                	sw	ra,28(sp)
20013d74:	cc22                	sw	s0,24(sp)
20013d76:	1000                	addi	s0,sp,32
20013d78:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20013d7c:	fec42503          	lw	a0,-20(s0)
20013d80:	3741                	jal	20013d00 <__metal_driver_fixed_clock_rate>
20013d82:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:14
}
20013d84:	853e                	mv	a0,a5
20013d86:	40f2                	lw	ra,28(sp)
20013d88:	4462                	lw	s0,24(sp)
20013d8a:	6105                	addi	sp,sp,32
20013d8c:	8082                	ret

20013d8e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20013d8e:	1101                	addi	sp,sp,-32
20013d90:	ce06                	sw	ra,28(sp)
20013d92:	cc22                	sw	s0,24(sp)
20013d94:	1000                	addi	s0,sp,32
20013d96:	fea42623          	sw	a0,-20(s0)
20013d9a:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20013d9e:	fec42503          	lw	a0,-20(s0)
20013da2:	37f9                	jal	20013d70 <__metal_driver_fixed_clock_get_rate_hz>
20013da4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:19
}
20013da6:	853e                	mv	a0,a5
20013da8:	40f2                	lw	ra,28(sp)
20013daa:	4462                	lw	s0,24(sp)
20013dac:	6105                	addi	sp,sp,32
20013dae:	8082                	ret

20013db0 <_exit>:
_exit():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20013db0:	1101                	addi	sp,sp,-32
20013db2:	ce06                	sw	ra,28(sp)
20013db4:	cc22                	sw	s0,24(sp)
20013db6:	1000                	addi	s0,sp,32
20013db8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20013dbc:	fec42503          	lw	a0,-20(s0)
20013dc0:	3da5                	jal	20013c38 <metal_shutdown>
