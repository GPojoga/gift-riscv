
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/debug/test1.elf:     file format elf32-littleriscv
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/debug/test1.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00000fc4 memsz 0x00000fc4 flags rwx
    LOAD off    0x00008000 vaddr 0x80000000 paddr 0x20016fc8 align 2**12
         filesz 0x00000ac4 memsz 0x00000ac4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000ac8 vaddr 0x80000ac8 paddr 0x80000ac8 align 2**12
         filesz 0x00000000 memsz 0x00000ca8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002000 vaddr 0x20011000 paddr 0x20011000 align 2**12
         filesz 0x00005fc4 memsz 0x00005fc4 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002c4  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102c8  200102c8  000012c8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102d4  200102d4  000012d4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000c74  20010350  20010350  00001350  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00005fc4  20011000  20011000  00002000  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ac4  80000000  20016fc8  00008000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000ac8  80000ac8  00008ac8  2**3  ALLOC
  7 .stack            00000400  80000b70  80000b70  00008ac8  2**4  ALLOC
  8 .heap             00000800  80000f70  80000f70  00008ac8  2**3  ALLOC
  9 .debug_info       0001f7a7  00000000  00000000  00008ac4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     0000286a  00000000  00000000  0002826b  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000b50  00000000  00000000  0002aad8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000970  00000000  00000000  0002b628  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000ada6  00000000  00000000  0002bf98  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004a2a  00000000  00000000  00036d3e  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003b768  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003b798  2**0  CONTENTS, READONLY
 17 .debug_frame      00002d88  00000000  00000000  0003b7c8  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102c8 l    d  .init_array	00000000 .init_array
200102d4 l    d  .ctors	00000000 .ctors
20010350 l    d  .rodata	00000000 .rodata
20011000 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ac8 l    d  .bss	00000000 .bss
80000b70 l    d  .stack	00000000 .stack
80000f70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100c0 l     F .init	00000000 __metal_memory_scrub
2001012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010240 l       .init	00000000 _skip_init
20010450 l       .rodata	00000000 argv
20010454 l       .rodata	00000000 envp
20010458 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2001531e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20015338 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20015352 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20015368 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2001537c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2001538e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2001539e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
200153b4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
200153c6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20010654 l     O .rodata	00000880 pll_configs
200153dc l     F .text	0000004e get_pll_config_freq
2001563e l     F .text	000000ac find_closest_config
200156ea l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
2001105a l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20011406 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
2001274a l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20012774 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
2001279c l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
200127d8 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20012938 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012e76 l     F .text	00000024 __metal_driver_cpu_hartid
20012e9a l     F .text	0000002a __metal_driver_cpu_timebase
20012ec4 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20012eee l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
2001486e l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20014898 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
200148c2 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200148ea l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20014912 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20014934 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20015a78 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20015a9e l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20015ac8 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
200164d6 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016516 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
2001655e l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
2001659a l     F .text	00000048 __metal_driver_sifive_uart0_clock
200165e2 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20016622 l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
2001665e l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20016a3e l     F .text	000000da pre_rate_change_callback_func
20016b18 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2001512e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20015148 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2001515e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20015172 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
2001522e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20015248 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
2001525e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20015272 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20015a00 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20016f00 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000aa4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000ae0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000ad8 l     O .bss	00000004 init_done.1
80000adc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20016e80 l       .text	00000000 IRQ_0
20016e84 l       .text	00000000 IRQ_1
20016e88 l       .text	00000000 IRQ_2
20016e8c l       .text	00000000 IRQ_3
20016e90 l       .text	00000000 IRQ_4
20016e94 l       .text	00000000 IRQ_5
20016e98 l       .text	00000000 IRQ_6
20016e9c l       .text	00000000 IRQ_7
20016ea0 l       .text	00000000 IRQ_8
20016ea4 l       .text	00000000 IRQ_9
20016ea8 l       .text	00000000 IRQ_10
20016eac l       .text	00000000 IRQ_11
20016eb0 l       .text	00000000 IRQ_12
20016eb4 l       .text	00000000 IRQ_13
20016eb8 l       .text	00000000 IRQ_14
20016ebc l       .text	00000000 IRQ_15
20016ec0 l       .text	00000000 IRQ_LC0
20016ec4 l       .text	00000000 IRQ_LC1
20016ec8 l       .text	00000000 IRQ_LC2
20016ecc l       .text	00000000 IRQ_LC3
20016ed0 l       .text	00000000 IRQ_LC4
20016ed4 l       .text	00000000 IRQ_LC5
20016ed8 l       .text	00000000 IRQ_LC6
20016edc l       .text	00000000 IRQ_LC7
20016ee0 l       .text	00000000 IRQ_LC8
20016ee4 l       .text	00000000 IRQ_LC9
20016ee8 l       .text	00000000 IRQ_LC10
20016eec l       .text	00000000 IRQ_LC11
20016ef0 l       .text	00000000 IRQ_LC12
20016ef4 l       .text	00000000 IRQ_LC13
20016ef8 l       .text	00000000 IRQ_LC14
20016efc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102d4 l       .init_array	00000000 metal_constructors_end
200102d8 l       .init_array	00000000 __fini_array_end
200102d8 l       .init_array	00000000 metal_destructors_end
200102d8 l       .init_array	00000000 metal_destructors_start
200102d8 l       .init_array	00000000 __fini_array_start
200102c8 l       .init_array	00000000 __init_array_end
200102c8 l       .init_array	00000000 __preinit_array_end
200102c8 l       .init_array	00000000 __init_array_start
200102c8 l       .init_array	00000000 metal_constructors_start
200102c8 l       .init_array	00000000 __preinit_array_start
20010f5c g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20012198 g     F .text	0000002e _isatty_r
20013750  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20011bd0 g     F .text	00000032 _lseek_r
20016cb0 g     F .text	00000026 metal_clock_get_rate_hz
2001699e g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20012b14 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
200167f2 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
200136ba  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20013f62 g     F .text	00000058 __metal_valid_interrupt_id
2001101e g     F .text	0000003c printf
200102d0 g     O .init_array	00000004 _use_hfxosc_ptr
200143de g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
800012a0 g       .data	00000000 __global_pointer$
200102d4 g     F .ctors	00000024 metal_tty_init
20016c5c g     F .text	00000054 _metal_clock_append_to_callbacks
2001498e g     F .text	00000046 __metal_plic0_complete_interrupt
200141a6 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
200102cc g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
200117b6 g     F .text	00000036 __sseek
20011110 g     F .text	0000006a __sinit
200117f2 g     F .text	000000c2 __swbuf_r
80000ac8 g       .data	00000000 __tls_base
200110cc g     F .text	00000044 __sfmoreglue
20011d16 g     F .text	00000002 __malloc_unlock
20016dac g     F .text	0000002e metal_cpu_get
80000a38 g     O .data	00000020 __metal_dt_serial_10013000
200160b0 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20010464 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b6c g       .bss	00000000 metal_segment_bss_target_end
20012808 g     F .text	0000009a __metal_clint0_mtime_get
200147e2 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
200168b6 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20015e66 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20012378 g     F .text	0000000a __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
200167c2 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20016750 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20010142 g     F .init	0000000e __metal_synchronize_harts
80000ac8 g       .data	00000000 metal_segment_bss_target_start
200128a2 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20012168 g     F .text	00000030 _fstat_r
20016300 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000ad0 g     O .bss	00000004 errno
200154ce g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20016d22 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20013a3e  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100cc  w    F .init	00000000 __metal_before_start
20012674  w    F .text	00000014 metal_init_run
80000a58 g     O .data	00000020 __metal_dt_serial_10023000
200105f0 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
200105ac g     O .rodata	00000044 __metal_driver_vtable_cpu
2001271c g     F .text	0000002e metal_uart_set_baud_rate
20016b48 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
2001446a g     F .text	00000070 __metal_driver_cpu_mcycle_get
20010ed4 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000f70 g       .heap	00000000 metal_segment_heap_target_start
200110c2 g     F .text	0000000a _cleanup_r
80000ab4 g     O .data	00000008 __metal_dt_cpu_0
200139a8  w    F .text	00000096 metal_lc8_interrupt_vector_handler
2001589a g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20015092 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20013c96  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20013080 g     F .text	00000018 __metal_default_exception_handler
200121e8 g     F .text	00000026 _fstat
20012e42 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200143fa g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20012f12 g     F .text	00000030 __metal_driver_cpu_get
20010548 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20012f74 g     F .text	00000018 __metal_interrupt_global_disable
20015106 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20013912  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20013ad4  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20011706 g     F .text	00000030 _sbrk_r
20014eb2 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20014076 g     F .text	0000004e __metal_exception_register
20012584 g     F .text	00000078 metal_init
20012136 g     F .text	00000032 _read_r
200145fc g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20015f48 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20013170 g     F .text	00000068 __metal_default_sw_handler
20016d54 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
2001669e g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
2001220e g     F .text	00000020 _isatty
2001600e g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
200166de g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20010fbc g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20010fa0 g     O .rodata	00000004 _global_impure_ptr
200131d8  w    F .text	00000092 metal_timer_interrupt_vector_handler
200123e2 g     F .text	0000005e __libc_init_array
20015f88 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20013b6a  w    F .text	00000096 metal_lc11_interrupt_vector_handler
200152fc g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20014386 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20012282 g     F .text	0000007e _sbrk
20015f02 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20016c1a g     F .text	00000042 _metal_clock_call_all_callbacks
200102a2 g     F .init	00000002 _init
20012fd6 g     F .text	0000001a __metal_interrupt_timer_disable
200160fa g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
200146ba g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010f20 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20016718 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
2001604e g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
200123ac g     F .text	00000036 __libc_fini_array
80000a90 g     O .data	0000000c __metal_dt_clock_4
20016488 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
200125fc g     F .text	00000078 metal_fini
20014644 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2001484e g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20013028 g     F .text	0000002c __metal_interrupt_local_enable
20012e0e g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2001269c g     F .text	00000026 metal_tty_putc
20014b8c g     F .text	00000018 __metal_plic0_default_handler
20012300  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20014f02 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
2001326a g     F .text	00000016 __metal_default_beu_handler
2001035c g     O .rodata	00000020 __sf_fake_stderr
2001300c g     F .text	0000001c __metal_interrupt_external_disable
200166be g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
2001444e g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
200140c4 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
2001142e g     F .text	00000042 __sfputs_r
2001479c g     F .text	00000046 __metal_driver_cpu_exception_register
20012f8c g     F .text	00000018 __metal_interrupt_software_enable
2001358e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20011cfa g     F .text	0000001a memchr
20011d18 g     F .text	000000a2 _free_r
80000ad4 g     O .bss	00000004 _global_atexit
20014a54 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20013e58 g     F .text	00000058 __metal_controller_interrupt_vector_mode
200124bc g     F .text	000000c8 __call_exitprocs
80000f70 g       .stack	00000000 _sp
200102c8 g     O .init_array	00000004 _metal_tty_init_ptr
20010150 g     F .init	00000000 _start
20015188 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
2001222e g     F .text	0000002a _lseek
2001477c g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20014810 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20012ff0 g     F .text	0000001c __metal_interrupt_external_enable
20012440 g     F .text	0000007c __register_exitproc
200168e6 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20014c48 g     F .text	00000158 __metal_driver_riscv_plic0_init
20014e62 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20015ed6 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001387c  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20012f42 g     F .text	0000001a __metal_myhart_id
200164a8 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
200130de  w    F .text	00000092 metal_software_interrupt_vector_handler
200143b2 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
200119f4 g     F .text	00000030 _close_r
2001697e g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
200129f6 g     F .text	000000da __metal_driver_riscv_clint0_register
80000aac g     O .data	00000008 __metal_dt_clint_2000000
200118e8 g     F .text	0000010c __swsetup_r
2001117a g     F .text	0000009c __sfp
20016cd6 g     F .text	0000004c metal_clock_set_rate_hz
20011736 g     F .text	00000032 __sread
20015e26 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102a4  w    F .init	00000000 secondary_main
200130b0  w    F .text	0000002e metal_interrupt_vector_handler
20011d14 g     F .text	00000002 __malloc_lock
2001678a g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20011b6a g     F .text	00000066 _fflush_r
20014a1a g     F .text	0000003a __metal_plic0_get_threshold
20015a12 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
2001037c g     O .rodata	00000020 __sf_fake_stdin
20013fba g     F .text	000000bc __metal_local_interrupt_enable
20012cd0 g     F .text	0000013e __metal_driver_riscv_clint0_command_request
20011280 g     F .text	000000a8 memset
200137e6  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011000 g     F .text	0000001e main
80000ac8 g       .data	00000000 metal_segment_data_target_end
2001686c g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20010fa4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20014658 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
2001471c g     F .text	00000060 __metal_driver_cpu_get_msip
20016df4 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
2001482e g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20014952 g     F .text	0000003c __metal_plic0_claim_interrupt
2001683c g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
200117ec g     F .text	00000006 __sclose
20013c00  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001008a g     F .init	00000000 metal_mem_scrub
20011328 g     F .text	000000de _malloc_r
20012af8 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ac0 g     O .data	00000004 __metal_dt_prci_10008000
200144da g     F .text	00000046 __metal_driver_cpu_timebase_get
20014ff6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
20016dda g     F .text	0000001a metal_cpu_get_current_hartid
20015288 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20016e80 g       .text	00000000 __metal_vector_table
20010fc8 g       *ABS*	00000000 metal_segment_itim_source_start
80000aa8  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102a2 g     F .init	00000002 _fini
2001101e g     F .text	0000003c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20014ab6 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010324 g     F .ctors	0000002a use_hfxosc
20012f5c g     F .text	00000018 __metal_interrupt_global_enable
2001236e g     F .text	0000000a atexit
200118b4 g     F .text	00000034 _write_r
20012fbc g     F .text	0000001a __metal_interrupt_timer_enable
20016928 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20012c1e g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20011dba g     F .text	0000010c _printf_common
80000aa0 g     O .data	00000004 _impure_ptr
20014586 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20011a24 g     F .text	00000146 __sflush_r
20014f32 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2001542a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20015a40 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20016f70 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20012b6c g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20016fc8 g       *ABS*	00000000 metal_segment_data_source_start
20010134 g       .init	00000000 early_trap_vector
80001770 g       .heap	00000000 metal_segment_heap_target_end
20013eb0 g     F .text	000000b2 __metal_controller_interrupt_vector
80000a84 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011c02 g     F .text	0000005a __swhatbuf_r
20015fc8 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20013280 g     F .text	00000066 __metal_default_timer_handler
20012300 g     F .text	0000006e _write
20014ba4 g     F .text	000000a4 __metal_plic0_handler
20013624  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013dc2  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20016d86 g     F .text	00000026 metal_cpu_interrupt_controller
20011768 g     F .text	0000004e __swrite
20012382 g     F .text	0000002a exit
20011470 g     F .text	00000296 _vfiprintf_r
20011216 g     F .text	0000006a _fwalk_reent
20016f8e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20010fc8 g       *ABS*	00000000 metal_segment_lim_source_start
2001039c g     O .rodata	00000020 __sf_fake_stdout
80000abc g     O .data	00000004 __metal_dt_gpio_10012000
20013098 g     F .text	00000018 __metal_default_interrupt_handler
200126ee g     F .text	0000002e metal_uart_putc
20012258 g     F .text	0000002a _read
20012688  w    F .text	00000014 metal_fini_run
20015eac g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013300 g     F .text	0000017e __metal_exception_handler
200134f8  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20016fb0 g     F .text	00000014 _exit
20014520 g     F .text	00000066 __metal_driver_cpu_mtime_get
20011c5c g     F .text	0000009e __smakebuf_r
20012ad0 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20011ec6 g     F .text	00000270 _printf_i
80000acc g     O .bss	00000004 __malloc_sbrk_start
20013d2c  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20010fac g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
2001296e g     F .text	00000088 __metal_driver_riscv_clint0_init
80000ac8 g     O .bss	00000004 __malloc_free_list
200102f8 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20011470 g     F .text	00000296 _vfprintf_r
20014616 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20014aea g     F .text	000000a2 __metal_plic0_enable
20010088  w      .init	00000000 __register_frame_info
2001520c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
2001462a g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20013054 g     F .text	0000002c __metal_interrupt_local_disable
20012fa4 g     F .text	00000018 __metal_interrupt_software_disable
200126c2 g     F .text	0000002c metal_uart_init
80000a78 g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
200149d4 g     F .text	00000046 __metal_plic0_set_threshold
20014f5a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
200121c6 g     F .text	00000022 _close
20010fb4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20014da0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:31
    auipc a0, %pcrel_hi(__global_pointer__)
    addi a0, a0, %pcrel_lo(1b)
    ld   gp, 0(a0)
    add  gp, gp, a0
#else
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2a018193          	addi	gp,gp,672 # 800012a0 <__global_pointer$>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:36
#endif
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:37
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:39
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:40
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:42
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:47
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11428293          	addi	t0,t0,276 # 20010134 <early_trap_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:48
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:56
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	00000113          	li	sp,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:63
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010030:	00011463          	bnez	sp,20010038 <_enter+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:67
#ifdef __riscv_cmodel_compact
    lla.gprel sp, _sp
#else
    la sp, _sp
20010034:	cd018113          	addi	sp,gp,-816 # 80000f70 <_sp>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:71
#endif
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20010038:	f1402573          	csrr	a0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:72
    li t0, 0
2001003c:	4281                	li	t0,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:73
    la t1, __stack_size
2001003e:	40000313          	li	t1,1024
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:75
1:
    andi sp, sp, -16
20010042:	ff017113          	andi	sp,sp,-16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:76
    beq t0, a0, 1f
20010046:	00a28563          	beq	t0,a0,20010050 <_enter+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:77
    add sp, sp, t1
2001004a:	911a                	add	sp,sp,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:78
    addi t0, t0, 1
2001004c:	0285                	addi	t0,t0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:79
    j 1b
2001004e:	bfd5                	j	20010042 <_enter+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:88
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010050:	00000097          	auipc	ra,0x0
20010054:	07c08093          	addi	ra,ra,124 # 200100cc <__metal_before_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:89
    beqz ra, 1f
20010058:	00008363          	beqz	ra,2001005e <_enter+0x5e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:90
    jalr ra
2001005c:	9082                	jalr	ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:96
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2001005e:	f1402573          	csrr	a0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:97
    li a1, 0
20010062:	4581                	li	a1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:98
    li a2, 0
20010064:	4601                	li	a2,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:99
    call _start
20010066:	20ed                	jal	20010150 <_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:104

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010068:	00000093          	li	ra,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:105
    beqz ra, 1f
2001006c:	00008363          	beqz	ra,20010072 <_enter+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:106
    jalr ra
20010070:	9082                	jalr	ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:111
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20010072:	00000297          	auipc	t0,0x0
20010076:	00c28293          	addi	t0,t0,12 # 2001007e <_enter+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:112
     csrw mtvec, t0
2001007a:	30529073          	csrw	mtvec,t0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:114
1:
     lw t1, 0(x0)
2001007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:115
     j 1b
20010082:	bff5                	j	2001007e <_enter+0x7e>
20010084:	0000                	unimp
	...

20010088 <__register_frame_info>:
__register_frame_info():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/entry.S:128
 * going to leave this in for now.  At least it's fairly cheap :) */
.weak __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010088:	8082                	ret

2001008a <metal_mem_scrub>:
metal_mem_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2001008a:	46a1                	li	a3,8
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2001008c:	3006b373          	csrrc	t1,mstatus,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010090:	4291                	li	t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20010092:	0055c563          	blt	a1,t0,2001009c <metal_mem_scrub+0x12>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20010096:	00357613          	andi	a2,a0,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2001009a:	ca11                	beqz	a2,200100ae <metal_mem_scrub+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2001009c:	00050023          	sb	zero,0(a0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100a0:	0505                	addi	a0,a0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100a2:	15fd                	addi	a1,a1,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100a4:	feb047e3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100a8:	30031073          	csrw	mstatus,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:39
    ret
200100ac:	8082                	ret
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100ae:	00052023          	sw	zero,0(a0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100b2:	0511                	addi	a0,a0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100b4:	15f1                	addi	a1,a1,-4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100b6:	fcb04ee3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100ba:	30031073          	csrw	mstatus,t1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:46
    ret
200100be:	8082                	ret

200100c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100c0:	00032023          	sw	zero,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100c4:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100c6:	fe734de3          	blt	t1,t2,200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100ca:	8082                	ret

200100cc <__metal_before_start>:
__metal_before_start():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:93
.weak __metal_eccscrub_bit
.weak __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100cc:	8406                	mv	s0,ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:95

    la      t0, __metal_eccscrub_bit
200100ce:	dfff0297          	auipc	t0,0xdfff0
200100d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:96
    beqz    t0, skip_scrub
200100d6:	04028c63          	beqz	t0,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:98

    la      t0, __metal_boot_hart
200100da:	dfff0297          	auipc	t0,0xdfff0
200100de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:99
    csrr    a5, mhartid
200100e2:	f14027f3          	csrr	a5,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:102

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100e6:	46a1                	li	a3,8
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:103
    csrc    mstatus, a3
200100e8:	3006b073          	csrc	mstatus,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:106

    /* Zero out per hart stack */
    mv      t1, sp
200100ec:	830a                	mv	t1,sp
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:107
    la      t2, __stack_size
200100ee:	dfff0397          	auipc	t2,0xdfff0
200100f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:108
    add     t2, t2, sp
200100f6:	938a                	add	t2,t2,sp
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:109
    beq     t1, t2, 1f
200100f8:	00730363          	beq	t1,t2,200100fe <__metal_before_start+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:110
    jal     __metal_memory_scrub
200100fc:	37d1                	jal	200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:112
1:
    bne     a5, t0, skip_scrub
200100fe:	02579863          	bne	a5,t0,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:119
    /* Zero out data segment */
#ifdef __riscv_cmodel_compact
    lla.gprel t1, metal_segment_data_target_start
    lla.gprel t2, metal_segment_data_target_end
#else
    la      t1, metal_segment_data_target_start
20010102:	5fff0317          	auipc	t1,0x5fff0
20010106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:120
    la      t2, metal_segment_data_target_end
2001010a:	5fff1397          	auipc	t2,0x5fff1
2001010e:	9be38393          	addi	t2,t2,-1602 # 80000ac8 <__malloc_free_list>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:122
#endif
    beq     t1, t2, 1f
20010112:	00730363          	beq	t1,t2,20010118 <__metal_before_start+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:123
    jal     __metal_memory_scrub
20010116:	376d                	jal	200100c0 <__metal_memory_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:130
    /* Zero out itim memory */
#ifdef __riscv_cmodel_compact
    la.got.gprel t1, metal_segment_itim_target_start
    la.got.gprel t2, metal_segment_itim_target_end
#else
    la      t1, metal_segment_itim_target_start
20010118:	e7ff0317          	auipc	t1,0xe7ff0
2001011c:	ee830313          	addi	t1,t1,-280 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:131
    la      t2, metal_segment_itim_target_end
20010120:	e7ff0397          	auipc	t2,0xe7ff0
20010124:	ee038393          	addi	t2,t2,-288 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:133
#endif
    beq     t1, t2, skip_scrub
20010128:	00730363          	beq	t1,t2,2001012e <skip_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:134
    jal     __metal_memory_scrub
2001012c:	3f51                	jal	200100c0 <__metal_memory_scrub>

2001012e <skip_scrub>:
skip_scrub():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:138

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2001012e:	80a2                	mv	ra,s0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/scrub.S:139
    ret
20010130:	8082                	ret
	...

20010134 <early_trap_vector>:
early_trap_vector():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010134:	342022f3          	csrr	t0,mcause
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010138:	34102373          	csrr	t1,mepc
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:66
    csrr t2, mtval
2001013c:	343023f3          	csrr	t2,mtval
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/trap.S:67
    j early_trap_vector
20010140:	bfd5                	j	20010134 <early_trap_vector>

20010142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010142:	1141                	addi	sp,sp,-16
20010144:	c622                	sw	s0,12(sp)
20010146:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010148:	0001                	nop
2001014a:	4432                	lw	s0,12(sp)
2001014c:	0141                	addi	sp,sp,16
2001014e:	8082                	ret

20010150 <_start>:
_start():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010150:	8406                	mv	s0,ra
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:51
  auipc a0, %pcrel_hi(__global_pointer__)
  addi a0, a0, %pcrel_lo(1b)
  ld   gp, 0(a0)
  add  gp, gp, a0
#else
  la gp, __global_pointer$
20010152:	5fff1197          	auipc	gp,0x5fff1
20010156:	14e18193          	addi	gp,gp,334 # 800012a0 <__global_pointer$>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:58
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001015a:	00000293          	li	t0,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:59
  bne a0, t0, _skip_init
2001015e:	0e551163          	bne	a0,t0,20010240 <_skip_init>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:73
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_data_source_start
  lla.gprel t1, metal_segment_data_target_start
  lla.gprel t2, metal_segment_data_target_end
#else
  la t0, metal_segment_data_source_start
20010162:	00007297          	auipc	t0,0x7
20010166:	e6628293          	addi	t0,t0,-410 # 20016fc8 <metal_segment_data_source_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:74
  la t1, metal_segment_data_target_start
2001016a:	5fff0317          	auipc	t1,0x5fff0
2001016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:75
  la t2, metal_segment_data_target_end
20010172:	5fff1397          	auipc	t2,0x5fff1
20010176:	95638393          	addi	t2,t2,-1706 # 80000ac8 <__malloc_free_list>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:78
#endif

  beq t0, t1, 2f
2001017a:	00628c63          	beq	t0,t1,20010192 <_start+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:79
  bge t1, t2, 2f
2001017e:	00735a63          	bge	t1,t2,20010192 <_start+0x42>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:83

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20010182:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:84
  addi t0, t0, 4
20010186:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:85
  sw   a0, 0(t1)
20010188:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:86
  addi t1, t1, 4
2001018c:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:87
  blt  t1, t2, 1b
2001018e:	fe734ae3          	blt	t1,t2,20010182 <_start+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:103
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_itim_source_start
  la.got.gprel t1, metal_segment_itim_target_start
  la.got.gprel t2, metal_segment_itim_target_end
#else
  la t0, metal_segment_itim_source_start
20010192:	00001297          	auipc	t0,0x1
20010196:	e3628293          	addi	t0,t0,-458 # 20010fc8 <metal_segment_itim_source_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:104
  la t1, metal_segment_itim_target_start
2001019a:	e7ff0317          	auipc	t1,0xe7ff0
2001019e:	e6630313          	addi	t1,t1,-410 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:105
  la t2, metal_segment_itim_target_end
200101a2:	e7ff0397          	auipc	t2,0xe7ff0
200101a6:	e5e38393          	addi	t2,t2,-418 # 8000000 <metal_segment_itim_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:108
#endif

  beq t0, t1, 2f
200101aa:	00628c63          	beq	t0,t1,200101c2 <_start+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:109
  bge t1, t2, 2f
200101ae:	00735a63          	bge	t1,t2,200101c2 <_start+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:113

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101b2:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:114
  addi t0, t0, 4
200101b6:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:115
  sw   a0, 0(t1)
200101b8:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:116
  addi t1, t1, 4
200101bc:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:117
  blt  t1, t2, 1b
200101be:	fe734ae3          	blt	t1,t2,200101b2 <_start+0x62>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:129
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101c2:	0000100f          	fence.i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:139
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_lim_source_start
  lla.gprel t1, metal_segment_lim_target_start
  lla.gprel t2, metal_segment_lim_target_end
#else
  la t0, metal_segment_lim_source_start
200101c6:	00001297          	auipc	t0,0x1
200101ca:	e0228293          	addi	t0,t0,-510 # 20010fc8 <metal_segment_itim_source_start>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:140
  la t1, metal_segment_lim_target_start
200101ce:	5fff0317          	auipc	t1,0x5fff0
200101d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:141
  la t2, metal_segment_lim_target_end
200101d6:	5fff0397          	auipc	t2,0x5fff0
200101da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:144
#endif

  beq t0, t1, 2f
200101de:	00628c63          	beq	t0,t1,200101f6 <_start+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:145
  bge t1, t2, 2f
200101e2:	00735a63          	bge	t1,t2,200101f6 <_start+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101e6:	0002a503          	lw	a0,0(t0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:150
  addi t0, t0, 4
200101ea:	0291                	addi	t0,t0,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:151
  sw   a0, 0(t1)
200101ec:	00a32023          	sw	a0,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:152
  addi t1, t1, 4
200101f0:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:153
  blt  t1, t2, 1b
200101f2:	fe734ae3          	blt	t1,t2,200101e6 <_start+0x96>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:165
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101f6:	0000100f          	fence.i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:172
  /* Zero the BSS segment. */
#ifdef __riscv_cmodel_compact
  lla.gprel t1, metal_segment_bss_target_start
  lla.gprel t2, metal_segment_bss_target_end
#else
  la t1, metal_segment_bss_target_start
200101fa:	5fff1317          	auipc	t1,0x5fff1
200101fe:	8ce30313          	addi	t1,t1,-1842 # 80000ac8 <__malloc_free_list>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:173
  la t2, metal_segment_bss_target_end
20010202:	8cc18393          	addi	t2,gp,-1844 # 80000b6c <metal_segment_bss_target_end>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:176
#endif

  bge t1, t2, 2f
20010206:	00735763          	bge	t1,t2,20010214 <_start+0xc4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:180

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001020a:	00032023          	sw	zero,0(t1)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:181
  addi t1, t1, 4
2001020e:	0311                	addi	t1,t1,4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:182
  blt  t1, t2, 1b
20010210:	fe734de3          	blt	t1,t2,2001020a <_start+0xba>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:195
  /* Set TLS pointer */
  .weak __tls_base	
#ifdef __riscv_cmodel_compact
  lla.gprel tp, __tls_base
#else
  la tp, __tls_base
20010214:	5fff1217          	auipc	tp,0x5fff1
20010218:	8b420213          	addi	tp,tp,-1868 # 80000ac8 <__malloc_free_list>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:201
#endif

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2001021c:	c211                	beqz	a2,20010220 <_start+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:202
  jalr a2
2001021e:	9602                	jalr	a2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:206
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010220:	00002517          	auipc	a0,0x2
20010224:	18c50513          	addi	a0,a0,396 # 200123ac <__libc_fini_array>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:207
  call atexit
20010228:	146020ef          	jal	ra,2001236e <atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:208
  call __libc_init_array
2001022c:	1b6020ef          	jal	ra,200123e2 <__libc_init_array>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:212

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010230:	00002517          	auipc	a0,0x2
20010234:	45850513          	addi	a0,a0,1112 # 20012688 <metal_fini_run>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:213
  call atexit
20010238:	136020ef          	jal	ra,2001236e <atexit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:214
  call metal_init_run
2001023c:	438020ef          	jal	ra,20012674 <metal_init_run>

20010240 <_skip_init>:
_skip_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:220

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010240:	3709                	jal	20010142 <__metal_synchronize_harts>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:223

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010242:	56fd                	li	a3,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:224
  csrc mie, a3
20010244:	3046b073          	csrc	mie,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:225
  csrc mip, a3
20010248:	3446b073          	csrc	mip,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:229

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2001024c:	301027f3          	csrr	a5,misa
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:230
  lui  a4, 0x42
20010250:	00042737          	lui	a4,0x42
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:231
  and  a4, a4, a5
20010254:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:232
  beqz a4, 1f
20010256:	c709                	beqz	a4,20010260 <_skip_init+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:233
  csrc mideleg, a3
20010258:	3036b073          	csrc	mideleg,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:234
  csrc medeleg, a3
2001025c:	3026b073          	csrc	medeleg,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:238
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010260:	00040737          	lui	a4,0x40
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:239
  and  a4, a4, a5
20010264:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:240
  beqz a4, 1f
20010266:	c319                	beqz	a4,2001026c <_skip_init+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:241
  csrc satp, a3
20010268:	1806b073          	csrc	satp,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:245
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2001026c:	6741                	lui	a4,0x10
2001026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:246
  and  a5, a5, a4
20010272:	8ff9                	and	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:247
  beqz a5, 1f
20010274:	cb89                	beqz	a5,20010286 <_skip_init+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:248
  csrr a5, mstatus
20010276:	300027f3          	csrr	a5,mstatus
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:249
  lui  a4, 0x2
2001027a:	6709                	lui	a4,0x2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:250
  or   a5, a5, a4
2001027c:	8fd9                	or	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:251
  csrw mstatus, a5
2001027e:	30079073          	csrw	mstatus,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:252
  csrwi fcsr, 0
20010282:	00305073          	csrwi	fcsr,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:273
#endif

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010286:	4505                	li	a0,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:274
  la a1, argv  /* argv = {"libgloss", NULL} */
20010288:	00000597          	auipc	a1,0x0
2001028c:	1c858593          	addi	a1,a1,456 # 20010450 <argv>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:275
  la a2, envp  /* envp = {NULL} */
20010290:	00000617          	auipc	a2,0x0
20010294:	1c460613          	addi	a2,a2,452 # 20010454 <envp>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:276
  call secondary_main
20010298:	2031                	jal	200102a4 <secondary_main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:282

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2001029a:	0e8020ef          	jal	ra,20012382 <exit>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:287

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
2001029e:	80a2                	mv	ra,s0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:288
  ret
200102a0:	8082                	ret

200102a2 <_fini>:
_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:300
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102a2:	8082                	ret

200102a4 <secondary_main>:
secondary_main():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:310
 * Users can redefine secondary_main themselves to run code on secondary harts */
.weak   secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102a4:	1141                	addi	sp,sp,-16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:312
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102a6:	c206                	sw	ra,4(sp)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:316
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102a8:	f14022f3          	csrr	t0,mhartid
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:317
  la t1, __metal_boot_hart
200102ac:	00000313          	li	t1,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:318
  beq t0, t1, 2f
200102b0:	00628563          	beq	t0,t1,200102ba <secondary_main+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:320
1:
  wfi
200102b4:	10500073          	wfi
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:321
  j 1b
200102b8:	bff5                	j	200102b4 <secondary_main+0x10>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:323
2:
  call main
200102ba:	547000ef          	jal	ra,20011000 <main>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:325
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102be:	4092                	lw	ra,4(sp)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:329
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102c0:	0141                	addi	sp,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/crt0.S:330
  ret
200102c2:	8082                	ret

Disassembly of section .ctors:

200102d4 <metal_tty_init>:
metal_tty_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
200102d4:	1141                	addi	sp,sp,-16
200102d6:	c606                	sw	ra,12(sp)
200102d8:	c422                	sw	s0,8(sp)
200102da:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
200102dc:	67f1                	lui	a5,0x1c
200102de:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
200102e2:	800017b7          	lui	a5,0x80001
200102e6:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
200102ea:	3d8020ef          	jal	ra,200126c2 <metal_uart_init>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:30
}
200102ee:	0001                	nop
200102f0:	40b2                	lw	ra,12(sp)
200102f2:	4422                	lw	s0,8(sp)
200102f4:	0141                	addi	sp,sp,16
200102f6:	8082                	ret

200102f8 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f8:	1101                	addi	sp,sp,-32
200102fa:	ce06                	sw	ra,28(sp)
200102fc:	cc22                	sw	s0,24(sp)
200102fe:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010300:	09e050ef          	jal	ra,2001539e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010304:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010308:	fec42783          	lw	a5,-20(s0)
2001030c:	c799                	beqz	a5,2001031a <metal_sifive_fe310_g000_pll_init+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030e:	800017b7          	lui	a5,0x80001
20010312:	a9078513          	addi	a0,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xfffff320>
20010316:	114050ef          	jal	ra,2001542a <__metal_driver_sifive_fe310_g000_pll_init>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2001031a:	0001                	nop
2001031c:	40f2                	lw	ra,28(sp)
2001031e:	4462                	lw	s0,24(sp)
20010320:	6105                	addi	sp,sp,32
20010322:	8082                	ret

20010324 <use_hfxosc>:
use_hfxosc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010324:	1101                	addi	sp,sp,-32
20010326:	ce06                	sw	ra,28(sp)
20010328:	cc22                	sw	s0,24(sp)
2001032a:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2001032c:	072050ef          	jal	ra,2001539e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010330:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010334:	fec42583          	lw	a1,-20(s0)
20010338:	800017b7          	lui	a5,0x80001
2001033c:	a9078513          	addi	a0,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xfffff320>
20010340:	197060ef          	jal	ra,20016cd6 <metal_clock_set_rate_hz>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010344:	0001                	nop
20010346:	40f2                	lw	ra,28(sp)
20010348:	4462                	lw	s0,24(sp)
2001034a:	6105                	addi	sp,sp,32
2001034c:	8082                	ret

Disassembly of section .text:

20011000 <main>:
main():
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/main.c:3
#include <stdio.h>

int main() {
20011000:	1141                	addi	sp,sp,-16
20011002:	c606                	sw	ra,12(sp)
20011004:	c422                	sw	s0,8(sp)
20011006:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/main.c:4
	printf("hello_world");
20011008:	200107b7          	lui	a5,0x20010
2001100c:	35078513          	addi	a0,a5,848 # 20010350 <use_hfxosc+0x2c>
20011010:	2039                	jal	2001101e <iprintf>
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/main.c:5
	return 0;
20011012:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/software/test1/main.c:6
}
20011014:	853e                	mv	a0,a5
20011016:	40b2                	lw	ra,12(sp)
20011018:	4422                	lw	s0,8(sp)
2001101a:	0141                	addi	sp,sp,16
2001101c:	8082                	ret

2001101e <iprintf>:
printf():
2001101e:	715d                	addi	sp,sp,-80
20011020:	d422                	sw	s0,40(sp)
20011022:	d606                	sw	ra,44(sp)
20011024:	842a                	mv	s0,a0
20011026:	da2e                	sw	a1,52(sp)
20011028:	dc32                	sw	a2,56(sp)
2001102a:	de36                	sw	a3,60(sp)
2001102c:	c0ba                	sw	a4,64(sp)
2001102e:	c2be                	sw	a5,68(sp)
20011030:	c4c2                	sw	a6,72(sp)
20011032:	c6c6                	sw	a7,76(sp)
20011034:	5fff0517          	auipc	a0,0x5fff0
20011038:	a6c52503          	lw	a0,-1428(a0) # 80000aa0 <_impure_ptr>
2001103c:	c511                	beqz	a0,20011048 <iprintf+0x2a>
2001103e:	4d1c                	lw	a5,24(a0)
20011040:	e781                	bnez	a5,20011048 <iprintf+0x2a>
20011042:	c62a                	sw	a0,12(sp)
20011044:	20f1                	jal	20011110 <__sinit>
20011046:	4532                	lw	a0,12(sp)
20011048:	450c                	lw	a1,8(a0)
2001104a:	1854                	addi	a3,sp,52
2001104c:	8622                	mv	a2,s0
2001104e:	ce36                	sw	a3,28(sp)
20011050:	2105                	jal	20011470 <_vfiprintf_r>
20011052:	50b2                	lw	ra,44(sp)
20011054:	5422                	lw	s0,40(sp)
20011056:	6161                	addi	sp,sp,80
20011058:	8082                	ret

2001105a <std>:
std():
2001105a:	1141                	addi	sp,sp,-16
2001105c:	c422                	sw	s0,8(sp)
2001105e:	c606                	sw	ra,12(sp)
20011060:	842a                	mv	s0,a0
20011062:	00b51623          	sh	a1,12(a0)
20011066:	00c51723          	sh	a2,14(a0)
2001106a:	00052023          	sw	zero,0(a0)
2001106e:	00052223          	sw	zero,4(a0)
20011072:	00052423          	sw	zero,8(a0)
20011076:	06052223          	sw	zero,100(a0)
2001107a:	00052823          	sw	zero,16(a0)
2001107e:	00052a23          	sw	zero,20(a0)
20011082:	00052c23          	sw	zero,24(a0)
20011086:	4621                	li	a2,8
20011088:	4581                	li	a1,0
2001108a:	05c50513          	addi	a0,a0,92
2001108e:	2acd                	jal	20011280 <memset>
20011090:	00000797          	auipc	a5,0x0
20011094:	6a678793          	addi	a5,a5,1702 # 20011736 <__sread>
20011098:	d05c                	sw	a5,36(s0)
2001109a:	00000797          	auipc	a5,0x0
2001109e:	6ce78793          	addi	a5,a5,1742 # 20011768 <__swrite>
200110a2:	d41c                	sw	a5,40(s0)
200110a4:	00000797          	auipc	a5,0x0
200110a8:	71278793          	addi	a5,a5,1810 # 200117b6 <__sseek>
200110ac:	d45c                	sw	a5,44(s0)
200110ae:	00000797          	auipc	a5,0x0
200110b2:	73e78793          	addi	a5,a5,1854 # 200117ec <__sclose>
200110b6:	40b2                	lw	ra,12(sp)
200110b8:	d000                	sw	s0,32(s0)
200110ba:	d81c                	sw	a5,48(s0)
200110bc:	4422                	lw	s0,8(sp)
200110be:	0141                	addi	sp,sp,16
200110c0:	8082                	ret

200110c2 <_cleanup_r>:
_cleanup_r():
200110c2:	00001597          	auipc	a1,0x1
200110c6:	aa858593          	addi	a1,a1,-1368 # 20011b6a <_fflush_r>
200110ca:	a2b1                	j	20011216 <_fwalk_reent>

200110cc <__sfmoreglue>:
__sfmoreglue():
200110cc:	1141                	addi	sp,sp,-16
200110ce:	c226                	sw	s1,4(sp)
200110d0:	06800613          	li	a2,104
200110d4:	fff58493          	addi	s1,a1,-1
200110d8:	02c484b3          	mul	s1,s1,a2
200110dc:	c04a                	sw	s2,0(sp)
200110de:	892e                	mv	s2,a1
200110e0:	c422                	sw	s0,8(sp)
200110e2:	c606                	sw	ra,12(sp)
200110e4:	07448593          	addi	a1,s1,116
200110e8:	2481                	jal	20011328 <_malloc_r>
200110ea:	842a                	mv	s0,a0
200110ec:	c919                	beqz	a0,20011102 <__sfmoreglue+0x36>
200110ee:	00052023          	sw	zero,0(a0)
200110f2:	01252223          	sw	s2,4(a0)
200110f6:	0531                	addi	a0,a0,12
200110f8:	c408                	sw	a0,8(s0)
200110fa:	06848613          	addi	a2,s1,104
200110fe:	4581                	li	a1,0
20011100:	2241                	jal	20011280 <memset>
20011102:	40b2                	lw	ra,12(sp)
20011104:	8522                	mv	a0,s0
20011106:	4422                	lw	s0,8(sp)
20011108:	4492                	lw	s1,4(sp)
2001110a:	4902                	lw	s2,0(sp)
2001110c:	0141                	addi	sp,sp,16
2001110e:	8082                	ret

20011110 <__sinit>:
__sinit():
20011110:	4d1c                	lw	a5,24(a0)
20011112:	e3bd                	bnez	a5,20011178 <__sinit+0x68>
20011114:	1141                	addi	sp,sp,-16
20011116:	c422                	sw	s0,8(sp)
20011118:	c606                	sw	ra,12(sp)
2001111a:	00000797          	auipc	a5,0x0
2001111e:	fa878793          	addi	a5,a5,-88 # 200110c2 <_cleanup_r>
20011122:	d51c                	sw	a5,40(a0)
20011124:	04052423          	sw	zero,72(a0)
20011128:	04052623          	sw	zero,76(a0)
2001112c:	04052823          	sw	zero,80(a0)
20011130:	00000797          	auipc	a5,0x0
20011134:	e707a783          	lw	a5,-400(a5) # 20010fa0 <_global_impure_ptr>
20011138:	842a                	mv	s0,a0
2001113a:	00f51463          	bne	a0,a5,20011142 <__sinit+0x32>
2001113e:	4785                	li	a5,1
20011140:	cd1c                	sw	a5,24(a0)
20011142:	8522                	mv	a0,s0
20011144:	281d                	jal	2001117a <__sfp>
20011146:	c048                	sw	a0,4(s0)
20011148:	8522                	mv	a0,s0
2001114a:	2805                	jal	2001117a <__sfp>
2001114c:	c408                	sw	a0,8(s0)
2001114e:	8522                	mv	a0,s0
20011150:	202d                	jal	2001117a <__sfp>
20011152:	c448                	sw	a0,12(s0)
20011154:	4048                	lw	a0,4(s0)
20011156:	4601                	li	a2,0
20011158:	4591                	li	a1,4
2001115a:	3701                	jal	2001105a <std>
2001115c:	4408                	lw	a0,8(s0)
2001115e:	4605                	li	a2,1
20011160:	45a5                	li	a1,9
20011162:	3de5                	jal	2001105a <std>
20011164:	4448                	lw	a0,12(s0)
20011166:	4609                	li	a2,2
20011168:	45c9                	li	a1,18
2001116a:	3dc5                	jal	2001105a <std>
2001116c:	4785                	li	a5,1
2001116e:	40b2                	lw	ra,12(sp)
20011170:	cc1c                	sw	a5,24(s0)
20011172:	4422                	lw	s0,8(sp)
20011174:	0141                	addi	sp,sp,16
20011176:	8082                	ret
20011178:	8082                	ret

2001117a <__sfp>:
__sfp():
2001117a:	1141                	addi	sp,sp,-16
2001117c:	c226                	sw	s1,4(sp)
2001117e:	00000497          	auipc	s1,0x0
20011182:	e224a483          	lw	s1,-478(s1) # 20010fa0 <_global_impure_ptr>
20011186:	4c9c                	lw	a5,24(s1)
20011188:	c04a                	sw	s2,0(sp)
2001118a:	c606                	sw	ra,12(sp)
2001118c:	c422                	sw	s0,8(sp)
2001118e:	892a                	mv	s2,a0
20011190:	e399                	bnez	a5,20011196 <__sfp+0x1c>
20011192:	8526                	mv	a0,s1
20011194:	3fb5                	jal	20011110 <__sinit>
20011196:	04848493          	addi	s1,s1,72
2001119a:	4480                	lw	s0,8(s1)
2001119c:	40dc                	lw	a5,4(s1)
2001119e:	17fd                	addi	a5,a5,-1
200111a0:	0007d663          	bgez	a5,200111ac <__sfp+0x32>
200111a4:	409c                	lw	a5,0(s1)
200111a6:	cfb1                	beqz	a5,20011202 <__sfp+0x88>
200111a8:	4084                	lw	s1,0(s1)
200111aa:	bfc5                	j	2001119a <__sfp+0x20>
200111ac:	00c41703          	lh	a4,12(s0)
200111b0:	e731                	bnez	a4,200111fc <__sfp+0x82>
200111b2:	77c1                	lui	a5,0xffff0
200111b4:	0785                	addi	a5,a5,1
200111b6:	06042223          	sw	zero,100(s0)
200111ba:	00042023          	sw	zero,0(s0)
200111be:	00042223          	sw	zero,4(s0)
200111c2:	00042423          	sw	zero,8(s0)
200111c6:	c45c                	sw	a5,12(s0)
200111c8:	00042823          	sw	zero,16(s0)
200111cc:	00042a23          	sw	zero,20(s0)
200111d0:	00042c23          	sw	zero,24(s0)
200111d4:	4621                	li	a2,8
200111d6:	4581                	li	a1,0
200111d8:	05c40513          	addi	a0,s0,92
200111dc:	2055                	jal	20011280 <memset>
200111de:	02042a23          	sw	zero,52(s0)
200111e2:	02042c23          	sw	zero,56(s0)
200111e6:	04042423          	sw	zero,72(s0)
200111ea:	04042623          	sw	zero,76(s0)
200111ee:	40b2                	lw	ra,12(sp)
200111f0:	8522                	mv	a0,s0
200111f2:	4422                	lw	s0,8(sp)
200111f4:	4492                	lw	s1,4(sp)
200111f6:	4902                	lw	s2,0(sp)
200111f8:	0141                	addi	sp,sp,16
200111fa:	8082                	ret
200111fc:	06840413          	addi	s0,s0,104
20011200:	bf79                	j	2001119e <__sfp+0x24>
20011202:	4591                	li	a1,4
20011204:	854a                	mv	a0,s2
20011206:	35d9                	jal	200110cc <__sfmoreglue>
20011208:	c088                	sw	a0,0(s1)
2001120a:	842a                	mv	s0,a0
2001120c:	fd51                	bnez	a0,200111a8 <__sfp+0x2e>
2001120e:	47b1                	li	a5,12
20011210:	00f92023          	sw	a5,0(s2)
20011214:	bfe9                	j	200111ee <__sfp+0x74>

20011216 <_fwalk_reent>:
_fwalk_reent():
20011216:	7179                	addi	sp,sp,-48
20011218:	d422                	sw	s0,40(sp)
2001121a:	d04a                	sw	s2,32(sp)
2001121c:	ce4e                	sw	s3,28(sp)
2001121e:	cc52                	sw	s4,24(sp)
20011220:	c85a                	sw	s6,16(sp)
20011222:	c65e                	sw	s7,12(sp)
20011224:	d606                	sw	ra,44(sp)
20011226:	d226                	sw	s1,36(sp)
20011228:	ca56                	sw	s5,20(sp)
2001122a:	892a                	mv	s2,a0
2001122c:	8a2e                	mv	s4,a1
2001122e:	04850413          	addi	s0,a0,72
20011232:	4981                	li	s3,0
20011234:	4b05                	li	s6,1
20011236:	5bfd                	li	s7,-1
20011238:	4404                	lw	s1,8(s0)
2001123a:	00442a83          	lw	s5,4(s0)
2001123e:	1afd                	addi	s5,s5,-1
20011240:	020ad063          	bgez	s5,20011260 <_fwalk_reent+0x4a>
20011244:	4000                	lw	s0,0(s0)
20011246:	f86d                	bnez	s0,20011238 <_fwalk_reent+0x22>
20011248:	50b2                	lw	ra,44(sp)
2001124a:	5422                	lw	s0,40(sp)
2001124c:	5492                	lw	s1,36(sp)
2001124e:	5902                	lw	s2,32(sp)
20011250:	4a62                	lw	s4,24(sp)
20011252:	4ad2                	lw	s5,20(sp)
20011254:	4b42                	lw	s6,16(sp)
20011256:	4bb2                	lw	s7,12(sp)
20011258:	854e                	mv	a0,s3
2001125a:	49f2                	lw	s3,28(sp)
2001125c:	6145                	addi	sp,sp,48
2001125e:	8082                	ret
20011260:	00c4d783          	lhu	a5,12(s1)
20011264:	00fb7b63          	bgeu	s6,a5,2001127a <_fwalk_reent+0x64>
20011268:	00e49783          	lh	a5,14(s1)
2001126c:	01778763          	beq	a5,s7,2001127a <_fwalk_reent+0x64>
20011270:	85a6                	mv	a1,s1
20011272:	854a                	mv	a0,s2
20011274:	9a02                	jalr	s4
20011276:	00a9e9b3          	or	s3,s3,a0
2001127a:	06848493          	addi	s1,s1,104
2001127e:	b7c1                	j	2001123e <_fwalk_reent+0x28>

20011280 <memset>:
memset():
20011280:	433d                	li	t1,15
20011282:	872a                	mv	a4,a0
20011284:	02c37363          	bgeu	t1,a2,200112aa <memset+0x2a>
20011288:	00f77793          	andi	a5,a4,15
2001128c:	efbd                	bnez	a5,2001130a <memset+0x8a>
2001128e:	e5ad                	bnez	a1,200112f8 <memset+0x78>
20011290:	ff067693          	andi	a3,a2,-16
20011294:	8a3d                	andi	a2,a2,15
20011296:	96ba                	add	a3,a3,a4
20011298:	c30c                	sw	a1,0(a4)
2001129a:	c34c                	sw	a1,4(a4)
2001129c:	c70c                	sw	a1,8(a4)
2001129e:	c74c                	sw	a1,12(a4)
200112a0:	0741                	addi	a4,a4,16
200112a2:	fed76be3          	bltu	a4,a3,20011298 <memset+0x18>
200112a6:	e211                	bnez	a2,200112aa <memset+0x2a>
200112a8:	8082                	ret
200112aa:	40c306b3          	sub	a3,t1,a2
200112ae:	068a                	slli	a3,a3,0x2
200112b0:	00000297          	auipc	t0,0x0
200112b4:	9696                	add	a3,a3,t0
200112b6:	00a68067          	jr	10(a3)
200112ba:	00b70723          	sb	a1,14(a4) # 200e <__heap_size+0x180e>
200112be:	00b706a3          	sb	a1,13(a4)
200112c2:	00b70623          	sb	a1,12(a4)
200112c6:	00b705a3          	sb	a1,11(a4)
200112ca:	00b70523          	sb	a1,10(a4)
200112ce:	00b704a3          	sb	a1,9(a4)
200112d2:	00b70423          	sb	a1,8(a4)
200112d6:	00b703a3          	sb	a1,7(a4)
200112da:	00b70323          	sb	a1,6(a4)
200112de:	00b702a3          	sb	a1,5(a4)
200112e2:	00b70223          	sb	a1,4(a4)
200112e6:	00b701a3          	sb	a1,3(a4)
200112ea:	00b70123          	sb	a1,2(a4)
200112ee:	00b700a3          	sb	a1,1(a4)
200112f2:	00b70023          	sb	a1,0(a4)
200112f6:	8082                	ret
200112f8:	0ff5f593          	zext.b	a1,a1
200112fc:	00859693          	slli	a3,a1,0x8
20011300:	8dd5                	or	a1,a1,a3
20011302:	01059693          	slli	a3,a1,0x10
20011306:	8dd5                	or	a1,a1,a3
20011308:	b761                	j	20011290 <memset+0x10>
2001130a:	00279693          	slli	a3,a5,0x2
2001130e:	00000297          	auipc	t0,0x0
20011312:	9696                	add	a3,a3,t0
20011314:	8286                	mv	t0,ra
20011316:	fa8680e7          	jalr	-88(a3)
2001131a:	8096                	mv	ra,t0
2001131c:	17c1                	addi	a5,a5,-16
2001131e:	8f1d                	sub	a4,a4,a5
20011320:	963e                	add	a2,a2,a5
20011322:	f8c374e3          	bgeu	t1,a2,200112aa <memset+0x2a>
20011326:	b7a5                	j	2001128e <memset+0xe>

20011328 <_malloc_r>:
_malloc_r():
20011328:	1101                	addi	sp,sp,-32
2001132a:	ca26                	sw	s1,20(sp)
2001132c:	00358493          	addi	s1,a1,3
20011330:	98f1                	andi	s1,s1,-4
20011332:	c84a                	sw	s2,16(sp)
20011334:	ce06                	sw	ra,28(sp)
20011336:	cc22                	sw	s0,24(sp)
20011338:	c64e                	sw	s3,12(sp)
2001133a:	04a1                	addi	s1,s1,8
2001133c:	47b1                	li	a5,12
2001133e:	892a                	mv	s2,a0
20011340:	04f4f663          	bgeu	s1,a5,2001138c <_malloc_r+0x64>
20011344:	44b1                	li	s1,12
20011346:	04b4e563          	bltu	s1,a1,20011390 <_malloc_r+0x68>
2001134a:	854a                	mv	a0,s2
2001134c:	1c9000ef          	jal	ra,20011d14 <__malloc_lock>
20011350:	5ffef697          	auipc	a3,0x5ffef
20011354:	77868693          	addi	a3,a3,1912 # 80000ac8 <__malloc_free_list>
20011358:	4298                	lw	a4,0(a3)
2001135a:	843a                	mv	s0,a4
2001135c:	e429                	bnez	s0,200113a6 <_malloc_r+0x7e>
2001135e:	5ffef417          	auipc	s0,0x5ffef
20011362:	76e40413          	addi	s0,s0,1902 # 80000acc <__malloc_sbrk_start>
20011366:	401c                	lw	a5,0(s0)
20011368:	e789                	bnez	a5,20011372 <_malloc_r+0x4a>
2001136a:	4581                	li	a1,0
2001136c:	854a                	mv	a0,s2
2001136e:	2e61                	jal	20011706 <_sbrk_r>
20011370:	c008                	sw	a0,0(s0)
20011372:	85a6                	mv	a1,s1
20011374:	854a                	mv	a0,s2
20011376:	2e41                	jal	20011706 <_sbrk_r>
20011378:	59fd                	li	s3,-1
2001137a:	07351a63          	bne	a0,s3,200113ee <_malloc_r+0xc6>
2001137e:	47b1                	li	a5,12
20011380:	00f92023          	sw	a5,0(s2)
20011384:	854a                	mv	a0,s2
20011386:	191000ef          	jal	ra,20011d16 <__malloc_unlock>
2001138a:	a031                	j	20011396 <_malloc_r+0x6e>
2001138c:	fa04dde3          	bgez	s1,20011346 <_malloc_r+0x1e>
20011390:	47b1                	li	a5,12
20011392:	00f92023          	sw	a5,0(s2)
20011396:	4501                	li	a0,0
20011398:	40f2                	lw	ra,28(sp)
2001139a:	4462                	lw	s0,24(sp)
2001139c:	44d2                	lw	s1,20(sp)
2001139e:	4942                	lw	s2,16(sp)
200113a0:	49b2                	lw	s3,12(sp)
200113a2:	6105                	addi	sp,sp,32
200113a4:	8082                	ret
200113a6:	401c                	lw	a5,0(s0)
200113a8:	8f85                	sub	a5,a5,s1
200113aa:	0207cf63          	bltz	a5,200113e8 <_malloc_r+0xc0>
200113ae:	462d                	li	a2,11
200113b0:	00f67663          	bgeu	a2,a5,200113bc <_malloc_r+0x94>
200113b4:	c01c                	sw	a5,0(s0)
200113b6:	943e                	add	s0,s0,a5
200113b8:	c004                	sw	s1,0(s0)
200113ba:	a029                	j	200113c4 <_malloc_r+0x9c>
200113bc:	405c                	lw	a5,4(s0)
200113be:	02871363          	bne	a4,s0,200113e4 <_malloc_r+0xbc>
200113c2:	c29c                	sw	a5,0(a3)
200113c4:	854a                	mv	a0,s2
200113c6:	151000ef          	jal	ra,20011d16 <__malloc_unlock>
200113ca:	00b40513          	addi	a0,s0,11
200113ce:	00440793          	addi	a5,s0,4
200113d2:	9961                	andi	a0,a0,-8
200113d4:	40f50733          	sub	a4,a0,a5
200113d8:	fcf500e3          	beq	a0,a5,20011398 <_malloc_r+0x70>
200113dc:	943a                	add	s0,s0,a4
200113de:	8f89                	sub	a5,a5,a0
200113e0:	c01c                	sw	a5,0(s0)
200113e2:	bf5d                	j	20011398 <_malloc_r+0x70>
200113e4:	c35c                	sw	a5,4(a4)
200113e6:	bff9                	j	200113c4 <_malloc_r+0x9c>
200113e8:	8722                	mv	a4,s0
200113ea:	4040                	lw	s0,4(s0)
200113ec:	bf85                	j	2001135c <_malloc_r+0x34>
200113ee:	00350413          	addi	s0,a0,3
200113f2:	9871                	andi	s0,s0,-4
200113f4:	fc8502e3          	beq	a0,s0,200113b8 <_malloc_r+0x90>
200113f8:	40a405b3          	sub	a1,s0,a0
200113fc:	854a                	mv	a0,s2
200113fe:	2621                	jal	20011706 <_sbrk_r>
20011400:	fb351ce3          	bne	a0,s3,200113b8 <_malloc_r+0x90>
20011404:	bfad                	j	2001137e <_malloc_r+0x56>

20011406 <__sfputc_r>:
__sfputc_r():
20011406:	461c                	lw	a5,8(a2)
20011408:	17fd                	addi	a5,a5,-1
2001140a:	c61c                	sw	a5,8(a2)
2001140c:	0007d963          	bgez	a5,2001141e <__sfputc_r+0x18>
20011410:	4e18                	lw	a4,24(a2)
20011412:	00e7c563          	blt	a5,a4,2001141c <__sfputc_r+0x16>
20011416:	47a9                	li	a5,10
20011418:	00f59363          	bne	a1,a5,2001141e <__sfputc_r+0x18>
2001141c:	aed9                	j	200117f2 <__swbuf_r>
2001141e:	421c                	lw	a5,0(a2)
20011420:	852e                	mv	a0,a1
20011422:	00178713          	addi	a4,a5,1 # ffff0001 <metal_segment_heap_target_end+0x7ffee891>
20011426:	c218                	sw	a4,0(a2)
20011428:	00b78023          	sb	a1,0(a5)
2001142c:	8082                	ret

2001142e <__sfputs_r>:
__sfputs_r():
2001142e:	1101                	addi	sp,sp,-32
20011430:	cc22                	sw	s0,24(sp)
20011432:	ca26                	sw	s1,20(sp)
20011434:	c84a                	sw	s2,16(sp)
20011436:	c64e                	sw	s3,12(sp)
20011438:	c452                	sw	s4,8(sp)
2001143a:	ce06                	sw	ra,28(sp)
2001143c:	892a                	mv	s2,a0
2001143e:	89ae                	mv	s3,a1
20011440:	8432                	mv	s0,a2
20011442:	00d604b3          	add	s1,a2,a3
20011446:	5a7d                	li	s4,-1
20011448:	00941463          	bne	s0,s1,20011450 <__sfputs_r+0x22>
2001144c:	4501                	li	a0,0
2001144e:	a809                	j	20011460 <__sfputs_r+0x32>
20011450:	00044583          	lbu	a1,0(s0)
20011454:	864e                	mv	a2,s3
20011456:	854a                	mv	a0,s2
20011458:	377d                	jal	20011406 <__sfputc_r>
2001145a:	0405                	addi	s0,s0,1
2001145c:	ff4516e3          	bne	a0,s4,20011448 <__sfputs_r+0x1a>
20011460:	40f2                	lw	ra,28(sp)
20011462:	4462                	lw	s0,24(sp)
20011464:	44d2                	lw	s1,20(sp)
20011466:	4942                	lw	s2,16(sp)
20011468:	49b2                	lw	s3,12(sp)
2001146a:	4a22                	lw	s4,8(sp)
2001146c:	6105                	addi	sp,sp,32
2001146e:	8082                	ret

20011470 <_vfiprintf_r>:
_vfiprintf_r():
20011470:	7135                	addi	sp,sp,-160
20011472:	cd22                	sw	s0,152(sp)
20011474:	cb26                	sw	s1,148(sp)
20011476:	c94a                	sw	s2,144(sp)
20011478:	c74e                	sw	s3,140(sp)
2001147a:	cf06                	sw	ra,156(sp)
2001147c:	c552                	sw	s4,136(sp)
2001147e:	c356                	sw	s5,132(sp)
20011480:	c15a                	sw	s6,128(sp)
20011482:	dede                	sw	s7,124(sp)
20011484:	dce2                	sw	s8,120(sp)
20011486:	dae6                	sw	s9,116(sp)
20011488:	89aa                	mv	s3,a0
2001148a:	84ae                	mv	s1,a1
2001148c:	8932                	mv	s2,a2
2001148e:	8436                	mv	s0,a3
20011490:	c501                	beqz	a0,20011498 <_vfiprintf_r+0x28>
20011492:	4d1c                	lw	a5,24(a0)
20011494:	e391                	bnez	a5,20011498 <_vfiprintf_r+0x28>
20011496:	39ad                	jal	20011110 <__sinit>
20011498:	fffff797          	auipc	a5,0xfffff
2001149c:	ee478793          	addi	a5,a5,-284 # 2001037c <__sf_fake_stdin>
200114a0:	0cf49c63          	bne	s1,a5,20011578 <_vfiprintf_r+0x108>
200114a4:	0049a483          	lw	s1,4(s3)
200114a8:	00c4d783          	lhu	a5,12(s1)
200114ac:	8ba1                	andi	a5,a5,8
200114ae:	c7fd                	beqz	a5,2001159c <_vfiprintf_r+0x12c>
200114b0:	489c                	lw	a5,16(s1)
200114b2:	c7ed                	beqz	a5,2001159c <_vfiprintf_r+0x12c>
200114b4:	02000793          	li	a5,32
200114b8:	02f104a3          	sb	a5,41(sp)
200114bc:	03000793          	li	a5,48
200114c0:	d202                	sw	zero,36(sp)
200114c2:	02f10523          	sb	a5,42(sp)
200114c6:	c622                	sw	s0,12(sp)
200114c8:	02500b93          	li	s7,37
200114cc:	fffffa97          	auipc	s5,0xfffff
200114d0:	ef0a8a93          	addi	s5,s5,-272 # 200103bc <__sf_fake_stdout+0x20>
200114d4:	4c05                	li	s8,1
200114d6:	4b29                	li	s6,10
200114d8:	844a                	mv	s0,s2
200114da:	00044783          	lbu	a5,0(s0)
200114de:	c399                	beqz	a5,200114e4 <_vfiprintf_r+0x74>
200114e0:	0f779063          	bne	a5,s7,200115c0 <_vfiprintf_r+0x150>
200114e4:	41240cb3          	sub	s9,s0,s2
200114e8:	01240d63          	beq	s0,s2,20011502 <_vfiprintf_r+0x92>
200114ec:	86e6                	mv	a3,s9
200114ee:	864a                	mv	a2,s2
200114f0:	85a6                	mv	a1,s1
200114f2:	854e                	mv	a0,s3
200114f4:	3f2d                	jal	2001142e <__sfputs_r>
200114f6:	57fd                	li	a5,-1
200114f8:	1ef50463          	beq	a0,a5,200116e0 <_vfiprintf_r+0x270>
200114fc:	5792                	lw	a5,36(sp)
200114fe:	97e6                	add	a5,a5,s9
20011500:	d23e                	sw	a5,36(sp)
20011502:	00044783          	lbu	a5,0(s0)
20011506:	1c078d63          	beqz	a5,200116e0 <_vfiprintf_r+0x270>
2001150a:	57fd                	li	a5,-1
2001150c:	00140913          	addi	s2,s0,1
20011510:	c802                	sw	zero,16(sp)
20011512:	ce02                	sw	zero,28(sp)
20011514:	ca3e                	sw	a5,20(sp)
20011516:	cc02                	sw	zero,24(sp)
20011518:	040109a3          	sb	zero,83(sp)
2001151c:	d482                	sw	zero,104(sp)
2001151e:	00094583          	lbu	a1,0(s2)
20011522:	4615                	li	a2,5
20011524:	8556                	mv	a0,s5
20011526:	7d4000ef          	jal	ra,20011cfa <memchr>
2001152a:	47c2                	lw	a5,16(sp)
2001152c:	00190413          	addi	s0,s2,1
20011530:	e951                	bnez	a0,200115c4 <_vfiprintf_r+0x154>
20011532:	0107f713          	andi	a4,a5,16
20011536:	c709                	beqz	a4,20011540 <_vfiprintf_r+0xd0>
20011538:	02000713          	li	a4,32
2001153c:	04e109a3          	sb	a4,83(sp)
20011540:	0087f713          	andi	a4,a5,8
20011544:	c709                	beqz	a4,2001154e <_vfiprintf_r+0xde>
20011546:	02b00713          	li	a4,43
2001154a:	04e109a3          	sb	a4,83(sp)
2001154e:	00094683          	lbu	a3,0(s2)
20011552:	02a00713          	li	a4,42
20011556:	06e68f63          	beq	a3,a4,200115d4 <_vfiprintf_r+0x164>
2001155a:	47f2                	lw	a5,28(sp)
2001155c:	844a                	mv	s0,s2
2001155e:	4681                	li	a3,0
20011560:	4625                	li	a2,9
20011562:	00044703          	lbu	a4,0(s0)
20011566:	00140593          	addi	a1,s0,1
2001156a:	fd070713          	addi	a4,a4,-48
2001156e:	0ae67863          	bgeu	a2,a4,2001161e <_vfiprintf_r+0x1ae>
20011572:	caad                	beqz	a3,200115e4 <_vfiprintf_r+0x174>
20011574:	ce3e                	sw	a5,28(sp)
20011576:	a0bd                	j	200115e4 <_vfiprintf_r+0x174>
20011578:	fffff797          	auipc	a5,0xfffff
2001157c:	e2478793          	addi	a5,a5,-476 # 2001039c <__sf_fake_stdout>
20011580:	00f49563          	bne	s1,a5,2001158a <_vfiprintf_r+0x11a>
20011584:	0089a483          	lw	s1,8(s3)
20011588:	b705                	j	200114a8 <_vfiprintf_r+0x38>
2001158a:	fffff797          	auipc	a5,0xfffff
2001158e:	dd278793          	addi	a5,a5,-558 # 2001035c <__sf_fake_stderr>
20011592:	f0f49be3          	bne	s1,a5,200114a8 <_vfiprintf_r+0x38>
20011596:	00c9a483          	lw	s1,12(s3)
2001159a:	b739                	j	200114a8 <_vfiprintf_r+0x38>
2001159c:	85a6                	mv	a1,s1
2001159e:	854e                	mv	a0,s3
200115a0:	26a1                	jal	200118e8 <__swsetup_r>
200115a2:	d909                	beqz	a0,200114b4 <_vfiprintf_r+0x44>
200115a4:	557d                	li	a0,-1
200115a6:	40fa                	lw	ra,156(sp)
200115a8:	446a                	lw	s0,152(sp)
200115aa:	44da                	lw	s1,148(sp)
200115ac:	494a                	lw	s2,144(sp)
200115ae:	49ba                	lw	s3,140(sp)
200115b0:	4a2a                	lw	s4,136(sp)
200115b2:	4a9a                	lw	s5,132(sp)
200115b4:	4b0a                	lw	s6,128(sp)
200115b6:	5bf6                	lw	s7,124(sp)
200115b8:	5c66                	lw	s8,120(sp)
200115ba:	5cd6                	lw	s9,116(sp)
200115bc:	610d                	addi	sp,sp,160
200115be:	8082                	ret
200115c0:	0405                	addi	s0,s0,1
200115c2:	bf21                	j	200114da <_vfiprintf_r+0x6a>
200115c4:	41550533          	sub	a0,a0,s5
200115c8:	00ac1533          	sll	a0,s8,a0
200115cc:	8fc9                	or	a5,a5,a0
200115ce:	c83e                	sw	a5,16(sp)
200115d0:	8922                	mv	s2,s0
200115d2:	b7b1                	j	2001151e <_vfiprintf_r+0xae>
200115d4:	4732                	lw	a4,12(sp)
200115d6:	00470693          	addi	a3,a4,4
200115da:	4318                	lw	a4,0(a4)
200115dc:	c636                	sw	a3,12(sp)
200115de:	02074963          	bltz	a4,20011610 <_vfiprintf_r+0x1a0>
200115e2:	ce3a                	sw	a4,28(sp)
200115e4:	00044703          	lbu	a4,0(s0)
200115e8:	02e00793          	li	a5,46
200115ec:	04f71f63          	bne	a4,a5,2001164a <_vfiprintf_r+0x1da>
200115f0:	00144703          	lbu	a4,1(s0)
200115f4:	02a00793          	li	a5,42
200115f8:	02f71b63          	bne	a4,a5,2001162e <_vfiprintf_r+0x1be>
200115fc:	47b2                	lw	a5,12(sp)
200115fe:	0409                	addi	s0,s0,2
20011600:	00478713          	addi	a4,a5,4
20011604:	439c                	lw	a5,0(a5)
20011606:	c63a                	sw	a4,12(sp)
20011608:	0207c163          	bltz	a5,2001162a <_vfiprintf_r+0x1ba>
2001160c:	ca3e                	sw	a5,20(sp)
2001160e:	a835                	j	2001164a <_vfiprintf_r+0x1da>
20011610:	40e00733          	neg	a4,a4
20011614:	0027e793          	ori	a5,a5,2
20011618:	ce3a                	sw	a4,28(sp)
2001161a:	c83e                	sw	a5,16(sp)
2001161c:	b7e1                	j	200115e4 <_vfiprintf_r+0x174>
2001161e:	036787b3          	mul	a5,a5,s6
20011622:	842e                	mv	s0,a1
20011624:	4685                	li	a3,1
20011626:	97ba                	add	a5,a5,a4
20011628:	bf2d                	j	20011562 <_vfiprintf_r+0xf2>
2001162a:	57fd                	li	a5,-1
2001162c:	b7c5                	j	2001160c <_vfiprintf_r+0x19c>
2001162e:	0405                	addi	s0,s0,1
20011630:	ca02                	sw	zero,20(sp)
20011632:	4681                	li	a3,0
20011634:	4781                	li	a5,0
20011636:	4625                	li	a2,9
20011638:	00044703          	lbu	a4,0(s0)
2001163c:	00140593          	addi	a1,s0,1
20011640:	fd070713          	addi	a4,a4,-48
20011644:	06e67463          	bgeu	a2,a4,200116ac <_vfiprintf_r+0x23c>
20011648:	f2f1                	bnez	a3,2001160c <_vfiprintf_r+0x19c>
2001164a:	00044583          	lbu	a1,0(s0)
2001164e:	460d                	li	a2,3
20011650:	fffff517          	auipc	a0,0xfffff
20011654:	d7450513          	addi	a0,a0,-652 # 200103c4 <__sf_fake_stdout+0x28>
20011658:	254d                	jal	20011cfa <memchr>
2001165a:	cd11                	beqz	a0,20011676 <_vfiprintf_r+0x206>
2001165c:	fffff797          	auipc	a5,0xfffff
20011660:	d6878793          	addi	a5,a5,-664 # 200103c4 <__sf_fake_stdout+0x28>
20011664:	8d1d                	sub	a0,a0,a5
20011666:	04000793          	li	a5,64
2001166a:	00a797b3          	sll	a5,a5,a0
2001166e:	4542                	lw	a0,16(sp)
20011670:	0405                	addi	s0,s0,1
20011672:	8d5d                	or	a0,a0,a5
20011674:	c82a                	sw	a0,16(sp)
20011676:	00044583          	lbu	a1,0(s0)
2001167a:	4619                	li	a2,6
2001167c:	fffff517          	auipc	a0,0xfffff
20011680:	d4c50513          	addi	a0,a0,-692 # 200103c8 <__sf_fake_stdout+0x2c>
20011684:	00140913          	addi	s2,s0,1
20011688:	02b10423          	sb	a1,40(sp)
2001168c:	25bd                	jal	20011cfa <memchr>
2001168e:	c12d                	beqz	a0,200116f0 <_vfiprintf_r+0x280>
20011690:	00000793          	li	a5,0
20011694:	e795                	bnez	a5,200116c0 <_vfiprintf_r+0x250>
20011696:	4742                	lw	a4,16(sp)
20011698:	47b2                	lw	a5,12(sp)
2001169a:	10077713          	andi	a4,a4,256
2001169e:	cf09                	beqz	a4,200116b8 <_vfiprintf_r+0x248>
200116a0:	0791                	addi	a5,a5,4
200116a2:	c63e                	sw	a5,12(sp)
200116a4:	5792                	lw	a5,36(sp)
200116a6:	97d2                	add	a5,a5,s4
200116a8:	d23e                	sw	a5,36(sp)
200116aa:	b53d                	j	200114d8 <_vfiprintf_r+0x68>
200116ac:	036787b3          	mul	a5,a5,s6
200116b0:	842e                	mv	s0,a1
200116b2:	4685                	li	a3,1
200116b4:	97ba                	add	a5,a5,a4
200116b6:	b749                	j	20011638 <_vfiprintf_r+0x1c8>
200116b8:	079d                	addi	a5,a5,7
200116ba:	9be1                	andi	a5,a5,-8
200116bc:	07a1                	addi	a5,a5,8
200116be:	b7d5                	j	200116a2 <_vfiprintf_r+0x232>
200116c0:	0078                	addi	a4,sp,12
200116c2:	00000697          	auipc	a3,0x0
200116c6:	d6c68693          	addi	a3,a3,-660 # 2001142e <__sfputs_r>
200116ca:	8626                	mv	a2,s1
200116cc:	080c                	addi	a1,sp,16
200116ce:	854e                	mv	a0,s3
200116d0:	00000097          	auipc	ra,0x0
200116d4:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
200116d8:	57fd                	li	a5,-1
200116da:	8a2a                	mv	s4,a0
200116dc:	fcf514e3          	bne	a0,a5,200116a4 <_vfiprintf_r+0x234>
200116e0:	00c4d783          	lhu	a5,12(s1)
200116e4:	0407f793          	andi	a5,a5,64
200116e8:	ea079ee3          	bnez	a5,200115a4 <_vfiprintf_r+0x134>
200116ec:	5512                	lw	a0,36(sp)
200116ee:	bd65                	j	200115a6 <_vfiprintf_r+0x136>
200116f0:	0078                	addi	a4,sp,12
200116f2:	00000697          	auipc	a3,0x0
200116f6:	d3c68693          	addi	a3,a3,-708 # 2001142e <__sfputs_r>
200116fa:	8626                	mv	a2,s1
200116fc:	080c                	addi	a1,sp,16
200116fe:	854e                	mv	a0,s3
20011700:	7c6000ef          	jal	ra,20011ec6 <_printf_i>
20011704:	bfd1                	j	200116d8 <_vfiprintf_r+0x268>

20011706 <_sbrk_r>:
_sbrk_r():
20011706:	1141                	addi	sp,sp,-16
20011708:	c422                	sw	s0,8(sp)
2001170a:	842a                	mv	s0,a0
2001170c:	852e                	mv	a0,a1
2001170e:	5ffef797          	auipc	a5,0x5ffef
20011712:	3c07a123          	sw	zero,962(a5) # 80000ad0 <errno>
20011716:	c606                	sw	ra,12(sp)
20011718:	36b000ef          	jal	ra,20012282 <_sbrk>
2001171c:	57fd                	li	a5,-1
2001171e:	00f51863          	bne	a0,a5,2001172e <_sbrk_r+0x28>
20011722:	5ffef797          	auipc	a5,0x5ffef
20011726:	3ae7a783          	lw	a5,942(a5) # 80000ad0 <errno>
2001172a:	c391                	beqz	a5,2001172e <_sbrk_r+0x28>
2001172c:	c01c                	sw	a5,0(s0)
2001172e:	40b2                	lw	ra,12(sp)
20011730:	4422                	lw	s0,8(sp)
20011732:	0141                	addi	sp,sp,16
20011734:	8082                	ret

20011736 <__sread>:
__sread():
20011736:	1141                	addi	sp,sp,-16
20011738:	c422                	sw	s0,8(sp)
2001173a:	842e                	mv	s0,a1
2001173c:	00e59583          	lh	a1,14(a1)
20011740:	c606                	sw	ra,12(sp)
20011742:	1f5000ef          	jal	ra,20012136 <_read_r>
20011746:	00054963          	bltz	a0,20011758 <__sread+0x22>
2001174a:	487c                	lw	a5,84(s0)
2001174c:	97aa                	add	a5,a5,a0
2001174e:	c87c                	sw	a5,84(s0)
20011750:	40b2                	lw	ra,12(sp)
20011752:	4422                	lw	s0,8(sp)
20011754:	0141                	addi	sp,sp,16
20011756:	8082                	ret
20011758:	00c45783          	lhu	a5,12(s0)
2001175c:	777d                	lui	a4,0xfffff
2001175e:	177d                	addi	a4,a4,-1
20011760:	8ff9                	and	a5,a5,a4
20011762:	00f41623          	sh	a5,12(s0)
20011766:	b7ed                	j	20011750 <__sread+0x1a>

20011768 <__swrite>:
__swrite():
20011768:	00c5d783          	lhu	a5,12(a1)
2001176c:	1101                	addi	sp,sp,-32
2001176e:	cc22                	sw	s0,24(sp)
20011770:	ca26                	sw	s1,20(sp)
20011772:	c84a                	sw	s2,16(sp)
20011774:	c64e                	sw	s3,12(sp)
20011776:	ce06                	sw	ra,28(sp)
20011778:	1007f793          	andi	a5,a5,256
2001177c:	84aa                	mv	s1,a0
2001177e:	842e                	mv	s0,a1
20011780:	8932                	mv	s2,a2
20011782:	89b6                	mv	s3,a3
20011784:	c791                	beqz	a5,20011790 <__swrite+0x28>
20011786:	00e59583          	lh	a1,14(a1)
2001178a:	4689                	li	a3,2
2001178c:	4601                	li	a2,0
2001178e:	2189                	jal	20011bd0 <_lseek_r>
20011790:	00c45783          	lhu	a5,12(s0)
20011794:	777d                	lui	a4,0xfffff
20011796:	177d                	addi	a4,a4,-1
20011798:	8ff9                	and	a5,a5,a4
2001179a:	00e41583          	lh	a1,14(s0)
2001179e:	00f41623          	sh	a5,12(s0)
200117a2:	4462                	lw	s0,24(sp)
200117a4:	40f2                	lw	ra,28(sp)
200117a6:	86ce                	mv	a3,s3
200117a8:	864a                	mv	a2,s2
200117aa:	49b2                	lw	s3,12(sp)
200117ac:	4942                	lw	s2,16(sp)
200117ae:	8526                	mv	a0,s1
200117b0:	44d2                	lw	s1,20(sp)
200117b2:	6105                	addi	sp,sp,32
200117b4:	a201                	j	200118b4 <_write_r>

200117b6 <__sseek>:
__sseek():
200117b6:	1141                	addi	sp,sp,-16
200117b8:	c422                	sw	s0,8(sp)
200117ba:	842e                	mv	s0,a1
200117bc:	00e59583          	lh	a1,14(a1)
200117c0:	c606                	sw	ra,12(sp)
200117c2:	2139                	jal	20011bd0 <_lseek_r>
200117c4:	57fd                	li	a5,-1
200117c6:	00c45703          	lhu	a4,12(s0)
200117ca:	00f51b63          	bne	a0,a5,200117e0 <__sseek+0x2a>
200117ce:	77fd                	lui	a5,0xfffff
200117d0:	17fd                	addi	a5,a5,-1
200117d2:	8ff9                	and	a5,a5,a4
200117d4:	00f41623          	sh	a5,12(s0)
200117d8:	40b2                	lw	ra,12(sp)
200117da:	4422                	lw	s0,8(sp)
200117dc:	0141                	addi	sp,sp,16
200117de:	8082                	ret
200117e0:	6785                	lui	a5,0x1
200117e2:	8fd9                	or	a5,a5,a4
200117e4:	00f41623          	sh	a5,12(s0)
200117e8:	c868                	sw	a0,84(s0)
200117ea:	b7fd                	j	200117d8 <__sseek+0x22>

200117ec <__sclose>:
__sclose():
200117ec:	00e59583          	lh	a1,14(a1)
200117f0:	a411                	j	200119f4 <_close_r>

200117f2 <__swbuf_r>:
__swbuf_r():
200117f2:	1101                	addi	sp,sp,-32
200117f4:	cc22                	sw	s0,24(sp)
200117f6:	ca26                	sw	s1,20(sp)
200117f8:	c84a                	sw	s2,16(sp)
200117fa:	ce06                	sw	ra,28(sp)
200117fc:	c64e                	sw	s3,12(sp)
200117fe:	84aa                	mv	s1,a0
20011800:	892e                	mv	s2,a1
20011802:	8432                	mv	s0,a2
20011804:	c509                	beqz	a0,2001180e <__swbuf_r+0x1c>
20011806:	4d1c                	lw	a5,24(a0)
20011808:	e399                	bnez	a5,2001180e <__swbuf_r+0x1c>
2001180a:	907ff0ef          	jal	ra,20011110 <__sinit>
2001180e:	fffff797          	auipc	a5,0xfffff
20011812:	b6e78793          	addi	a5,a5,-1170 # 2001037c <__sf_fake_stdin>
20011816:	06f41963          	bne	s0,a5,20011888 <__swbuf_r+0x96>
2001181a:	40c0                	lw	s0,4(s1)
2001181c:	4c1c                	lw	a5,24(s0)
2001181e:	c41c                	sw	a5,8(s0)
20011820:	00c45783          	lhu	a5,12(s0)
20011824:	8ba1                	andi	a5,a5,8
20011826:	c3c9                	beqz	a5,200118a8 <__swbuf_r+0xb6>
20011828:	481c                	lw	a5,16(s0)
2001182a:	cfbd                	beqz	a5,200118a8 <__swbuf_r+0xb6>
2001182c:	481c                	lw	a5,16(s0)
2001182e:	4008                	lw	a0,0(s0)
20011830:	0ff97993          	zext.b	s3,s2
20011834:	0ff97913          	zext.b	s2,s2
20011838:	8d1d                	sub	a0,a0,a5
2001183a:	485c                	lw	a5,20(s0)
2001183c:	00f54663          	blt	a0,a5,20011848 <__swbuf_r+0x56>
20011840:	85a2                	mv	a1,s0
20011842:	8526                	mv	a0,s1
20011844:	261d                	jal	20011b6a <_fflush_r>
20011846:	e52d                	bnez	a0,200118b0 <__swbuf_r+0xbe>
20011848:	441c                	lw	a5,8(s0)
2001184a:	0505                	addi	a0,a0,1
2001184c:	17fd                	addi	a5,a5,-1
2001184e:	c41c                	sw	a5,8(s0)
20011850:	401c                	lw	a5,0(s0)
20011852:	00178713          	addi	a4,a5,1
20011856:	c018                	sw	a4,0(s0)
20011858:	01378023          	sb	s3,0(a5)
2001185c:	485c                	lw	a5,20(s0)
2001185e:	00a78963          	beq	a5,a0,20011870 <__swbuf_r+0x7e>
20011862:	00c45783          	lhu	a5,12(s0)
20011866:	8b85                	andi	a5,a5,1
20011868:	cb81                	beqz	a5,20011878 <__swbuf_r+0x86>
2001186a:	47a9                	li	a5,10
2001186c:	00f91663          	bne	s2,a5,20011878 <__swbuf_r+0x86>
20011870:	85a2                	mv	a1,s0
20011872:	8526                	mv	a0,s1
20011874:	2cdd                	jal	20011b6a <_fflush_r>
20011876:	ed0d                	bnez	a0,200118b0 <__swbuf_r+0xbe>
20011878:	40f2                	lw	ra,28(sp)
2001187a:	4462                	lw	s0,24(sp)
2001187c:	44d2                	lw	s1,20(sp)
2001187e:	49b2                	lw	s3,12(sp)
20011880:	854a                	mv	a0,s2
20011882:	4942                	lw	s2,16(sp)
20011884:	6105                	addi	sp,sp,32
20011886:	8082                	ret
20011888:	fffff797          	auipc	a5,0xfffff
2001188c:	b1478793          	addi	a5,a5,-1260 # 2001039c <__sf_fake_stdout>
20011890:	00f41463          	bne	s0,a5,20011898 <__swbuf_r+0xa6>
20011894:	4480                	lw	s0,8(s1)
20011896:	b759                	j	2001181c <__swbuf_r+0x2a>
20011898:	fffff797          	auipc	a5,0xfffff
2001189c:	ac478793          	addi	a5,a5,-1340 # 2001035c <__sf_fake_stderr>
200118a0:	f6f41ee3          	bne	s0,a5,2001181c <__swbuf_r+0x2a>
200118a4:	44c0                	lw	s0,12(s1)
200118a6:	bf9d                	j	2001181c <__swbuf_r+0x2a>
200118a8:	85a2                	mv	a1,s0
200118aa:	8526                	mv	a0,s1
200118ac:	2835                	jal	200118e8 <__swsetup_r>
200118ae:	dd3d                	beqz	a0,2001182c <__swbuf_r+0x3a>
200118b0:	597d                	li	s2,-1
200118b2:	b7d9                	j	20011878 <__swbuf_r+0x86>

200118b4 <_write_r>:
_write_r():
200118b4:	1141                	addi	sp,sp,-16
200118b6:	c422                	sw	s0,8(sp)
200118b8:	842a                	mv	s0,a0
200118ba:	852e                	mv	a0,a1
200118bc:	85b2                	mv	a1,a2
200118be:	8636                	mv	a2,a3
200118c0:	5ffef797          	auipc	a5,0x5ffef
200118c4:	2007a823          	sw	zero,528(a5) # 80000ad0 <errno>
200118c8:	c606                	sw	ra,12(sp)
200118ca:	237000ef          	jal	ra,20012300 <_write>
200118ce:	57fd                	li	a5,-1
200118d0:	00f51863          	bne	a0,a5,200118e0 <_write_r+0x2c>
200118d4:	5ffef797          	auipc	a5,0x5ffef
200118d8:	1fc7a783          	lw	a5,508(a5) # 80000ad0 <errno>
200118dc:	c391                	beqz	a5,200118e0 <_write_r+0x2c>
200118de:	c01c                	sw	a5,0(s0)
200118e0:	40b2                	lw	ra,12(sp)
200118e2:	4422                	lw	s0,8(sp)
200118e4:	0141                	addi	sp,sp,16
200118e6:	8082                	ret

200118e8 <__swsetup_r>:
__swsetup_r():
200118e8:	1141                	addi	sp,sp,-16
200118ea:	c422                	sw	s0,8(sp)
200118ec:	c226                	sw	s1,4(sp)
200118ee:	c04a                	sw	s2,0(sp)
200118f0:	c606                	sw	ra,12(sp)
200118f2:	5ffef497          	auipc	s1,0x5ffef
200118f6:	1ae4a483          	lw	s1,430(s1) # 80000aa0 <_impure_ptr>
200118fa:	892a                	mv	s2,a0
200118fc:	842e                	mv	s0,a1
200118fe:	c491                	beqz	s1,2001190a <__swsetup_r+0x22>
20011900:	4c9c                	lw	a5,24(s1)
20011902:	e781                	bnez	a5,2001190a <__swsetup_r+0x22>
20011904:	8526                	mv	a0,s1
20011906:	80bff0ef          	jal	ra,20011110 <__sinit>
2001190a:	fffff797          	auipc	a5,0xfffff
2001190e:	a7278793          	addi	a5,a5,-1422 # 2001037c <__sf_fake_stdin>
20011912:	02f41763          	bne	s0,a5,20011940 <__swsetup_r+0x58>
20011916:	40c0                	lw	s0,4(s1)
20011918:	00c41783          	lh	a5,12(s0)
2001191c:	01079713          	slli	a4,a5,0x10
20011920:	0087f693          	andi	a3,a5,8
20011924:	8341                	srli	a4,a4,0x10
20011926:	eaad                	bnez	a3,20011998 <__swsetup_r+0xb0>
20011928:	01077693          	andi	a3,a4,16
2001192c:	ea95                	bnez	a3,20011960 <__swsetup_r+0x78>
2001192e:	4725                	li	a4,9
20011930:	00e92023          	sw	a4,0(s2)
20011934:	0407e793          	ori	a5,a5,64
20011938:	00f41623          	sh	a5,12(s0)
2001193c:	557d                	li	a0,-1
2001193e:	a871                	j	200119da <__swsetup_r+0xf2>
20011940:	fffff797          	auipc	a5,0xfffff
20011944:	a5c78793          	addi	a5,a5,-1444 # 2001039c <__sf_fake_stdout>
20011948:	00f41463          	bne	s0,a5,20011950 <__swsetup_r+0x68>
2001194c:	4480                	lw	s0,8(s1)
2001194e:	b7e9                	j	20011918 <__swsetup_r+0x30>
20011950:	fffff797          	auipc	a5,0xfffff
20011954:	a0c78793          	addi	a5,a5,-1524 # 2001035c <__sf_fake_stderr>
20011958:	fcf410e3          	bne	s0,a5,20011918 <__swsetup_r+0x30>
2001195c:	44c0                	lw	s0,12(s1)
2001195e:	bf6d                	j	20011918 <__swsetup_r+0x30>
20011960:	8b11                	andi	a4,a4,4
20011962:	c70d                	beqz	a4,2001198c <__swsetup_r+0xa4>
20011964:	584c                	lw	a1,52(s0)
20011966:	c989                	beqz	a1,20011978 <__swsetup_r+0x90>
20011968:	04440793          	addi	a5,s0,68
2001196c:	00f58463          	beq	a1,a5,20011974 <__swsetup_r+0x8c>
20011970:	854a                	mv	a0,s2
20011972:	265d                	jal	20011d18 <_free_r>
20011974:	02042a23          	sw	zero,52(s0)
20011978:	00c45783          	lhu	a5,12(s0)
2001197c:	00042223          	sw	zero,4(s0)
20011980:	fdb7f793          	andi	a5,a5,-37
20011984:	00f41623          	sh	a5,12(s0)
20011988:	481c                	lw	a5,16(s0)
2001198a:	c01c                	sw	a5,0(s0)
2001198c:	00c45783          	lhu	a5,12(s0)
20011990:	0087e793          	ori	a5,a5,8
20011994:	00f41623          	sh	a5,12(s0)
20011998:	481c                	lw	a5,16(s0)
2001199a:	ef81                	bnez	a5,200119b2 <__swsetup_r+0xca>
2001199c:	00c45783          	lhu	a5,12(s0)
200119a0:	20000713          	li	a4,512
200119a4:	2807f793          	andi	a5,a5,640
200119a8:	00e78563          	beq	a5,a4,200119b2 <__swsetup_r+0xca>
200119ac:	85a2                	mv	a1,s0
200119ae:	854a                	mv	a0,s2
200119b0:	2475                	jal	20011c5c <__smakebuf_r>
200119b2:	00c41783          	lh	a5,12(s0)
200119b6:	01079713          	slli	a4,a5,0x10
200119ba:	0017f693          	andi	a3,a5,1
200119be:	8341                	srli	a4,a4,0x10
200119c0:	c29d                	beqz	a3,200119e6 <__swsetup_r+0xfe>
200119c2:	4854                	lw	a3,20(s0)
200119c4:	00042423          	sw	zero,8(s0)
200119c8:	40d006b3          	neg	a3,a3
200119cc:	cc14                	sw	a3,24(s0)
200119ce:	4814                	lw	a3,16(s0)
200119d0:	4501                	li	a0,0
200119d2:	e681                	bnez	a3,200119da <__swsetup_r+0xf2>
200119d4:	08077713          	andi	a4,a4,128
200119d8:	ff31                	bnez	a4,20011934 <__swsetup_r+0x4c>
200119da:	40b2                	lw	ra,12(sp)
200119dc:	4422                	lw	s0,8(sp)
200119de:	4492                	lw	s1,4(sp)
200119e0:	4902                	lw	s2,0(sp)
200119e2:	0141                	addi	sp,sp,16
200119e4:	8082                	ret
200119e6:	00277693          	andi	a3,a4,2
200119ea:	4601                	li	a2,0
200119ec:	e291                	bnez	a3,200119f0 <__swsetup_r+0x108>
200119ee:	4850                	lw	a2,20(s0)
200119f0:	c410                	sw	a2,8(s0)
200119f2:	bff1                	j	200119ce <__swsetup_r+0xe6>

200119f4 <_close_r>:
_close_r():
200119f4:	1141                	addi	sp,sp,-16
200119f6:	c422                	sw	s0,8(sp)
200119f8:	842a                	mv	s0,a0
200119fa:	852e                	mv	a0,a1
200119fc:	5ffef797          	auipc	a5,0x5ffef
20011a00:	0c07aa23          	sw	zero,212(a5) # 80000ad0 <errno>
20011a04:	c606                	sw	ra,12(sp)
20011a06:	7c0000ef          	jal	ra,200121c6 <_close>
20011a0a:	57fd                	li	a5,-1
20011a0c:	00f51863          	bne	a0,a5,20011a1c <_close_r+0x28>
20011a10:	5ffef797          	auipc	a5,0x5ffef
20011a14:	0c07a783          	lw	a5,192(a5) # 80000ad0 <errno>
20011a18:	c391                	beqz	a5,20011a1c <_close_r+0x28>
20011a1a:	c01c                	sw	a5,0(s0)
20011a1c:	40b2                	lw	ra,12(sp)
20011a1e:	4422                	lw	s0,8(sp)
20011a20:	0141                	addi	sp,sp,16
20011a22:	8082                	ret

20011a24 <__sflush_r>:
__sflush_r():
20011a24:	00c5d783          	lhu	a5,12(a1)
20011a28:	1101                	addi	sp,sp,-32
20011a2a:	cc22                	sw	s0,24(sp)
20011a2c:	ca26                	sw	s1,20(sp)
20011a2e:	ce06                	sw	ra,28(sp)
20011a30:	c84a                	sw	s2,16(sp)
20011a32:	c64e                	sw	s3,12(sp)
20011a34:	0087f713          	andi	a4,a5,8
20011a38:	84aa                	mv	s1,a0
20011a3a:	842e                	mv	s0,a1
20011a3c:	e375                	bnez	a4,20011b20 <__sflush_r+0xfc>
20011a3e:	41d8                	lw	a4,4(a1)
20011a40:	00e04763          	bgtz	a4,20011a4e <__sflush_r+0x2a>
20011a44:	41b8                	lw	a4,64(a1)
20011a46:	00e04463          	bgtz	a4,20011a4e <__sflush_r+0x2a>
20011a4a:	4501                	li	a0,0
20011a4c:	a875                	j	20011b08 <__sflush_r+0xe4>
20011a4e:	5458                	lw	a4,44(s0)
20011a50:	df6d                	beqz	a4,20011a4a <__sflush_r+0x26>
20011a52:	6685                	lui	a3,0x1
20011a54:	0004a903          	lw	s2,0(s1)
20011a58:	8ff5                	and	a5,a5,a3
20011a5a:	0004a023          	sw	zero,0(s1)
20011a5e:	cfa5                	beqz	a5,20011ad6 <__sflush_r+0xb2>
20011a60:	4868                	lw	a0,84(s0)
20011a62:	00c45783          	lhu	a5,12(s0)
20011a66:	8b91                	andi	a5,a5,4
20011a68:	c799                	beqz	a5,20011a76 <__sflush_r+0x52>
20011a6a:	405c                	lw	a5,4(s0)
20011a6c:	8d1d                	sub	a0,a0,a5
20011a6e:	585c                	lw	a5,52(s0)
20011a70:	c399                	beqz	a5,20011a76 <__sflush_r+0x52>
20011a72:	403c                	lw	a5,64(s0)
20011a74:	8d1d                	sub	a0,a0,a5
20011a76:	545c                	lw	a5,44(s0)
20011a78:	500c                	lw	a1,32(s0)
20011a7a:	862a                	mv	a2,a0
20011a7c:	4681                	li	a3,0
20011a7e:	8526                	mv	a0,s1
20011a80:	9782                	jalr	a5
20011a82:	57fd                	li	a5,-1
20011a84:	00c45703          	lhu	a4,12(s0)
20011a88:	00f51d63          	bne	a0,a5,20011aa2 <__sflush_r+0x7e>
20011a8c:	4094                	lw	a3,0(s1)
20011a8e:	47f5                	li	a5,29
20011a90:	08d7e363          	bltu	a5,a3,20011b16 <__sflush_r+0xf2>
20011a94:	204007b7          	lui	a5,0x20400
20011a98:	0785                	addi	a5,a5,1
20011a9a:	00d7d7b3          	srl	a5,a5,a3
20011a9e:	8b85                	andi	a5,a5,1
20011aa0:	cbbd                	beqz	a5,20011b16 <__sflush_r+0xf2>
20011aa2:	481c                	lw	a5,16(s0)
20011aa4:	00042223          	sw	zero,4(s0)
20011aa8:	c01c                	sw	a5,0(s0)
20011aaa:	6785                	lui	a5,0x1
20011aac:	8f7d                	and	a4,a4,a5
20011aae:	c719                	beqz	a4,20011abc <__sflush_r+0x98>
20011ab0:	57fd                	li	a5,-1
20011ab2:	00f51463          	bne	a0,a5,20011aba <__sflush_r+0x96>
20011ab6:	409c                	lw	a5,0(s1)
20011ab8:	e391                	bnez	a5,20011abc <__sflush_r+0x98>
20011aba:	c868                	sw	a0,84(s0)
20011abc:	584c                	lw	a1,52(s0)
20011abe:	0124a023          	sw	s2,0(s1)
20011ac2:	d5c1                	beqz	a1,20011a4a <__sflush_r+0x26>
20011ac4:	04440793          	addi	a5,s0,68
20011ac8:	00f58463          	beq	a1,a5,20011ad0 <__sflush_r+0xac>
20011acc:	8526                	mv	a0,s1
20011ace:	24a9                	jal	20011d18 <_free_r>
20011ad0:	02042a23          	sw	zero,52(s0)
20011ad4:	bf9d                	j	20011a4a <__sflush_r+0x26>
20011ad6:	500c                	lw	a1,32(s0)
20011ad8:	4685                	li	a3,1
20011ada:	4601                	li	a2,0
20011adc:	8526                	mv	a0,s1
20011ade:	9702                	jalr	a4
20011ae0:	57fd                	li	a5,-1
20011ae2:	f8f510e3          	bne	a0,a5,20011a62 <__sflush_r+0x3e>
20011ae6:	409c                	lw	a5,0(s1)
20011ae8:	dfad                	beqz	a5,20011a62 <__sflush_r+0x3e>
20011aea:	4775                	li	a4,29
20011aec:	00e78563          	beq	a5,a4,20011af6 <__sflush_r+0xd2>
20011af0:	4759                	li	a4,22
20011af2:	00e79563          	bne	a5,a4,20011afc <__sflush_r+0xd8>
20011af6:	0124a023          	sw	s2,0(s1)
20011afa:	bf81                	j	20011a4a <__sflush_r+0x26>
20011afc:	00c45783          	lhu	a5,12(s0)
20011b00:	0407e793          	ori	a5,a5,64
20011b04:	00f41623          	sh	a5,12(s0)
20011b08:	40f2                	lw	ra,28(sp)
20011b0a:	4462                	lw	s0,24(sp)
20011b0c:	44d2                	lw	s1,20(sp)
20011b0e:	4942                	lw	s2,16(sp)
20011b10:	49b2                	lw	s3,12(sp)
20011b12:	6105                	addi	sp,sp,32
20011b14:	8082                	ret
20011b16:	04076713          	ori	a4,a4,64
20011b1a:	00e41623          	sh	a4,12(s0)
20011b1e:	b7ed                	j	20011b08 <__sflush_r+0xe4>
20011b20:	0105a983          	lw	s3,16(a1)
20011b24:	f20983e3          	beqz	s3,20011a4a <__sflush_r+0x26>
20011b28:	0005a903          	lw	s2,0(a1)
20011b2c:	8b8d                	andi	a5,a5,3
20011b2e:	0135a023          	sw	s3,0(a1)
20011b32:	41390933          	sub	s2,s2,s3
20011b36:	4701                	li	a4,0
20011b38:	e391                	bnez	a5,20011b3c <__sflush_r+0x118>
20011b3a:	49d8                	lw	a4,20(a1)
20011b3c:	c418                	sw	a4,8(s0)
20011b3e:	f12056e3          	blez	s2,20011a4a <__sflush_r+0x26>
20011b42:	541c                	lw	a5,40(s0)
20011b44:	500c                	lw	a1,32(s0)
20011b46:	86ca                	mv	a3,s2
20011b48:	864e                	mv	a2,s3
20011b4a:	8526                	mv	a0,s1
20011b4c:	9782                	jalr	a5
20011b4e:	00a04a63          	bgtz	a0,20011b62 <__sflush_r+0x13e>
20011b52:	00c45783          	lhu	a5,12(s0)
20011b56:	557d                	li	a0,-1
20011b58:	0407e793          	ori	a5,a5,64
20011b5c:	00f41623          	sh	a5,12(s0)
20011b60:	b765                	j	20011b08 <__sflush_r+0xe4>
20011b62:	99aa                	add	s3,s3,a0
20011b64:	40a90933          	sub	s2,s2,a0
20011b68:	bfd9                	j	20011b3e <__sflush_r+0x11a>

20011b6a <_fflush_r>:
_fflush_r():
20011b6a:	499c                	lw	a5,16(a1)
20011b6c:	c3a5                	beqz	a5,20011bcc <_fflush_r+0x62>
20011b6e:	1101                	addi	sp,sp,-32
20011b70:	cc22                	sw	s0,24(sp)
20011b72:	ce06                	sw	ra,28(sp)
20011b74:	842a                	mv	s0,a0
20011b76:	c519                	beqz	a0,20011b84 <_fflush_r+0x1a>
20011b78:	4d1c                	lw	a5,24(a0)
20011b7a:	e789                	bnez	a5,20011b84 <_fflush_r+0x1a>
20011b7c:	c62e                	sw	a1,12(sp)
20011b7e:	d92ff0ef          	jal	ra,20011110 <__sinit>
20011b82:	45b2                	lw	a1,12(sp)
20011b84:	ffffe797          	auipc	a5,0xffffe
20011b88:	7f878793          	addi	a5,a5,2040 # 2001037c <__sf_fake_stdin>
20011b8c:	00f59b63          	bne	a1,a5,20011ba2 <_fflush_r+0x38>
20011b90:	404c                	lw	a1,4(s0)
20011b92:	00c59783          	lh	a5,12(a1)
20011b96:	c795                	beqz	a5,20011bc2 <_fflush_r+0x58>
20011b98:	8522                	mv	a0,s0
20011b9a:	4462                	lw	s0,24(sp)
20011b9c:	40f2                	lw	ra,28(sp)
20011b9e:	6105                	addi	sp,sp,32
20011ba0:	b551                	j	20011a24 <__sflush_r>
20011ba2:	ffffe797          	auipc	a5,0xffffe
20011ba6:	7fa78793          	addi	a5,a5,2042 # 2001039c <__sf_fake_stdout>
20011baa:	00f59463          	bne	a1,a5,20011bb2 <_fflush_r+0x48>
20011bae:	440c                	lw	a1,8(s0)
20011bb0:	b7cd                	j	20011b92 <_fflush_r+0x28>
20011bb2:	ffffe797          	auipc	a5,0xffffe
20011bb6:	7aa78793          	addi	a5,a5,1962 # 2001035c <__sf_fake_stderr>
20011bba:	fcf59ce3          	bne	a1,a5,20011b92 <_fflush_r+0x28>
20011bbe:	444c                	lw	a1,12(s0)
20011bc0:	bfc9                	j	20011b92 <_fflush_r+0x28>
20011bc2:	40f2                	lw	ra,28(sp)
20011bc4:	4462                	lw	s0,24(sp)
20011bc6:	4501                	li	a0,0
20011bc8:	6105                	addi	sp,sp,32
20011bca:	8082                	ret
20011bcc:	4501                	li	a0,0
20011bce:	8082                	ret

20011bd0 <_lseek_r>:
_lseek_r():
20011bd0:	1141                	addi	sp,sp,-16
20011bd2:	c422                	sw	s0,8(sp)
20011bd4:	842a                	mv	s0,a0
20011bd6:	852e                	mv	a0,a1
20011bd8:	85b2                	mv	a1,a2
20011bda:	8636                	mv	a2,a3
20011bdc:	5ffef797          	auipc	a5,0x5ffef
20011be0:	ee07aa23          	sw	zero,-268(a5) # 80000ad0 <errno>
20011be4:	c606                	sw	ra,12(sp)
20011be6:	25a1                	jal	2001222e <_lseek>
20011be8:	57fd                	li	a5,-1
20011bea:	00f51863          	bne	a0,a5,20011bfa <_lseek_r+0x2a>
20011bee:	5ffef797          	auipc	a5,0x5ffef
20011bf2:	ee27a783          	lw	a5,-286(a5) # 80000ad0 <errno>
20011bf6:	c391                	beqz	a5,20011bfa <_lseek_r+0x2a>
20011bf8:	c01c                	sw	a5,0(s0)
20011bfa:	40b2                	lw	ra,12(sp)
20011bfc:	4422                	lw	s0,8(sp)
20011bfe:	0141                	addi	sp,sp,16
20011c00:	8082                	ret

20011c02 <__swhatbuf_r>:
__swhatbuf_r():
20011c02:	7159                	addi	sp,sp,-112
20011c04:	d0ca                	sw	s2,96(sp)
20011c06:	892e                	mv	s2,a1
20011c08:	00e59583          	lh	a1,14(a1)
20011c0c:	d4a2                	sw	s0,104(sp)
20011c0e:	d2a6                	sw	s1,100(sp)
20011c10:	d686                	sw	ra,108(sp)
20011c12:	8432                	mv	s0,a2
20011c14:	84b6                	mv	s1,a3
20011c16:	0005dc63          	bgez	a1,20011c2e <__swhatbuf_r+0x2c>
20011c1a:	00c91783          	lh	a5,12(s2)
20011c1e:	0004a023          	sw	zero,0(s1)
20011c22:	0807f793          	andi	a5,a5,128
20011c26:	e38d                	bnez	a5,20011c48 <__swhatbuf_r+0x46>
20011c28:	40000793          	li	a5,1024
20011c2c:	a005                	j	20011c4c <__swhatbuf_r+0x4a>
20011c2e:	0030                	addi	a2,sp,8
20011c30:	2b25                	jal	20012168 <_fstat_r>
20011c32:	fe0544e3          	bltz	a0,20011c1a <__swhatbuf_r+0x18>
20011c36:	4732                	lw	a4,12(sp)
20011c38:	67bd                	lui	a5,0xf
20011c3a:	8ff9                	and	a5,a5,a4
20011c3c:	7779                	lui	a4,0xffffe
20011c3e:	97ba                	add	a5,a5,a4
20011c40:	0017b793          	seqz	a5,a5
20011c44:	c09c                	sw	a5,0(s1)
20011c46:	b7cd                	j	20011c28 <__swhatbuf_r+0x26>
20011c48:	04000793          	li	a5,64
20011c4c:	50b6                	lw	ra,108(sp)
20011c4e:	c01c                	sw	a5,0(s0)
20011c50:	5426                	lw	s0,104(sp)
20011c52:	5496                	lw	s1,100(sp)
20011c54:	5906                	lw	s2,96(sp)
20011c56:	4501                	li	a0,0
20011c58:	6165                	addi	sp,sp,112
20011c5a:	8082                	ret

20011c5c <__smakebuf_r>:
__smakebuf_r():
20011c5c:	00c5d783          	lhu	a5,12(a1)
20011c60:	1101                	addi	sp,sp,-32
20011c62:	cc22                	sw	s0,24(sp)
20011c64:	ce06                	sw	ra,28(sp)
20011c66:	ca26                	sw	s1,20(sp)
20011c68:	c84a                	sw	s2,16(sp)
20011c6a:	8b89                	andi	a5,a5,2
20011c6c:	842e                	mv	s0,a1
20011c6e:	cf89                	beqz	a5,20011c88 <__smakebuf_r+0x2c>
20011c70:	04740793          	addi	a5,s0,71
20011c74:	c01c                	sw	a5,0(s0)
20011c76:	c81c                	sw	a5,16(s0)
20011c78:	4785                	li	a5,1
20011c7a:	c85c                	sw	a5,20(s0)
20011c7c:	40f2                	lw	ra,28(sp)
20011c7e:	4462                	lw	s0,24(sp)
20011c80:	44d2                	lw	s1,20(sp)
20011c82:	4942                	lw	s2,16(sp)
20011c84:	6105                	addi	sp,sp,32
20011c86:	8082                	ret
20011c88:	0074                	addi	a3,sp,12
20011c8a:	0030                	addi	a2,sp,8
20011c8c:	892a                	mv	s2,a0
20011c8e:	3f95                	jal	20011c02 <__swhatbuf_r>
20011c90:	45a2                	lw	a1,8(sp)
20011c92:	84aa                	mv	s1,a0
20011c94:	854a                	mv	a0,s2
20011c96:	e92ff0ef          	jal	ra,20011328 <_malloc_r>
20011c9a:	ed01                	bnez	a0,20011cb2 <__smakebuf_r+0x56>
20011c9c:	00c41783          	lh	a5,12(s0)
20011ca0:	2007f713          	andi	a4,a5,512
20011ca4:	ff61                	bnez	a4,20011c7c <__smakebuf_r+0x20>
20011ca6:	9bf1                	andi	a5,a5,-4
20011ca8:	0027e793          	ori	a5,a5,2
20011cac:	00f41623          	sh	a5,12(s0)
20011cb0:	b7c1                	j	20011c70 <__smakebuf_r+0x14>
20011cb2:	fffff797          	auipc	a5,0xfffff
20011cb6:	41078793          	addi	a5,a5,1040 # 200110c2 <_cleanup_r>
20011cba:	02f92423          	sw	a5,40(s2)
20011cbe:	00c45783          	lhu	a5,12(s0)
20011cc2:	c008                	sw	a0,0(s0)
20011cc4:	c808                	sw	a0,16(s0)
20011cc6:	0807e793          	ori	a5,a5,128
20011cca:	00f41623          	sh	a5,12(s0)
20011cce:	47a2                	lw	a5,8(sp)
20011cd0:	c85c                	sw	a5,20(s0)
20011cd2:	47b2                	lw	a5,12(sp)
20011cd4:	cf89                	beqz	a5,20011cee <__smakebuf_r+0x92>
20011cd6:	00e41583          	lh	a1,14(s0)
20011cda:	854a                	mv	a0,s2
20011cdc:	2975                	jal	20012198 <_isatty_r>
20011cde:	c901                	beqz	a0,20011cee <__smakebuf_r+0x92>
20011ce0:	00c45783          	lhu	a5,12(s0)
20011ce4:	9bf1                	andi	a5,a5,-4
20011ce6:	0017e793          	ori	a5,a5,1
20011cea:	00f41623          	sh	a5,12(s0)
20011cee:	00c45503          	lhu	a0,12(s0)
20011cf2:	8cc9                	or	s1,s1,a0
20011cf4:	00941623          	sh	s1,12(s0)
20011cf8:	b751                	j	20011c7c <__smakebuf_r+0x20>

20011cfa <memchr>:
memchr():
20011cfa:	0ff5f593          	zext.b	a1,a1
20011cfe:	962a                	add	a2,a2,a0
20011d00:	00c51463          	bne	a0,a2,20011d08 <memchr+0xe>
20011d04:	4501                	li	a0,0
20011d06:	8082                	ret
20011d08:	00054783          	lbu	a5,0(a0)
20011d0c:	feb78de3          	beq	a5,a1,20011d06 <memchr+0xc>
20011d10:	0505                	addi	a0,a0,1
20011d12:	b7fd                	j	20011d00 <memchr+0x6>

20011d14 <__malloc_lock>:
__malloc_lock():
20011d14:	8082                	ret

20011d16 <__malloc_unlock>:
__malloc_unlock():
20011d16:	8082                	ret

20011d18 <_free_r>:
_free_r():
20011d18:	c1c5                	beqz	a1,20011db8 <_free_r+0xa0>
20011d1a:	ffc5a783          	lw	a5,-4(a1)
20011d1e:	1101                	addi	sp,sp,-32
20011d20:	cc22                	sw	s0,24(sp)
20011d22:	ce06                	sw	ra,28(sp)
20011d24:	ffc58413          	addi	s0,a1,-4
20011d28:	0007d363          	bgez	a5,20011d2e <_free_r+0x16>
20011d2c:	943e                	add	s0,s0,a5
20011d2e:	c62a                	sw	a0,12(sp)
20011d30:	37d5                	jal	20011d14 <__malloc_lock>
20011d32:	5ffef717          	auipc	a4,0x5ffef
20011d36:	d9670713          	addi	a4,a4,-618 # 80000ac8 <__malloc_free_list>
20011d3a:	431c                	lw	a5,0(a4)
20011d3c:	4532                	lw	a0,12(sp)
20011d3e:	eb81                	bnez	a5,20011d4e <_free_r+0x36>
20011d40:	00042223          	sw	zero,4(s0)
20011d44:	c300                	sw	s0,0(a4)
20011d46:	4462                	lw	s0,24(sp)
20011d48:	40f2                	lw	ra,28(sp)
20011d4a:	6105                	addi	sp,sp,32
20011d4c:	b7e9                	j	20011d16 <__malloc_unlock>
20011d4e:	00f47d63          	bgeu	s0,a5,20011d68 <_free_r+0x50>
20011d52:	4010                	lw	a2,0(s0)
20011d54:	00c406b3          	add	a3,s0,a2
20011d58:	00d79663          	bne	a5,a3,20011d64 <_free_r+0x4c>
20011d5c:	4394                	lw	a3,0(a5)
20011d5e:	43dc                	lw	a5,4(a5)
20011d60:	96b2                	add	a3,a3,a2
20011d62:	c014                	sw	a3,0(s0)
20011d64:	c05c                	sw	a5,4(s0)
20011d66:	bff9                	j	20011d44 <_free_r+0x2c>
20011d68:	873e                	mv	a4,a5
20011d6a:	43dc                	lw	a5,4(a5)
20011d6c:	c399                	beqz	a5,20011d72 <_free_r+0x5a>
20011d6e:	fef47de3          	bgeu	s0,a5,20011d68 <_free_r+0x50>
20011d72:	4314                	lw	a3,0(a4)
20011d74:	00d70633          	add	a2,a4,a3
20011d78:	00861f63          	bne	a2,s0,20011d96 <_free_r+0x7e>
20011d7c:	4010                	lw	a2,0(s0)
20011d7e:	96b2                	add	a3,a3,a2
20011d80:	c314                	sw	a3,0(a4)
20011d82:	00d70633          	add	a2,a4,a3
20011d86:	fcc790e3          	bne	a5,a2,20011d46 <_free_r+0x2e>
20011d8a:	4390                	lw	a2,0(a5)
20011d8c:	43dc                	lw	a5,4(a5)
20011d8e:	96b2                	add	a3,a3,a2
20011d90:	c314                	sw	a3,0(a4)
20011d92:	c35c                	sw	a5,4(a4)
20011d94:	bf4d                	j	20011d46 <_free_r+0x2e>
20011d96:	00c47563          	bgeu	s0,a2,20011da0 <_free_r+0x88>
20011d9a:	47b1                	li	a5,12
20011d9c:	c11c                	sw	a5,0(a0)
20011d9e:	b765                	j	20011d46 <_free_r+0x2e>
20011da0:	4010                	lw	a2,0(s0)
20011da2:	00c406b3          	add	a3,s0,a2
20011da6:	00d79663          	bne	a5,a3,20011db2 <_free_r+0x9a>
20011daa:	4394                	lw	a3,0(a5)
20011dac:	43dc                	lw	a5,4(a5)
20011dae:	96b2                	add	a3,a3,a2
20011db0:	c014                	sw	a3,0(s0)
20011db2:	c05c                	sw	a5,4(s0)
20011db4:	c340                	sw	s0,4(a4)
20011db6:	bf41                	j	20011d46 <_free_r+0x2e>
20011db8:	8082                	ret

20011dba <_printf_common>:
_printf_common():
20011dba:	7179                	addi	sp,sp,-48
20011dbc:	cc52                	sw	s4,24(sp)
20011dbe:	499c                	lw	a5,16(a1)
20011dc0:	8a3a                	mv	s4,a4
20011dc2:	4598                	lw	a4,8(a1)
20011dc4:	d422                	sw	s0,40(sp)
20011dc6:	d226                	sw	s1,36(sp)
20011dc8:	ce4e                	sw	s3,28(sp)
20011dca:	ca56                	sw	s5,20(sp)
20011dcc:	d606                	sw	ra,44(sp)
20011dce:	d04a                	sw	s2,32(sp)
20011dd0:	c85a                	sw	s6,16(sp)
20011dd2:	c65e                	sw	s7,12(sp)
20011dd4:	89aa                	mv	s3,a0
20011dd6:	842e                	mv	s0,a1
20011dd8:	84b2                	mv	s1,a2
20011dda:	8ab6                	mv	s5,a3
20011ddc:	00e7d363          	bge	a5,a4,20011de2 <_printf_common+0x28>
20011de0:	87ba                	mv	a5,a4
20011de2:	c09c                	sw	a5,0(s1)
20011de4:	04344703          	lbu	a4,67(s0)
20011de8:	c319                	beqz	a4,20011dee <_printf_common+0x34>
20011dea:	0785                	addi	a5,a5,1
20011dec:	c09c                	sw	a5,0(s1)
20011dee:	401c                	lw	a5,0(s0)
20011df0:	0207f793          	andi	a5,a5,32
20011df4:	c781                	beqz	a5,20011dfc <_printf_common+0x42>
20011df6:	409c                	lw	a5,0(s1)
20011df8:	0789                	addi	a5,a5,2
20011dfa:	c09c                	sw	a5,0(s1)
20011dfc:	00042903          	lw	s2,0(s0)
20011e00:	00697913          	andi	s2,s2,6
20011e04:	00091a63          	bnez	s2,20011e18 <_printf_common+0x5e>
20011e08:	01940b13          	addi	s6,s0,25
20011e0c:	5bfd                	li	s7,-1
20011e0e:	445c                	lw	a5,12(s0)
20011e10:	4098                	lw	a4,0(s1)
20011e12:	8f99                	sub	a5,a5,a4
20011e14:	04f94c63          	blt	s2,a5,20011e6c <_printf_common+0xb2>
20011e18:	04344783          	lbu	a5,67(s0)
20011e1c:	00f036b3          	snez	a3,a5
20011e20:	401c                	lw	a5,0(s0)
20011e22:	0207f793          	andi	a5,a5,32
20011e26:	eba5                	bnez	a5,20011e96 <_printf_common+0xdc>
20011e28:	04340613          	addi	a2,s0,67
20011e2c:	85d6                	mv	a1,s5
20011e2e:	854e                	mv	a0,s3
20011e30:	9a02                	jalr	s4
20011e32:	57fd                	li	a5,-1
20011e34:	04f50363          	beq	a0,a5,20011e7a <_printf_common+0xc0>
20011e38:	401c                	lw	a5,0(s0)
20011e3a:	4611                	li	a2,4
20011e3c:	4098                	lw	a4,0(s1)
20011e3e:	8b99                	andi	a5,a5,6
20011e40:	4454                	lw	a3,12(s0)
20011e42:	4481                	li	s1,0
20011e44:	00c79763          	bne	a5,a2,20011e52 <_printf_common+0x98>
20011e48:	40e684b3          	sub	s1,a3,a4
20011e4c:	0004d363          	bgez	s1,20011e52 <_printf_common+0x98>
20011e50:	4481                	li	s1,0
20011e52:	441c                	lw	a5,8(s0)
20011e54:	4818                	lw	a4,16(s0)
20011e56:	00f75463          	bge	a4,a5,20011e5e <_printf_common+0xa4>
20011e5a:	8f99                	sub	a5,a5,a4
20011e5c:	94be                	add	s1,s1,a5
20011e5e:	4901                	li	s2,0
20011e60:	0469                	addi	s0,s0,26
20011e62:	5b7d                	li	s6,-1
20011e64:	05249863          	bne	s1,s2,20011eb4 <_printf_common+0xfa>
20011e68:	4501                	li	a0,0
20011e6a:	a809                	j	20011e7c <_printf_common+0xc2>
20011e6c:	4685                	li	a3,1
20011e6e:	865a                	mv	a2,s6
20011e70:	85d6                	mv	a1,s5
20011e72:	854e                	mv	a0,s3
20011e74:	9a02                	jalr	s4
20011e76:	01751e63          	bne	a0,s7,20011e92 <_printf_common+0xd8>
20011e7a:	557d                	li	a0,-1
20011e7c:	50b2                	lw	ra,44(sp)
20011e7e:	5422                	lw	s0,40(sp)
20011e80:	5492                	lw	s1,36(sp)
20011e82:	5902                	lw	s2,32(sp)
20011e84:	49f2                	lw	s3,28(sp)
20011e86:	4a62                	lw	s4,24(sp)
20011e88:	4ad2                	lw	s5,20(sp)
20011e8a:	4b42                	lw	s6,16(sp)
20011e8c:	4bb2                	lw	s7,12(sp)
20011e8e:	6145                	addi	sp,sp,48
20011e90:	8082                	ret
20011e92:	0905                	addi	s2,s2,1
20011e94:	bfad                	j	20011e0e <_printf_common+0x54>
20011e96:	00d40733          	add	a4,s0,a3
20011e9a:	03000613          	li	a2,48
20011e9e:	04c701a3          	sb	a2,67(a4)
20011ea2:	04544703          	lbu	a4,69(s0)
20011ea6:	00168793          	addi	a5,a3,1 # 1001 <__heap_size+0x801>
20011eaa:	97a2                	add	a5,a5,s0
20011eac:	0689                	addi	a3,a3,2
20011eae:	04e781a3          	sb	a4,67(a5)
20011eb2:	bf9d                	j	20011e28 <_printf_common+0x6e>
20011eb4:	4685                	li	a3,1
20011eb6:	8622                	mv	a2,s0
20011eb8:	85d6                	mv	a1,s5
20011eba:	854e                	mv	a0,s3
20011ebc:	9a02                	jalr	s4
20011ebe:	fb650ee3          	beq	a0,s6,20011e7a <_printf_common+0xc0>
20011ec2:	0905                	addi	s2,s2,1
20011ec4:	b745                	j	20011e64 <_printf_common+0xaa>

20011ec6 <_printf_i>:
_printf_i():
20011ec6:	7179                	addi	sp,sp,-48
20011ec8:	d422                	sw	s0,40(sp)
20011eca:	d226                	sw	s1,36(sp)
20011ecc:	d04a                	sw	s2,32(sp)
20011ece:	ce4e                	sw	s3,28(sp)
20011ed0:	d606                	sw	ra,44(sp)
20011ed2:	cc52                	sw	s4,24(sp)
20011ed4:	ca56                	sw	s5,20(sp)
20011ed6:	c85a                	sw	s6,16(sp)
20011ed8:	0185c803          	lbu	a6,24(a1)
20011edc:	07800793          	li	a5,120
20011ee0:	84aa                	mv	s1,a0
20011ee2:	842e                	mv	s0,a1
20011ee4:	8932                	mv	s2,a2
20011ee6:	89b6                	mv	s3,a3
20011ee8:	0107ee63          	bltu	a5,a6,20011f04 <_printf_i+0x3e>
20011eec:	06200793          	li	a5,98
20011ef0:	04358693          	addi	a3,a1,67
20011ef4:	0107ed63          	bltu	a5,a6,20011f0e <_printf_i+0x48>
20011ef8:	1c080563          	beqz	a6,200120c2 <_printf_i+0x1fc>
20011efc:	05800793          	li	a5,88
20011f00:	12f80a63          	beq	a6,a5,20012034 <_printf_i+0x16e>
20011f04:	04240a93          	addi	s5,s0,66
20011f08:	05040123          	sb	a6,66(s0)
20011f0c:	a815                	j	20011f40 <_printf_i+0x7a>
20011f0e:	f9d80793          	addi	a5,a6,-99
20011f12:	0ff7f793          	zext.b	a5,a5
20011f16:	4655                	li	a2,21
20011f18:	fef666e3          	bltu	a2,a5,20011f04 <_printf_i+0x3e>
20011f1c:	ffffe617          	auipc	a2,0xffffe
20011f20:	4dc60613          	addi	a2,a2,1244 # 200103f8 <__sf_fake_stdout+0x5c>
20011f24:	078a                	slli	a5,a5,0x2
20011f26:	97b2                	add	a5,a5,a2
20011f28:	439c                	lw	a5,0(a5)
20011f2a:	97b2                	add	a5,a5,a2
20011f2c:	8782                	jr	a5
20011f2e:	431c                	lw	a5,0(a4)
20011f30:	04258a93          	addi	s5,a1,66
20011f34:	00478693          	addi	a3,a5,4
20011f38:	439c                	lw	a5,0(a5)
20011f3a:	c314                	sw	a3,0(a4)
20011f3c:	04f58123          	sb	a5,66(a1)
20011f40:	4785                	li	a5,1
20011f42:	a25d                	j	200120e8 <_printf_i+0x222>
20011f44:	419c                	lw	a5,0(a1)
20011f46:	4308                	lw	a0,0(a4)
20011f48:	0807f613          	andi	a2,a5,128
20011f4c:	00450593          	addi	a1,a0,4
20011f50:	c20d                	beqz	a2,20011f72 <_printf_i+0xac>
20011f52:	411c                	lw	a5,0(a0)
20011f54:	c30c                	sw	a1,0(a4)
20011f56:	0007d863          	bgez	a5,20011f66 <_printf_i+0xa0>
20011f5a:	02d00713          	li	a4,45
20011f5e:	40f007b3          	neg	a5,a5
20011f62:	04e401a3          	sb	a4,67(s0)
20011f66:	ffffe617          	auipc	a2,0xffffe
20011f6a:	46a60613          	addi	a2,a2,1130 # 200103d0 <__sf_fake_stdout+0x34>
20011f6e:	4829                	li	a6,10
20011f70:	a0a1                	j	20011fb8 <_printf_i+0xf2>
20011f72:	0407f613          	andi	a2,a5,64
20011f76:	411c                	lw	a5,0(a0)
20011f78:	c30c                	sw	a1,0(a4)
20011f7a:	de71                	beqz	a2,20011f56 <_printf_i+0x90>
20011f7c:	07c2                	slli	a5,a5,0x10
20011f7e:	87c1                	srai	a5,a5,0x10
20011f80:	bfd9                	j	20011f56 <_printf_i+0x90>
20011f82:	4190                	lw	a2,0(a1)
20011f84:	431c                	lw	a5,0(a4)
20011f86:	08067513          	andi	a0,a2,128
20011f8a:	00478593          	addi	a1,a5,4
20011f8e:	c501                	beqz	a0,20011f96 <_printf_i+0xd0>
20011f90:	c30c                	sw	a1,0(a4)
20011f92:	439c                	lw	a5,0(a5)
20011f94:	a039                	j	20011fa2 <_printf_i+0xdc>
20011f96:	04067613          	andi	a2,a2,64
20011f9a:	c30c                	sw	a1,0(a4)
20011f9c:	da7d                	beqz	a2,20011f92 <_printf_i+0xcc>
20011f9e:	0007d783          	lhu	a5,0(a5)
20011fa2:	06f00713          	li	a4,111
20011fa6:	ffffe617          	auipc	a2,0xffffe
20011faa:	42a60613          	addi	a2,a2,1066 # 200103d0 <__sf_fake_stdout+0x34>
20011fae:	0ee80463          	beq	a6,a4,20012096 <_printf_i+0x1d0>
20011fb2:	4829                	li	a6,10
20011fb4:	040401a3          	sb	zero,67(s0)
20011fb8:	4058                	lw	a4,4(s0)
20011fba:	c418                	sw	a4,8(s0)
20011fbc:	00074563          	bltz	a4,20011fc6 <_printf_i+0x100>
20011fc0:	400c                	lw	a1,0(s0)
20011fc2:	99ed                	andi	a1,a1,-5
20011fc4:	c00c                	sw	a1,0(s0)
20011fc6:	e399                	bnez	a5,20011fcc <_printf_i+0x106>
20011fc8:	8ab6                	mv	s5,a3
20011fca:	cf19                	beqz	a4,20011fe8 <_printf_i+0x122>
20011fcc:	8ab6                	mv	s5,a3
20011fce:	0307f733          	remu	a4,a5,a6
20011fd2:	1afd                	addi	s5,s5,-1
20011fd4:	9732                	add	a4,a4,a2
20011fd6:	00074703          	lbu	a4,0(a4)
20011fda:	00ea8023          	sb	a4,0(s5)
20011fde:	873e                	mv	a4,a5
20011fe0:	0307d7b3          	divu	a5,a5,a6
20011fe4:	ff0775e3          	bgeu	a4,a6,20011fce <_printf_i+0x108>
20011fe8:	47a1                	li	a5,8
20011fea:	00f81e63          	bne	a6,a5,20012006 <_printf_i+0x140>
20011fee:	401c                	lw	a5,0(s0)
20011ff0:	8b85                	andi	a5,a5,1
20011ff2:	cb91                	beqz	a5,20012006 <_printf_i+0x140>
20011ff4:	4058                	lw	a4,4(s0)
20011ff6:	481c                	lw	a5,16(s0)
20011ff8:	00e7c763          	blt	a5,a4,20012006 <_printf_i+0x140>
20011ffc:	03000793          	li	a5,48
20012000:	fefa8fa3          	sb	a5,-1(s5)
20012004:	1afd                	addi	s5,s5,-1
20012006:	415686b3          	sub	a3,a3,s5
2001200a:	c814                	sw	a3,16(s0)
2001200c:	874e                	mv	a4,s3
2001200e:	86ca                	mv	a3,s2
20012010:	0070                	addi	a2,sp,12
20012012:	85a2                	mv	a1,s0
20012014:	8526                	mv	a0,s1
20012016:	3355                	jal	20011dba <_printf_common>
20012018:	5a7d                	li	s4,-1
2001201a:	0d451b63          	bne	a0,s4,200120f0 <_printf_i+0x22a>
2001201e:	557d                	li	a0,-1
20012020:	50b2                	lw	ra,44(sp)
20012022:	5422                	lw	s0,40(sp)
20012024:	5492                	lw	s1,36(sp)
20012026:	5902                	lw	s2,32(sp)
20012028:	49f2                	lw	s3,28(sp)
2001202a:	4a62                	lw	s4,24(sp)
2001202c:	4ad2                	lw	s5,20(sp)
2001202e:	4b42                	lw	s6,16(sp)
20012030:	6145                	addi	sp,sp,48
20012032:	8082                	ret
20012034:	050582a3          	sb	a6,69(a1)
20012038:	ffffe617          	auipc	a2,0xffffe
2001203c:	39860613          	addi	a2,a2,920 # 200103d0 <__sf_fake_stdout+0x34>
20012040:	400c                	lw	a1,0(s0)
20012042:	4308                	lw	a0,0(a4)
20012044:	0805f813          	andi	a6,a1,128
20012048:	411c                	lw	a5,0(a0)
2001204a:	0511                	addi	a0,a0,4
2001204c:	02080d63          	beqz	a6,20012086 <_printf_i+0x1c0>
20012050:	c308                	sw	a0,0(a4)
20012052:	0015f713          	andi	a4,a1,1
20012056:	c701                	beqz	a4,2001205e <_printf_i+0x198>
20012058:	0205e593          	ori	a1,a1,32
2001205c:	c00c                	sw	a1,0(s0)
2001205e:	4841                	li	a6,16
20012060:	fbb1                	bnez	a5,20011fb4 <_printf_i+0xee>
20012062:	4018                	lw	a4,0(s0)
20012064:	fdf77713          	andi	a4,a4,-33
20012068:	c018                	sw	a4,0(s0)
2001206a:	b7a9                	j	20011fb4 <_printf_i+0xee>
2001206c:	419c                	lw	a5,0(a1)
2001206e:	0207e793          	ori	a5,a5,32
20012072:	c19c                	sw	a5,0(a1)
20012074:	07800793          	li	a5,120
20012078:	04f402a3          	sb	a5,69(s0)
2001207c:	ffffe617          	auipc	a2,0xffffe
20012080:	36860613          	addi	a2,a2,872 # 200103e4 <__sf_fake_stdout+0x48>
20012084:	bf75                	j	20012040 <_printf_i+0x17a>
20012086:	0405f813          	andi	a6,a1,64
2001208a:	c308                	sw	a0,0(a4)
2001208c:	fc0803e3          	beqz	a6,20012052 <_printf_i+0x18c>
20012090:	07c2                	slli	a5,a5,0x10
20012092:	83c1                	srli	a5,a5,0x10
20012094:	bf7d                	j	20012052 <_printf_i+0x18c>
20012096:	4821                	li	a6,8
20012098:	bf31                	j	20011fb4 <_printf_i+0xee>
2001209a:	4190                	lw	a2,0(a1)
2001209c:	431c                	lw	a5,0(a4)
2001209e:	49cc                	lw	a1,20(a1)
200120a0:	08067813          	andi	a6,a2,128
200120a4:	00478513          	addi	a0,a5,4
200120a8:	00080663          	beqz	a6,200120b4 <_printf_i+0x1ee>
200120ac:	c308                	sw	a0,0(a4)
200120ae:	439c                	lw	a5,0(a5)
200120b0:	c38c                	sw	a1,0(a5)
200120b2:	a801                	j	200120c2 <_printf_i+0x1fc>
200120b4:	c308                	sw	a0,0(a4)
200120b6:	04067613          	andi	a2,a2,64
200120ba:	439c                	lw	a5,0(a5)
200120bc:	da75                	beqz	a2,200120b0 <_printf_i+0x1ea>
200120be:	00b79023          	sh	a1,0(a5)
200120c2:	00042823          	sw	zero,16(s0)
200120c6:	8ab6                	mv	s5,a3
200120c8:	b791                	j	2001200c <_printf_i+0x146>
200120ca:	431c                	lw	a5,0(a4)
200120cc:	41d0                	lw	a2,4(a1)
200120ce:	4581                	li	a1,0
200120d0:	00478693          	addi	a3,a5,4
200120d4:	c314                	sw	a3,0(a4)
200120d6:	0007aa83          	lw	s5,0(a5)
200120da:	8556                	mv	a0,s5
200120dc:	3939                	jal	20011cfa <memchr>
200120de:	c501                	beqz	a0,200120e6 <_printf_i+0x220>
200120e0:	41550533          	sub	a0,a0,s5
200120e4:	c048                	sw	a0,4(s0)
200120e6:	405c                	lw	a5,4(s0)
200120e8:	c81c                	sw	a5,16(s0)
200120ea:	040401a3          	sb	zero,67(s0)
200120ee:	bf39                	j	2001200c <_printf_i+0x146>
200120f0:	4814                	lw	a3,16(s0)
200120f2:	8656                	mv	a2,s5
200120f4:	85ca                	mv	a1,s2
200120f6:	8526                	mv	a0,s1
200120f8:	9982                	jalr	s3
200120fa:	f34502e3          	beq	a0,s4,2001201e <_printf_i+0x158>
200120fe:	401c                	lw	a5,0(s0)
20012100:	8b89                	andi	a5,a5,2
20012102:	e78d                	bnez	a5,2001212c <_printf_i+0x266>
20012104:	47b2                	lw	a5,12(sp)
20012106:	4448                	lw	a0,12(s0)
20012108:	f0f55ce3          	bge	a0,a5,20012020 <_printf_i+0x15a>
2001210c:	853e                	mv	a0,a5
2001210e:	bf09                	j	20012020 <_printf_i+0x15a>
20012110:	4685                	li	a3,1
20012112:	8656                	mv	a2,s5
20012114:	85ca                	mv	a1,s2
20012116:	8526                	mv	a0,s1
20012118:	9982                	jalr	s3
2001211a:	f16502e3          	beq	a0,s6,2001201e <_printf_i+0x158>
2001211e:	0a05                	addi	s4,s4,1
20012120:	445c                	lw	a5,12(s0)
20012122:	4732                	lw	a4,12(sp)
20012124:	8f99                	sub	a5,a5,a4
20012126:	fefa45e3          	blt	s4,a5,20012110 <_printf_i+0x24a>
2001212a:	bfe9                	j	20012104 <_printf_i+0x23e>
2001212c:	4a01                	li	s4,0
2001212e:	01940a93          	addi	s5,s0,25
20012132:	5b7d                	li	s6,-1
20012134:	b7f5                	j	20012120 <_printf_i+0x25a>

20012136 <_read_r>:
_read_r():
20012136:	1141                	addi	sp,sp,-16
20012138:	c422                	sw	s0,8(sp)
2001213a:	842a                	mv	s0,a0
2001213c:	852e                	mv	a0,a1
2001213e:	85b2                	mv	a1,a2
20012140:	8636                	mv	a2,a3
20012142:	5ffef797          	auipc	a5,0x5ffef
20012146:	9807a723          	sw	zero,-1650(a5) # 80000ad0 <errno>
2001214a:	c606                	sw	ra,12(sp)
2001214c:	2231                	jal	20012258 <_read>
2001214e:	57fd                	li	a5,-1
20012150:	00f51863          	bne	a0,a5,20012160 <_read_r+0x2a>
20012154:	5ffef797          	auipc	a5,0x5ffef
20012158:	97c7a783          	lw	a5,-1668(a5) # 80000ad0 <errno>
2001215c:	c391                	beqz	a5,20012160 <_read_r+0x2a>
2001215e:	c01c                	sw	a5,0(s0)
20012160:	40b2                	lw	ra,12(sp)
20012162:	4422                	lw	s0,8(sp)
20012164:	0141                	addi	sp,sp,16
20012166:	8082                	ret

20012168 <_fstat_r>:
_fstat_r():
20012168:	1141                	addi	sp,sp,-16
2001216a:	c422                	sw	s0,8(sp)
2001216c:	842a                	mv	s0,a0
2001216e:	852e                	mv	a0,a1
20012170:	85b2                	mv	a1,a2
20012172:	5ffef797          	auipc	a5,0x5ffef
20012176:	9407af23          	sw	zero,-1698(a5) # 80000ad0 <errno>
2001217a:	c606                	sw	ra,12(sp)
2001217c:	20b5                	jal	200121e8 <_fstat>
2001217e:	57fd                	li	a5,-1
20012180:	00f51863          	bne	a0,a5,20012190 <_fstat_r+0x28>
20012184:	5ffef797          	auipc	a5,0x5ffef
20012188:	94c7a783          	lw	a5,-1716(a5) # 80000ad0 <errno>
2001218c:	c391                	beqz	a5,20012190 <_fstat_r+0x28>
2001218e:	c01c                	sw	a5,0(s0)
20012190:	40b2                	lw	ra,12(sp)
20012192:	4422                	lw	s0,8(sp)
20012194:	0141                	addi	sp,sp,16
20012196:	8082                	ret

20012198 <_isatty_r>:
_isatty_r():
20012198:	1141                	addi	sp,sp,-16
2001219a:	c422                	sw	s0,8(sp)
2001219c:	842a                	mv	s0,a0
2001219e:	852e                	mv	a0,a1
200121a0:	5ffef797          	auipc	a5,0x5ffef
200121a4:	9207a823          	sw	zero,-1744(a5) # 80000ad0 <errno>
200121a8:	c606                	sw	ra,12(sp)
200121aa:	2095                	jal	2001220e <_isatty>
200121ac:	57fd                	li	a5,-1
200121ae:	00f51863          	bne	a0,a5,200121be <_isatty_r+0x26>
200121b2:	5ffef797          	auipc	a5,0x5ffef
200121b6:	91e7a783          	lw	a5,-1762(a5) # 80000ad0 <errno>
200121ba:	c391                	beqz	a5,200121be <_isatty_r+0x26>
200121bc:	c01c                	sw	a5,0(s0)
200121be:	40b2                	lw	ra,12(sp)
200121c0:	4422                	lw	s0,8(sp)
200121c2:	0141                	addi	sp,sp,16
200121c4:	8082                	ret

200121c6 <_close>:
_close():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
200121c6:	1101                	addi	sp,sp,-32
200121c8:	ce06                	sw	ra,28(sp)
200121ca:	cc22                	sw	s0,24(sp)
200121cc:	1000                	addi	s0,sp,32
200121ce:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
200121d2:	225d                	jal	20012378 <__errno>
200121d4:	872a                	mv	a4,a0
200121d6:	05800793          	li	a5,88
200121da:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_close.c:5
    return -1;
200121dc:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_close.c:6
}
200121de:	853e                	mv	a0,a5
200121e0:	40f2                	lw	ra,28(sp)
200121e2:	4462                	lw	s0,24(sp)
200121e4:	6105                	addi	sp,sp,32
200121e6:	8082                	ret

200121e8 <_fstat>:
_fstat():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
200121e8:	1101                	addi	sp,sp,-32
200121ea:	ce06                	sw	ra,28(sp)
200121ec:	cc22                	sw	s0,24(sp)
200121ee:	1000                	addi	s0,sp,32
200121f0:	fea42623          	sw	a0,-20(s0)
200121f4:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
200121f8:	2241                	jal	20012378 <__errno>
200121fa:	872a                	mv	a4,a0
200121fc:	fa800793          	li	a5,-88
20012200:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20012202:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_fstat.c:7
}
20012204:	853e                	mv	a0,a5
20012206:	40f2                	lw	ra,28(sp)
20012208:	4462                	lw	s0,24(sp)
2001220a:	6105                	addi	sp,sp,32
2001220c:	8082                	ret

2001220e <_isatty>:
_isatty():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
2001220e:	1101                	addi	sp,sp,-32
20012210:	ce22                	sw	s0,28(sp)
20012212:	1000                	addi	s0,sp,32
20012214:	fea42623          	sw	a0,-20(s0)
20012218:	fec42783          	lw	a5,-20(s0)
2001221c:	17fd                	addi	a5,a5,-1
2001221e:	0017b793          	seqz	a5,a5
20012222:	0ff7f793          	zext.b	a5,a5
20012226:	853e                	mv	a0,a5
20012228:	4472                	lw	s0,28(sp)
2001222a:	6105                	addi	sp,sp,32
2001222c:	8082                	ret

2001222e <_lseek>:
_lseek():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
2001222e:	1101                	addi	sp,sp,-32
20012230:	ce06                	sw	ra,28(sp)
20012232:	cc22                	sw	s0,24(sp)
20012234:	1000                	addi	s0,sp,32
20012236:	fea42623          	sw	a0,-20(s0)
2001223a:	feb42423          	sw	a1,-24(s0)
2001223e:	fec42223          	sw	a2,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20012242:	2a1d                	jal	20012378 <__errno>
20012244:	872a                	mv	a4,a0
20012246:	05800793          	li	a5,88
2001224a:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_lseek.c:6
    return -1;
2001224c:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_lseek.c:7
}
2001224e:	853e                	mv	a0,a5
20012250:	40f2                	lw	ra,28(sp)
20012252:	4462                	lw	s0,24(sp)
20012254:	6105                	addi	sp,sp,32
20012256:	8082                	ret

20012258 <_read>:
_read():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20012258:	1101                	addi	sp,sp,-32
2001225a:	ce06                	sw	ra,28(sp)
2001225c:	cc22                	sw	s0,24(sp)
2001225e:	1000                	addi	s0,sp,32
20012260:	fea42623          	sw	a0,-20(s0)
20012264:	feb42423          	sw	a1,-24(s0)
20012268:	fec42223          	sw	a2,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
2001226c:	2231                	jal	20012378 <__errno>
2001226e:	872a                	mv	a4,a0
20012270:	05800793          	li	a5,88
20012274:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_read.c:6
    return -1;
20012276:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_read.c:7
}
20012278:	853e                	mv	a0,a5
2001227a:	40f2                	lw	ra,28(sp)
2001227c:	4462                	lw	s0,24(sp)
2001227e:	6105                	addi	sp,sp,32
20012280:	8082                	ret

20012282 <_sbrk>:
_sbrk():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20012282:	7179                	addi	sp,sp,-48
20012284:	d606                	sw	ra,44(sp)
20012286:	d422                	sw	s0,40(sp)
20012288:	1800                	addi	s0,sp,48
2001228a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
2001228e:	800017b7          	lui	a5,0x80001
20012292:	aa47a783          	lw	a5,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xfffff334>
20012296:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2001229a:	cd018713          	addi	a4,gp,-816 # 80000f70 <_sp>
2001229e:	4d018793          	addi	a5,gp,1232 # 80001770 <metal_segment_heap_target_end>
200122a2:	00f71463          	bne	a4,a5,200122aa <_sbrk+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
200122a6:	57fd                	li	a5,-1
200122a8:	a0b9                	j	200122f6 <_sbrk+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
200122aa:	800017b7          	lui	a5,0x80001
200122ae:	aa47a703          	lw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xfffff334>
200122b2:	fdc42783          	lw	a5,-36(s0)
200122b6:	973e                	add	a4,a4,a5
200122b8:	4d018793          	addi	a5,gp,1232 # 80001770 <metal_segment_heap_target_end>
200122bc:	02f77663          	bgeu	a4,a5,200122e8 <_sbrk+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
200122c0:	800017b7          	lui	a5,0x80001
200122c4:	aa47a703          	lw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xfffff334>
200122c8:	fdc42783          	lw	a5,-36(s0)
200122cc:	973e                	add	a4,a4,a5
200122ce:	800017b7          	lui	a5,0x80001
200122d2:	aae7a223          	sw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xfffff334>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
200122d6:	fdc42583          	lw	a1,-36(s0)
200122da:	fec42503          	lw	a0,-20(s0)
200122de:	dadfd0ef          	jal	ra,2001008a <metal_mem_scrub>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:42

    return old;
200122e2:	fec42783          	lw	a5,-20(s0)
200122e6:	a801                	j	200122f6 <_sbrk+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
200122e8:	800017b7          	lui	a5,0x80001
200122ec:	4d018713          	addi	a4,gp,1232 # 80001770 <metal_segment_heap_target_end>
200122f0:	aae7a223          	sw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xfffff334>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
200122f4:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_sbrk.c:43
}
200122f6:	853e                	mv	a0,a5
200122f8:	50b2                	lw	ra,44(sp)
200122fa:	5422                	lw	s0,40(sp)
200122fc:	6145                	addi	sp,sp,48
200122fe:	8082                	ret

20012300 <_write>:
_write():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20012300:	7179                	addi	sp,sp,-48
20012302:	d606                	sw	ra,44(sp)
20012304:	d422                	sw	s0,40(sp)
20012306:	1800                	addi	s0,sp,48
20012308:	fca42e23          	sw	a0,-36(s0)
2001230c:	fcb42c23          	sw	a1,-40(s0)
20012310:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20012314:	fdc42703          	lw	a4,-36(s0)
20012318:	4785                	li	a5,1
2001231a:	00f70963          	beq	a4,a5,2001232c <_write+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
2001231e:	28a9                	jal	20012378 <__errno>
20012320:	872a                	mv	a4,a0
20012322:	05800793          	li	a5,88
20012326:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:10
        return -1;
20012328:	57fd                	li	a5,-1
2001232a:	a82d                	j	20012364 <_write+0x64>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
2001232c:	fd842783          	lw	a5,-40(s0)
20012330:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20012334:	fe042623          	sw	zero,-20(s0)
20012338:	a839                	j	20012356 <_write+0x56>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
2001233a:	fe842703          	lw	a4,-24(s0)
2001233e:	fec42783          	lw	a5,-20(s0)
20012342:	97ba                	add	a5,a5,a4
20012344:	0007c783          	lbu	a5,0(a5)
20012348:	853e                	mv	a0,a5
2001234a:	2e89                	jal	2001269c <metal_tty_putc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
2001234c:	fec42783          	lw	a5,-20(s0)
20012350:	0785                	addi	a5,a5,1
20012352:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20012356:	fec42703          	lw	a4,-20(s0)
2001235a:	fd442783          	lw	a5,-44(s0)
2001235e:	fcf76ee3          	bltu	a4,a5,2001233a <_write+0x3a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:16
    return 0;
20012362:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_write.c:17
}
20012364:	853e                	mv	a0,a5
20012366:	50b2                	lw	ra,44(sp)
20012368:	5422                	lw	s0,40(sp)
2001236a:	6145                	addi	sp,sp,48
2001236c:	8082                	ret

2001236e <atexit>:
atexit():
2001236e:	85aa                	mv	a1,a0
20012370:	4681                	li	a3,0
20012372:	4601                	li	a2,0
20012374:	4501                	li	a0,0
20012376:	a0e9                	j	20012440 <__register_exitproc>

20012378 <__errno>:
__errno():
20012378:	5ffee517          	auipc	a0,0x5ffee
2001237c:	72852503          	lw	a0,1832(a0) # 80000aa0 <_impure_ptr>
20012380:	8082                	ret

20012382 <exit>:
exit():
20012382:	1141                	addi	sp,sp,-16
20012384:	c422                	sw	s0,8(sp)
20012386:	c606                	sw	ra,12(sp)
20012388:	00000797          	auipc	a5,0x0
2001238c:	13478793          	addi	a5,a5,308 # 200124bc <__call_exitprocs>
20012390:	842a                	mv	s0,a0
20012392:	c399                	beqz	a5,20012398 <exit+0x16>
20012394:	4581                	li	a1,0
20012396:	221d                	jal	200124bc <__call_exitprocs>
20012398:	fffff517          	auipc	a0,0xfffff
2001239c:	c0852503          	lw	a0,-1016(a0) # 20010fa0 <_global_impure_ptr>
200123a0:	551c                	lw	a5,40(a0)
200123a2:	c391                	beqz	a5,200123a6 <exit+0x24>
200123a4:	9782                	jalr	a5
200123a6:	8522                	mv	a0,s0
200123a8:	409040ef          	jal	ra,20016fb0 <_exit>

200123ac <__libc_fini_array>:
__libc_fini_array():
200123ac:	1141                	addi	sp,sp,-16
200123ae:	c422                	sw	s0,8(sp)
200123b0:	c226                	sw	s1,4(sp)
200123b2:	ffffe417          	auipc	s0,0xffffe
200123b6:	f2640413          	addi	s0,s0,-218 # 200102d8 <__fini_array_end>
200123ba:	ffffe497          	auipc	s1,0xffffe
200123be:	f1e48493          	addi	s1,s1,-226 # 200102d8 <__fini_array_end>
200123c2:	8c05                	sub	s0,s0,s1
200123c4:	c606                	sw	ra,12(sp)
200123c6:	8409                	srai	s0,s0,0x2
200123c8:	e411                	bnez	s0,200123d4 <__libc_fini_array+0x28>
200123ca:	40b2                	lw	ra,12(sp)
200123cc:	4422                	lw	s0,8(sp)
200123ce:	4492                	lw	s1,4(sp)
200123d0:	0141                	addi	sp,sp,16
200123d2:	8082                	ret
200123d4:	147d                	addi	s0,s0,-1
200123d6:	00241793          	slli	a5,s0,0x2
200123da:	97a6                	add	a5,a5,s1
200123dc:	439c                	lw	a5,0(a5)
200123de:	9782                	jalr	a5
200123e0:	b7e5                	j	200123c8 <__libc_fini_array+0x1c>

200123e2 <__libc_init_array>:
__libc_init_array():
200123e2:	1141                	addi	sp,sp,-16
200123e4:	c422                	sw	s0,8(sp)
200123e6:	c226                	sw	s1,4(sp)
200123e8:	ffffe417          	auipc	s0,0xffffe
200123ec:	ee040413          	addi	s0,s0,-288 # 200102c8 <_metal_tty_init_ptr>
200123f0:	ffffe497          	auipc	s1,0xffffe
200123f4:	ed848493          	addi	s1,s1,-296 # 200102c8 <_metal_tty_init_ptr>
200123f8:	8c81                	sub	s1,s1,s0
200123fa:	c04a                	sw	s2,0(sp)
200123fc:	c606                	sw	ra,12(sp)
200123fe:	8489                	srai	s1,s1,0x2
20012400:	4901                	li	s2,0
20012402:	02991563          	bne	s2,s1,2001242c <__libc_init_array+0x4a>
20012406:	ffffe417          	auipc	s0,0xffffe
2001240a:	ec240413          	addi	s0,s0,-318 # 200102c8 <_metal_tty_init_ptr>
2001240e:	ffffe497          	auipc	s1,0xffffe
20012412:	eba48493          	addi	s1,s1,-326 # 200102c8 <_metal_tty_init_ptr>
20012416:	8c81                	sub	s1,s1,s0
20012418:	8489                	srai	s1,s1,0x2
2001241a:	4901                	li	s2,0
2001241c:	00991d63          	bne	s2,s1,20012436 <__libc_init_array+0x54>
20012420:	40b2                	lw	ra,12(sp)
20012422:	4422                	lw	s0,8(sp)
20012424:	4492                	lw	s1,4(sp)
20012426:	4902                	lw	s2,0(sp)
20012428:	0141                	addi	sp,sp,16
2001242a:	8082                	ret
2001242c:	401c                	lw	a5,0(s0)
2001242e:	0905                	addi	s2,s2,1
20012430:	0411                	addi	s0,s0,4
20012432:	9782                	jalr	a5
20012434:	b7f9                	j	20012402 <__libc_init_array+0x20>
20012436:	401c                	lw	a5,0(s0)
20012438:	0905                	addi	s2,s2,1
2001243a:	0411                	addi	s0,s0,4
2001243c:	9782                	jalr	a5
2001243e:	bff9                	j	2001241c <__libc_init_array+0x3a>

20012440 <__register_exitproc>:
__register_exitproc():
20012440:	88aa                	mv	a7,a0
20012442:	5ffee517          	auipc	a0,0x5ffee
20012446:	69250513          	addi	a0,a0,1682 # 80000ad4 <_global_atexit>
2001244a:	411c                	lw	a5,0(a0)
2001244c:	ef91                	bnez	a5,20012468 <__register_exitproc+0x28>
2001244e:	5ffee717          	auipc	a4,0x5ffee
20012452:	69270713          	addi	a4,a4,1682 # 80000ae0 <_global_atexit0>
20012456:	c118                	sw	a4,0(a0)
20012458:	00000513          	li	a0,0
2001245c:	87ba                	mv	a5,a4
2001245e:	c509                	beqz	a0,20012468 <__register_exitproc+0x28>
20012460:	411c                	lw	a5,0(a0)
20012462:	08f72423          	sw	a5,136(a4)
20012466:	87ba                	mv	a5,a4
20012468:	43d8                	lw	a4,4(a5)
2001246a:	487d                	li	a6,31
2001246c:	557d                	li	a0,-1
2001246e:	04e84663          	blt	a6,a4,200124ba <__register_exitproc+0x7a>
20012472:	02088d63          	beqz	a7,200124ac <__register_exitproc+0x6c>
20012476:	0887a803          	lw	a6,136(a5)
2001247a:	04080063          	beqz	a6,200124ba <__register_exitproc+0x7a>
2001247e:	00271513          	slli	a0,a4,0x2
20012482:	9542                	add	a0,a0,a6
20012484:	c110                	sw	a2,0(a0)
20012486:	10082303          	lw	t1,256(a6)
2001248a:	4605                	li	a2,1
2001248c:	00e61633          	sll	a2,a2,a4
20012490:	00c36333          	or	t1,t1,a2
20012494:	10682023          	sw	t1,256(a6)
20012498:	08d52023          	sw	a3,128(a0)
2001249c:	4689                	li	a3,2
2001249e:	00d89763          	bne	a7,a3,200124ac <__register_exitproc+0x6c>
200124a2:	10482683          	lw	a3,260(a6)
200124a6:	8e55                	or	a2,a2,a3
200124a8:	10c82223          	sw	a2,260(a6)
200124ac:	00170693          	addi	a3,a4,1
200124b0:	070a                	slli	a4,a4,0x2
200124b2:	c3d4                	sw	a3,4(a5)
200124b4:	97ba                	add	a5,a5,a4
200124b6:	c78c                	sw	a1,8(a5)
200124b8:	4501                	li	a0,0
200124ba:	8082                	ret

200124bc <__call_exitprocs>:
__call_exitprocs():
200124bc:	7179                	addi	sp,sp,-48
200124be:	ca56                	sw	s5,20(sp)
200124c0:	c85a                	sw	s6,16(sp)
200124c2:	c65e                	sw	s7,12(sp)
200124c4:	c462                	sw	s8,8(sp)
200124c6:	d606                	sw	ra,44(sp)
200124c8:	d422                	sw	s0,40(sp)
200124ca:	d226                	sw	s1,36(sp)
200124cc:	d04a                	sw	s2,32(sp)
200124ce:	ce4e                	sw	s3,28(sp)
200124d0:	cc52                	sw	s4,24(sp)
200124d2:	c266                	sw	s9,4(sp)
200124d4:	8b2a                	mv	s6,a0
200124d6:	8aae                	mv	s5,a1
200124d8:	5ffeeb97          	auipc	s7,0x5ffee
200124dc:	5fcb8b93          	addi	s7,s7,1532 # 80000ad4 <_global_atexit>
200124e0:	4c05                	li	s8,1
200124e2:	000ba483          	lw	s1,0(s7)
200124e6:	cc81                	beqz	s1,200124fe <__call_exitprocs+0x42>
200124e8:	40c0                	lw	s0,4(s1)
200124ea:	0884a983          	lw	s3,136(s1)
200124ee:	fff40913          	addi	s2,s0,-1
200124f2:	040a                	slli	s0,s0,0x2
200124f4:	00898a33          	add	s4,s3,s0
200124f8:	9426                	add	s0,s0,s1
200124fa:	00095f63          	bgez	s2,20012518 <__call_exitprocs+0x5c>
200124fe:	50b2                	lw	ra,44(sp)
20012500:	5422                	lw	s0,40(sp)
20012502:	5492                	lw	s1,36(sp)
20012504:	5902                	lw	s2,32(sp)
20012506:	49f2                	lw	s3,28(sp)
20012508:	4a62                	lw	s4,24(sp)
2001250a:	4ad2                	lw	s5,20(sp)
2001250c:	4b42                	lw	s6,16(sp)
2001250e:	4bb2                	lw	s7,12(sp)
20012510:	4c22                	lw	s8,8(sp)
20012512:	4c92                	lw	s9,4(sp)
20012514:	6145                	addi	sp,sp,48
20012516:	8082                	ret
20012518:	000a8c63          	beqz	s5,20012530 <__call_exitprocs+0x74>
2001251c:	00099663          	bnez	s3,20012528 <__call_exitprocs+0x6c>
20012520:	197d                	addi	s2,s2,-1
20012522:	1a71                	addi	s4,s4,-4
20012524:	1471                	addi	s0,s0,-4
20012526:	bfd1                	j	200124fa <__call_exitprocs+0x3e>
20012528:	07ca2783          	lw	a5,124(s4)
2001252c:	ff579ae3          	bne	a5,s5,20012520 <__call_exitprocs+0x64>
20012530:	40d8                	lw	a4,4(s1)
20012532:	405c                	lw	a5,4(s0)
20012534:	177d                	addi	a4,a4,-1
20012536:	03271863          	bne	a4,s2,20012566 <__call_exitprocs+0xaa>
2001253a:	0124a223          	sw	s2,4(s1)
2001253e:	d3ed                	beqz	a5,20012520 <__call_exitprocs+0x64>
20012540:	0044ac83          	lw	s9,4(s1)
20012544:	00098863          	beqz	s3,20012554 <__call_exitprocs+0x98>
20012548:	1009a683          	lw	a3,256(s3)
2001254c:	012c1733          	sll	a4,s8,s2
20012550:	8ef9                	and	a3,a3,a4
20012552:	ee89                	bnez	a3,2001256c <__call_exitprocs+0xb0>
20012554:	9782                	jalr	a5
20012556:	40d8                	lw	a4,4(s1)
20012558:	000ba783          	lw	a5,0(s7)
2001255c:	f99713e3          	bne	a4,s9,200124e2 <__call_exitprocs+0x26>
20012560:	fcf480e3          	beq	s1,a5,20012520 <__call_exitprocs+0x64>
20012564:	bfbd                	j	200124e2 <__call_exitprocs+0x26>
20012566:	00042223          	sw	zero,4(s0)
2001256a:	bfd1                	j	2001253e <__call_exitprocs+0x82>
2001256c:	1049a683          	lw	a3,260(s3)
20012570:	ffca2583          	lw	a1,-4(s4)
20012574:	8f75                	and	a4,a4,a3
20012576:	e701                	bnez	a4,2001257e <__call_exitprocs+0xc2>
20012578:	855a                	mv	a0,s6
2001257a:	9782                	jalr	a5
2001257c:	bfe9                	j	20012556 <__call_exitprocs+0x9a>
2001257e:	852e                	mv	a0,a1
20012580:	9782                	jalr	a5
20012582:	bfd1                	j	20012556 <__call_exitprocs+0x9a>

20012584 <metal_init>:
metal_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:21
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20012584:	1101                	addi	sp,sp,-32
20012586:	ce06                	sw	ra,28(sp)
20012588:	cc22                	sw	s0,24(sp)
2001258a:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:24
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
2001258c:	800017b7          	lui	a5,0x80001
20012590:	ad87a783          	lw	a5,-1320(a5) # 80000ad8 <metal_segment_heap_target_end+0xfffff368>
20012594:	efa9                	bnez	a5,200125ee <metal_init+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:27
        return;
    }
    init_done = 1;
20012596:	800017b7          	lui	a5,0x80001
2001259a:	4705                	li	a4,1
2001259c:	ace7ac23          	sw	a4,-1320(a5) # 80000ad8 <metal_segment_heap_target_end+0xfffff368>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:42
#ifdef METAL_SIFIVE_L2PF1
    /* Do L2 Stride Prefetcher initialization. */
    sifive_l2pf1_init();
#endif /* METAL_SIFIVE_L2PF1 */

    if (&metal_constructors_end <= &metal_constructors_start) {
200125a0:	200107b7          	lui	a5,0x20010
200125a4:	2d478713          	addi	a4,a5,724 # 200102d4 <metal_tty_init>
200125a8:	200107b7          	lui	a5,0x20010
200125ac:	2c878793          	addi	a5,a5,712 # 200102c8 <_metal_tty_init_ptr>
200125b0:	04e7f163          	bgeu	a5,a4,200125f2 <metal_init+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:46
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
200125b4:	200107b7          	lui	a5,0x20010
200125b8:	2c878793          	addi	a5,a5,712 # 200102c8 <_metal_tty_init_ptr>
200125bc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
200125c0:	a831                	j	200125dc <metal_init+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:48
        metal_constructor_t func = *funcptr;
200125c2:	fec42783          	lw	a5,-20(s0)
200125c6:	439c                	lw	a5,0(a5)
200125c8:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:50

        func();
200125cc:	fe842783          	lw	a5,-24(s0)
200125d0:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:52

        funcptr += 1;
200125d2:	fec42783          	lw	a5,-20(s0)
200125d6:	0791                	addi	a5,a5,4
200125d8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
200125dc:	fec42703          	lw	a4,-20(s0)
200125e0:	200107b7          	lui	a5,0x20010
200125e4:	2d478793          	addi	a5,a5,724 # 200102d4 <metal_tty_init>
200125e8:	fcf71de3          	bne	a4,a5,200125c2 <metal_init+0x3e>
200125ec:	a021                	j	200125f4 <metal_init+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:25
        return;
200125ee:	0001                	nop
200125f0:	a011                	j	200125f4 <metal_init+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:43
        return;
200125f2:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:54
    }
}
200125f4:	40f2                	lw	ra,28(sp)
200125f6:	4462                	lw	s0,24(sp)
200125f8:	6105                	addi	sp,sp,32
200125fa:	8082                	ret

200125fc <metal_fini>:
metal_fini():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:56

void metal_fini(void) {
200125fc:	1101                	addi	sp,sp,-32
200125fe:	ce06                	sw	ra,28(sp)
20012600:	cc22                	sw	s0,24(sp)
20012602:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:59
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20012604:	800017b7          	lui	a5,0x80001
20012608:	adc7a783          	lw	a5,-1316(a5) # 80000adc <metal_segment_heap_target_end+0xfffff36c>
2001260c:	efa9                	bnez	a5,20012666 <metal_fini+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:62
        return;
    }
    fini_done = 1;
2001260e:	800017b7          	lui	a5,0x80001
20012612:	4705                	li	a4,1
20012614:	ace7ae23          	sw	a4,-1316(a5) # 80000adc <metal_segment_heap_target_end+0xfffff36c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:64

    if (&metal_destructors_end <= &metal_destructors_start) {
20012618:	200107b7          	lui	a5,0x20010
2001261c:	2d878713          	addi	a4,a5,728 # 200102d8 <__fini_array_end>
20012620:	200107b7          	lui	a5,0x20010
20012624:	2d878793          	addi	a5,a5,728 # 200102d8 <__fini_array_end>
20012628:	04e7f163          	bgeu	a5,a4,2001266a <metal_fini+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:68
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2001262c:	200107b7          	lui	a5,0x20010
20012630:	2d878793          	addi	a5,a5,728 # 200102d8 <__fini_array_end>
20012634:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20012638:	a831                	j	20012654 <metal_fini+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:70
        metal_destructor_t func = *funcptr;
2001263a:	fec42783          	lw	a5,-20(s0)
2001263e:	439c                	lw	a5,0(a5)
20012640:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:72

        func();
20012644:	fe842783          	lw	a5,-24(s0)
20012648:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:74

        funcptr += 1;
2001264a:	fec42783          	lw	a5,-20(s0)
2001264e:	0791                	addi	a5,a5,4
20012650:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20012654:	fec42703          	lw	a4,-20(s0)
20012658:	200107b7          	lui	a5,0x20010
2001265c:	2d878793          	addi	a5,a5,728 # 200102d8 <__fini_array_end>
20012660:	fcf71de3          	bne	a4,a5,2001263a <metal_fini+0x3e>
20012664:	a021                	j	2001266c <metal_fini+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:60
        return;
20012666:	0001                	nop
20012668:	a011                	j	2001266c <metal_fini+0x70>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:65
        return;
2001266a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:76
    }
}
2001266c:	40f2                	lw	ra,28(sp)
2001266e:	4462                	lw	s0,24(sp)
20012670:	6105                	addi	sp,sp,32
20012672:	8082                	ret

20012674 <metal_init_run>:
metal_init_run():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:86
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20012674:	1141                	addi	sp,sp,-16
20012676:	c606                	sw	ra,12(sp)
20012678:	c422                	sw	s0,8(sp)
2001267a:	0800                	addi	s0,sp,16
2001267c:	3721                	jal	20012584 <metal_init>
2001267e:	0001                	nop
20012680:	40b2                	lw	ra,12(sp)
20012682:	4422                	lw	s0,8(sp)
20012684:	0141                	addi	sp,sp,16
20012686:	8082                	ret

20012688 <metal_fini_run>:
metal_fini_run():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/init.c:89

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20012688:	1141                	addi	sp,sp,-16
2001268a:	c606                	sw	ra,12(sp)
2001268c:	c422                	sw	s0,8(sp)
2001268e:	0800                	addi	s0,sp,16
20012690:	37b5                	jal	200125fc <metal_fini>
20012692:	0001                	nop
20012694:	40b2                	lw	ra,12(sp)
20012696:	4422                	lw	s0,8(sp)
20012698:	0141                	addi	sp,sp,16
2001269a:	8082                	ret

2001269c <metal_tty_putc>:
metal_tty_putc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2001269c:	1101                	addi	sp,sp,-32
2001269e:	ce06                	sw	ra,28(sp)
200126a0:	cc22                	sw	s0,24(sp)
200126a2:	1000                	addi	s0,sp,32
200126a4:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
200126a8:	fec42583          	lw	a1,-20(s0)
200126ac:	800017b7          	lui	a5,0x80001
200126b0:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
200126b4:	282d                	jal	200126ee <metal_uart_putc>
200126b6:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/tty.c:14
}
200126b8:	853e                	mv	a0,a5
200126ba:	40f2                	lw	ra,28(sp)
200126bc:	4462                	lw	s0,24(sp)
200126be:	6105                	addi	sp,sp,32
200126c0:	8082                	ret

200126c2 <metal_uart_init>:
metal_uart_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
200126c2:	1101                	addi	sp,sp,-32
200126c4:	ce06                	sw	ra,28(sp)
200126c6:	cc22                	sw	s0,24(sp)
200126c8:	1000                	addi	s0,sp,32
200126ca:	fea42623          	sw	a0,-20(s0)
200126ce:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
200126d2:	fec42783          	lw	a5,-20(s0)
200126d6:	439c                	lw	a5,0(a5)
200126d8:	439c                	lw	a5,0(a5)
200126da:	fe842583          	lw	a1,-24(s0)
200126de:	fec42503          	lw	a0,-20(s0)
200126e2:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:61
}
200126e4:	0001                	nop
200126e6:	40f2                	lw	ra,28(sp)
200126e8:	4462                	lw	s0,24(sp)
200126ea:	6105                	addi	sp,sp,32
200126ec:	8082                	ret

200126ee <metal_uart_putc>:
metal_uart_putc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
200126ee:	1101                	addi	sp,sp,-32
200126f0:	ce06                	sw	ra,28(sp)
200126f2:	cc22                	sw	s0,24(sp)
200126f4:	1000                	addi	s0,sp,32
200126f6:	fea42623          	sw	a0,-20(s0)
200126fa:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
200126fe:	fec42783          	lw	a5,-20(s0)
20012702:	439c                	lw	a5,0(a5)
20012704:	43dc                	lw	a5,4(a5)
20012706:	fe842583          	lw	a1,-24(s0)
2001270a:	fec42503          	lw	a0,-20(s0)
2001270e:	9782                	jalr	a5
20012710:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:71
}
20012712:	853e                	mv	a0,a5
20012714:	40f2                	lw	ra,28(sp)
20012716:	4462                	lw	s0,24(sp)
20012718:	6105                	addi	sp,sp,32
2001271a:	8082                	ret

2001271c <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
2001271c:	1101                	addi	sp,sp,-32
2001271e:	ce06                	sw	ra,28(sp)
20012720:	cc22                	sw	s0,24(sp)
20012722:	1000                	addi	s0,sp,32
20012724:	fea42623          	sw	a0,-20(s0)
20012728:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
2001272c:	fec42783          	lw	a5,-20(s0)
20012730:	439c                	lw	a5,0(a5)
20012732:	4bdc                	lw	a5,20(a5)
20012734:	fe842583          	lw	a1,-24(s0)
20012738:	fec42503          	lw	a0,-20(s0)
2001273c:	9782                	jalr	a5
2001273e:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/uart.h:113
}
20012740:	853e                	mv	a0,a5
20012742:	40f2                	lw	ra,28(sp)
20012744:	4462                	lw	s0,24(sp)
20012746:	6105                	addi	sp,sp,32
20012748:	8082                	ret

2001274a <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2001274a:	1101                	addi	sp,sp,-32
2001274c:	ce22                	sw	s0,28(sp)
2001274e:	1000                	addi	s0,sp,32
20012750:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012754:	fec42703          	lw	a4,-20(s0)
20012758:	800017b7          	lui	a5,0x80001
2001275c:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
20012760:	00f71563          	bne	a4,a5,2001276a <__metal_driver_sifive_clint0_control_base+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20012764:	020007b7          	lui	a5,0x2000
20012768:	a011                	j	2001276c <__metal_driver_sifive_clint0_control_base+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
2001276a:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:240
	}
}
2001276c:	853e                	mv	a0,a5
2001276e:	4472                	lw	s0,28(sp)
20012770:	6105                	addi	sp,sp,32
20012772:	8082                	ret

20012774 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20012774:	1101                	addi	sp,sp,-32
20012776:	ce22                	sw	s0,28(sp)
20012778:	1000                	addi	s0,sp,32
2001277a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2001277e:	fec42703          	lw	a4,-20(s0)
20012782:	800017b7          	lui	a5,0x80001
20012786:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
2001278a:	00f71463          	bne	a4,a5,20012792 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
2001278e:	4789                	li	a5,2
20012790:	a011                	j	20012794 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
20012792:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:260
	}
}
20012794:	853e                	mv	a0,a5
20012796:	4472                	lw	s0,28(sp)
20012798:	6105                	addi	sp,sp,32
2001279a:	8082                	ret

2001279c <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001279c:	1101                	addi	sp,sp,-32
2001279e:	ce22                	sw	s0,28(sp)
200127a0:	1000                	addi	s0,sp,32
200127a2:	fea42623          	sw	a0,-20(s0)
200127a6:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:264
	if (idx == 0) {
200127aa:	fe842783          	lw	a5,-24(s0)
200127ae:	e791                	bnez	a5,200127ba <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200127b0:	800007b7          	lui	a5,0x80000
200127b4:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200127b8:	a821                	j	200127d0 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
200127ba:	fe842703          	lw	a4,-24(s0)
200127be:	4785                	li	a5,1
200127c0:	00f71763          	bne	a4,a5,200127ce <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200127c4:	800007b7          	lui	a5,0x80000
200127c8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200127cc:	a011                	j	200127d0 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
200127ce:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:273
	}
}
200127d0:	853e                	mv	a0,a5
200127d2:	4472                	lw	s0,28(sp)
200127d4:	6105                	addi	sp,sp,32
200127d6:	8082                	ret

200127d8 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200127d8:	1101                	addi	sp,sp,-32
200127da:	ce22                	sw	s0,28(sp)
200127dc:	1000                	addi	s0,sp,32
200127de:	fea42623          	sw	a0,-20(s0)
200127e2:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:277
	if (idx == 0) {
200127e6:	fe842783          	lw	a5,-24(s0)
200127ea:	e399                	bnez	a5,200127f0 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:278
		return 3;
200127ec:	478d                	li	a5,3
200127ee:	a809                	j	20012800 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
200127f0:	fe842703          	lw	a4,-24(s0)
200127f4:	4785                	li	a5,1
200127f6:	00f71463          	bne	a4,a5,200127fe <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:281
		return 7;
200127fa:	479d                	li	a5,7
200127fc:	a011                	j	20012800 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
200127fe:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:286
	}
}
20012800:	853e                	mv	a0,a5
20012802:	4472                	lw	s0,28(sp)
20012804:	6105                	addi	sp,sp,32
20012806:	8082                	ret

20012808 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20012808:	715d                	addi	sp,sp,-80
2001280a:	c686                	sw	ra,76(sp)
2001280c:	c4a2                	sw	s0,72(sp)
2001280e:	c2ca                	sw	s2,68(sp)
20012810:	c0ce                	sw	s3,64(sp)
20012812:	de52                	sw	s4,60(sp)
20012814:	dc56                	sw	s5,56(sp)
20012816:	da5a                	sw	s6,52(sp)
20012818:	d85e                	sw	s7,48(sp)
2001281a:	d662                	sw	s8,44(sp)
2001281c:	d466                	sw	s9,40(sp)
2001281e:	0880                	addi	s0,sp,80
20012820:	faa42e23          	sw	a0,-68(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20012824:	fbc42783          	lw	a5,-68(s0)
20012828:	853e                	mv	a0,a5
2001282a:	3705                	jal	2001274a <__metal_driver_sifive_clint0_control_base>
2001282c:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20012830:	fcc42703          	lw	a4,-52(s0)
20012834:	67b1                	lui	a5,0xc
20012836:	17f1                	addi	a5,a5,-4
20012838:	97ba                	add	a5,a5,a4
2001283a:	439c                	lw	a5,0(a5)
2001283c:	fcf42423          	sw	a5,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20012840:	fcc42703          	lw	a4,-52(s0)
20012844:	67b1                	lui	a5,0xc
20012846:	17e1                	addi	a5,a5,-8
20012848:	97ba                	add	a5,a5,a4
2001284a:	439c                	lw	a5,0(a5)
2001284c:	fcf42223          	sw	a5,-60(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20012850:	fcc42703          	lw	a4,-52(s0)
20012854:	67b1                	lui	a5,0xc
20012856:	17f1                	addi	a5,a5,-4
20012858:	97ba                	add	a5,a5,a4
2001285a:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:27 (discriminator 1)
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);
2001285c:	fc842703          	lw	a4,-56(s0)
20012860:	fcf718e3          	bne	a4,a5,20012830 <__metal_clint0_mtime_get+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:29

    return (((unsigned long long)hi) << 32) | lo;
20012864:	fc842783          	lw	a5,-56(s0)
20012868:	8c3e                	mv	s8,a5
2001286a:	4c81                	li	s9,0
2001286c:	000c1993          	slli	s3,s8,0x0
20012870:	4901                	li	s2,0
20012872:	fc442783          	lw	a5,-60(s0)
20012876:	8a3e                	mv	s4,a5
20012878:	4a81                	li	s5,0
2001287a:	01496b33          	or	s6,s2,s4
2001287e:	0159ebb3          	or	s7,s3,s5
20012882:	875a                	mv	a4,s6
20012884:	87de                	mv	a5,s7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:30
}
20012886:	853a                	mv	a0,a4
20012888:	85be                	mv	a1,a5
2001288a:	40b6                	lw	ra,76(sp)
2001288c:	4426                	lw	s0,72(sp)
2001288e:	4916                	lw	s2,68(sp)
20012890:	4986                	lw	s3,64(sp)
20012892:	5a72                	lw	s4,60(sp)
20012894:	5ae2                	lw	s5,56(sp)
20012896:	5b52                	lw	s6,52(sp)
20012898:	5bc2                	lw	s7,48(sp)
2001289a:	5c32                	lw	s8,44(sp)
2001289c:	5ca2                	lw	s9,40(sp)
2001289e:	6161                	addi	sp,sp,80
200128a0:	8082                	ret

200128a2 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200128a2:	7179                	addi	sp,sp,-48
200128a4:	d606                	sw	ra,44(sp)
200128a6:	d422                	sw	s0,40(sp)
200128a8:	d24a                	sw	s2,36(sp)
200128aa:	d04e                	sw	s3,32(sp)
200128ac:	1800                	addi	s0,sp,48
200128ae:	fca42e23          	sw	a0,-36(s0)
200128b2:	fcb42c23          	sw	a1,-40(s0)
200128b6:	fcc42823          	sw	a2,-48(s0)
200128ba:	fcd42a23          	sw	a3,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
200128be:	fdc42783          	lw	a5,-36(s0)
200128c2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200128c6:	fec42783          	lw	a5,-20(s0)
200128ca:	853e                	mv	a0,a5
200128cc:	3dbd                	jal	2001274a <__metal_driver_sifive_clint0_control_base>
200128ce:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200128d2:	fd842783          	lw	a5,-40(s0)
200128d6:	078e                	slli	a5,a5,0x3
200128d8:	873e                	mv	a4,a5
200128da:	fe842783          	lw	a5,-24(s0)
200128de:	973e                	add	a4,a4,a5
200128e0:	6791                	lui	a5,0x4
200128e2:	0791                	addi	a5,a5,4
200128e4:	97ba                	add	a5,a5,a4
200128e6:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
200128e8:	57fd                	li	a5,-1
200128ea:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200128ec:	fd842783          	lw	a5,-40(s0)
200128f0:	078e                	slli	a5,a5,0x3
200128f2:	873e                	mv	a4,a5
200128f4:	fe842783          	lw	a5,-24(s0)
200128f8:	973e                	add	a4,a4,a5
200128fa:	6791                	lui	a5,0x4
200128fc:	97ba                	add	a5,a5,a4
200128fe:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20012900:	fd042783          	lw	a5,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20012904:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20012906:	fd442783          	lw	a5,-44(s0)
2001290a:	0007d913          	srli	s2,a5,0x0
2001290e:	4981                	li	s3,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20012910:	fd842783          	lw	a5,-40(s0)
20012914:	078e                	slli	a5,a5,0x3
20012916:	873e                	mv	a4,a5
20012918:	fe842783          	lw	a5,-24(s0)
2001291c:	973e                	add	a4,a4,a5
2001291e:	6791                	lui	a5,0x4
20012920:	0791                	addi	a5,a5,4
20012922:	97ba                	add	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20012924:	874a                	mv	a4,s2
20012926:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20012928:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:55
}
2001292a:	853e                	mv	a0,a5
2001292c:	50b2                	lw	ra,44(sp)
2001292e:	5422                	lw	s0,40(sp)
20012930:	5912                	lw	s2,36(sp)
20012932:	5982                	lw	s3,32(sp)
20012934:	6145                	addi	sp,sp,48
20012936:	8082                	ret

20012938 <_get_cpu_intc>:
_get_cpu_intc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20012938:	1101                	addi	sp,sp,-32
2001293a:	ce06                	sw	ra,28(sp)
2001293c:	cc22                	sw	s0,24(sp)
2001293e:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20012940:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20012944:	f14027f3          	csrr	a5,mhartid
20012948:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
2001294c:	fec42783          	lw	a5,-20(s0)
20012950:	853e                	mv	a0,a5
20012952:	45a040ef          	jal	ra,20016dac <metal_cpu_get>
20012956:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2001295a:	fe842503          	lw	a0,-24(s0)
2001295e:	428040ef          	jal	ra,20016d86 <metal_cpu_interrupt_controller>
20012962:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:65
}
20012964:	853e                	mv	a0,a5
20012966:	40f2                	lw	ra,28(sp)
20012968:	4462                	lw	s0,24(sp)
2001296a:	6105                	addi	sp,sp,32
2001296c:	8082                	ret

2001296e <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
2001296e:	7139                	addi	sp,sp,-64
20012970:	de06                	sw	ra,60(sp)
20012972:	dc22                	sw	s0,56(sp)
20012974:	0080                	addi	s0,sp,64
20012976:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001297a:	fcc42503          	lw	a0,-52(s0)
2001297e:	3bdd                	jal	20012774 <__metal_driver_sifive_clint0_num_interrupts>
20012980:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20012984:	fcc42783          	lw	a5,-52(s0)
20012988:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
2001298c:	fe442783          	lw	a5,-28(s0)
20012990:	43dc                	lw	a5,4(a5)
20012992:	efa9                	bnez	a5,200129ec <__metal_driver_riscv_clint0_init+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20012994:	fe042623          	sw	zero,-20(s0)
20012998:	a081                	j	200129d8 <__metal_driver_riscv_clint0_init+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001299a:	fec42583          	lw	a1,-20(s0)
2001299e:	fcc42503          	lw	a0,-52(s0)
200129a2:	3bed                	jal	2001279c <__metal_driver_sifive_clint0_interrupt_parents>
200129a4:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200129a8:	fec42583          	lw	a1,-20(s0)
200129ac:	fcc42503          	lw	a0,-52(s0)
200129b0:	3525                	jal	200127d8 <__metal_driver_sifive_clint0_interrupt_lines>
200129b2:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
200129b6:	fe042783          	lw	a5,-32(s0)
200129ba:	439c                	lw	a5,0(a5)
200129bc:	4fdc                	lw	a5,28(a5)
200129be:	fcc42683          	lw	a3,-52(s0)
200129c2:	4601                	li	a2,0
200129c4:	fdc42583          	lw	a1,-36(s0)
200129c8:	fe042503          	lw	a0,-32(s0)
200129cc:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
200129ce:	fec42783          	lw	a5,-20(s0)
200129d2:	0785                	addi	a5,a5,1
200129d4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
200129d8:	fec42703          	lw	a4,-20(s0)
200129dc:	fe842783          	lw	a5,-24(s0)
200129e0:	faf74de3          	blt	a4,a5,2001299a <__metal_driver_riscv_clint0_init+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
200129e4:	fe442783          	lw	a5,-28(s0)
200129e8:	4705                	li	a4,1
200129ea:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
200129ec:	0001                	nop
200129ee:	50f2                	lw	ra,60(sp)
200129f0:	5462                	lw	s0,56(sp)
200129f2:	6121                	addi	sp,sp,64
200129f4:	8082                	ret

200129f6 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
200129f6:	7139                	addi	sp,sp,-64
200129f8:	de06                	sw	ra,60(sp)
200129fa:	dc22                	sw	s0,56(sp)
200129fc:	0080                	addi	s0,sp,64
200129fe:	fca42623          	sw	a0,-52(s0)
20012a02:	fcb42423          	sw	a1,-56(s0)
20012a06:	fcc42223          	sw	a2,-60(s0)
20012a0a:	fcd42023          	sw	a3,-64(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20012a0e:	57fd                	li	a5,-1
20012a10:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20012a14:	444010ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
20012a18:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20012a1c:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012a20:	3f21                	jal	20012938 <_get_cpu_intc>
20012a22:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20012a26:	fcc42503          	lw	a0,-52(s0)
20012a2a:	33a9                	jal	20012774 <__metal_driver_sifive_clint0_num_interrupts>
20012a2c:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20012a30:	fe042703          	lw	a4,-32(s0)
20012a34:	4785                	li	a5,1
20012a36:	00f70863          	beq	a4,a5,20012a46 <__metal_driver_riscv_clint0_register+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20012a3a:	fe042783          	lw	a5,-32(s0)
20012a3e:	c781                	beqz	a5,20012a46 <__metal_driver_riscv_clint0_register+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20012a40:	fec42783          	lw	a5,-20(s0)
20012a44:	a049                	j	20012ac6 <__metal_driver_riscv_clint0_register+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20012a46:	fe042223          	sw	zero,-28(s0)
20012a4a:	a091                	j	20012a8e <__metal_driver_riscv_clint0_register+0x98>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012a4c:	fe442583          	lw	a1,-28(s0)
20012a50:	fcc42503          	lw	a0,-52(s0)
20012a54:	3351                	jal	200127d8 <__metal_driver_sifive_clint0_interrupt_lines>
20012a56:	fca42a23          	sw	a0,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012a5a:	fe442583          	lw	a1,-28(s0)
20012a5e:	fcc42503          	lw	a0,-52(s0)
20012a62:	3b2d                	jal	2001279c <__metal_driver_sifive_clint0_interrupt_parents>
20012a64:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20012a68:	fdc42703          	lw	a4,-36(s0)
20012a6c:	fe842783          	lw	a5,-24(s0)
20012a70:	00f71863          	bne	a4,a5,20012a80 <__metal_driver_riscv_clint0_register+0x8a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20012a74:	fc842703          	lw	a4,-56(s0)
20012a78:	fd442783          	lw	a5,-44(s0)
20012a7c:	02f70063          	beq	a4,a5,20012a9c <__metal_driver_riscv_clint0_register+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20012a80:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20012a84:	fe442783          	lw	a5,-28(s0)
20012a88:	0785                	addi	a5,a5,1
20012a8a:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20012a8e:	fe442703          	lw	a4,-28(s0)
20012a92:	fd842783          	lw	a5,-40(s0)
20012a96:	faf74be3          	blt	a4,a5,20012a4c <__metal_driver_riscv_clint0_register+0x56>
20012a9a:	a011                	j	20012a9e <__metal_driver_riscv_clint0_register+0xa8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20012a9c:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20012a9e:	fe842783          	lw	a5,-24(s0)
20012aa2:	c385                	beqz	a5,20012ac2 <__metal_driver_riscv_clint0_register+0xcc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20012aa4:	fe842783          	lw	a5,-24(s0)
20012aa8:	439c                	lw	a5,0(a5)
20012aaa:	4fdc                	lw	a5,28(a5)
20012aac:	fc042683          	lw	a3,-64(s0)
20012ab0:	fc442603          	lw	a2,-60(s0)
20012ab4:	fc842583          	lw	a1,-56(s0)
20012ab8:	fe842503          	lw	a0,-24(s0)
20012abc:	9782                	jalr	a5
20012abe:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20012ac2:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:115
}
20012ac6:	853e                	mv	a0,a5
20012ac8:	50f2                	lw	ra,60(sp)
20012aca:	5462                	lw	s0,56(sp)
20012acc:	6121                	addi	sp,sp,64
20012ace:	8082                	ret

20012ad0 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20012ad0:	7179                	addi	sp,sp,-48
20012ad2:	d622                	sw	s0,44(sp)
20012ad4:	1800                	addi	s0,sp,48
20012ad6:	fca42e23          	sw	a0,-36(s0)
20012ada:	fcb42c23          	sw	a1,-40(s0)
20012ade:	fcc42a23          	sw	a2,-44(s0)
20012ae2:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20012ae6:	57fd                	li	a5,-1
20012ae8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20012aec:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:123
}
20012af0:	853e                	mv	a0,a5
20012af2:	5432                	lw	s0,44(sp)
20012af4:	6145                	addi	sp,sp,48
20012af6:	8082                	ret

20012af8 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20012af8:	1101                	addi	sp,sp,-32
20012afa:	ce06                	sw	ra,28(sp)
20012afc:	cc22                	sw	s0,24(sp)
20012afe:	1000                	addi	s0,sp,32
20012b00:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20012b04:	354010ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
20012b08:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:128
}
20012b0a:	853e                	mv	a0,a5
20012b0c:	40f2                	lw	ra,28(sp)
20012b0e:	4462                	lw	s0,24(sp)
20012b10:	6105                	addi	sp,sp,32
20012b12:	8082                	ret

20012b14 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012b14:	7179                	addi	sp,sp,-48
20012b16:	d606                	sw	ra,44(sp)
20012b18:	d422                	sw	s0,40(sp)
20012b1a:	1800                	addi	s0,sp,48
20012b1c:	fca42e23          	sw	a0,-36(s0)
20012b20:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20012b24:	57fd                	li	a5,-1
20012b26:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20012b2a:	3539                	jal	20012938 <_get_cpu_intc>
20012b2c:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20012b30:	fe842783          	lw	a5,-24(s0)
20012b34:	c395                	beqz	a5,20012b58 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20012b36:	fd842703          	lw	a4,-40(s0)
20012b3a:	4785                	li	a5,1
20012b3c:	02e7e063          	bltu	a5,a4,20012b5c <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20012b40:	fe842783          	lw	a5,-24(s0)
20012b44:	439c                	lw	a5,0(a5)
20012b46:	43dc                	lw	a5,4(a5)
20012b48:	fd842583          	lw	a1,-40(s0)
20012b4c:	fe842503          	lw	a0,-24(s0)
20012b50:	9782                	jalr	a5
20012b52:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20012b56:	a021                	j	20012b5e <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20012b58:	0001                	nop
20012b5a:	a011                	j	20012b5e <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20012b5c:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20012b5e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:148
}
20012b62:	853e                	mv	a0,a5
20012b64:	50b2                	lw	ra,44(sp)
20012b66:	5422                	lw	s0,40(sp)
20012b68:	6145                	addi	sp,sp,48
20012b6a:	8082                	ret

20012b6c <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20012b6c:	7139                	addi	sp,sp,-64
20012b6e:	de06                	sw	ra,60(sp)
20012b70:	dc22                	sw	s0,56(sp)
20012b72:	0080                	addi	s0,sp,64
20012b74:	fca42623          	sw	a0,-52(s0)
20012b78:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20012b7c:	57fd                	li	a5,-1
20012b7e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20012b82:	fc842783          	lw	a5,-56(s0)
20012b86:	c7c9                	beqz	a5,20012c10 <__metal_driver_riscv_clint0_enable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20012b88:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012b8c:	3375                	jal	20012938 <_get_cpu_intc>
20012b8e:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012b92:	fcc42503          	lw	a0,-52(s0)
20012b96:	3ef9                	jal	20012774 <__metal_driver_sifive_clint0_num_interrupts>
20012b98:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20012b9c:	fe042223          	sw	zero,-28(s0)
20012ba0:	a091                	j	20012be4 <__metal_driver_riscv_clint0_enable+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012ba2:	fe442583          	lw	a1,-28(s0)
20012ba6:	fcc42503          	lw	a0,-52(s0)
20012baa:	313d                	jal	200127d8 <__metal_driver_sifive_clint0_interrupt_lines>
20012bac:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012bb0:	fe442583          	lw	a1,-28(s0)
20012bb4:	fcc42503          	lw	a0,-52(s0)
20012bb8:	36d5                	jal	2001279c <__metal_driver_sifive_clint0_interrupt_parents>
20012bba:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20012bbe:	fe042703          	lw	a4,-32(s0)
20012bc2:	fe842783          	lw	a5,-24(s0)
20012bc6:	00f71863          	bne	a4,a5,20012bd6 <__metal_driver_riscv_clint0_enable+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20012bca:	fc842703          	lw	a4,-56(s0)
20012bce:	fd842783          	lw	a5,-40(s0)
20012bd2:	02f70063          	beq	a4,a5,20012bf2 <__metal_driver_riscv_clint0_enable+0x86>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20012bd6:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012bda:	fe442783          	lw	a5,-28(s0)
20012bde:	0785                	addi	a5,a5,1
20012be0:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20012be4:	fe442703          	lw	a4,-28(s0)
20012be8:	fdc42783          	lw	a5,-36(s0)
20012bec:	faf74be3          	blt	a4,a5,20012ba2 <__metal_driver_riscv_clint0_enable+0x36>
20012bf0:	a011                	j	20012bf4 <__metal_driver_riscv_clint0_enable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20012bf2:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20012bf4:	fe842783          	lw	a5,-24(s0)
20012bf8:	cf81                	beqz	a5,20012c10 <__metal_driver_riscv_clint0_enable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20012bfa:	fe842783          	lw	a5,-24(s0)
20012bfe:	439c                	lw	a5,0(a5)
20012c00:	53dc                	lw	a5,36(a5)
20012c02:	fc842583          	lw	a1,-56(s0)
20012c06:	fe842503          	lw	a0,-24(s0)
20012c0a:	9782                	jalr	a5
20012c0c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20012c10:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:178
}
20012c14:	853e                	mv	a0,a5
20012c16:	50f2                	lw	ra,60(sp)
20012c18:	5462                	lw	s0,56(sp)
20012c1a:	6121                	addi	sp,sp,64
20012c1c:	8082                	ret

20012c1e <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20012c1e:	7139                	addi	sp,sp,-64
20012c20:	de06                	sw	ra,60(sp)
20012c22:	dc22                	sw	s0,56(sp)
20012c24:	0080                	addi	s0,sp,64
20012c26:	fca42623          	sw	a0,-52(s0)
20012c2a:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20012c2e:	57fd                	li	a5,-1
20012c30:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20012c34:	fc842783          	lw	a5,-56(s0)
20012c38:	c7c9                	beqz	a5,20012cc2 <__metal_driver_riscv_clint0_disable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20012c3a:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012c3e:	39ed                	jal	20012938 <_get_cpu_intc>
20012c40:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012c44:	fcc42503          	lw	a0,-52(s0)
20012c48:	3635                	jal	20012774 <__metal_driver_sifive_clint0_num_interrupts>
20012c4a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20012c4e:	fe042223          	sw	zero,-28(s0)
20012c52:	a091                	j	20012c96 <__metal_driver_riscv_clint0_disable+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012c54:	fe442583          	lw	a1,-28(s0)
20012c58:	fcc42503          	lw	a0,-52(s0)
20012c5c:	3eb5                	jal	200127d8 <__metal_driver_sifive_clint0_interrupt_lines>
20012c5e:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012c62:	fe442583          	lw	a1,-28(s0)
20012c66:	fcc42503          	lw	a0,-52(s0)
20012c6a:	3e0d                	jal	2001279c <__metal_driver_sifive_clint0_interrupt_parents>
20012c6c:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20012c70:	fe042703          	lw	a4,-32(s0)
20012c74:	fe842783          	lw	a5,-24(s0)
20012c78:	00f71863          	bne	a4,a5,20012c88 <__metal_driver_riscv_clint0_disable+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20012c7c:	fc842703          	lw	a4,-56(s0)
20012c80:	fd842783          	lw	a5,-40(s0)
20012c84:	02f70063          	beq	a4,a5,20012ca4 <__metal_driver_riscv_clint0_disable+0x86>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20012c88:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012c8c:	fe442783          	lw	a5,-28(s0)
20012c90:	0785                	addi	a5,a5,1
20012c92:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20012c96:	fe442703          	lw	a4,-28(s0)
20012c9a:	fdc42783          	lw	a5,-36(s0)
20012c9e:	faf74be3          	blt	a4,a5,20012c54 <__metal_driver_riscv_clint0_disable+0x36>
20012ca2:	a011                	j	20012ca6 <__metal_driver_riscv_clint0_disable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20012ca4:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20012ca6:	fe842783          	lw	a5,-24(s0)
20012caa:	cf81                	beqz	a5,20012cc2 <__metal_driver_riscv_clint0_disable+0xa4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20012cac:	fe842783          	lw	a5,-24(s0)
20012cb0:	439c                	lw	a5,0(a5)
20012cb2:	579c                	lw	a5,40(a5)
20012cb4:	fc842583          	lw	a1,-56(s0)
20012cb8:	fe842503          	lw	a0,-24(s0)
20012cbc:	9782                	jalr	a5
20012cbe:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20012cc2:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:208
}
20012cc6:	853e                	mv	a0,a5
20012cc8:	50f2                	lw	ra,60(sp)
20012cca:	5462                	lw	s0,56(sp)
20012ccc:	6121                	addi	sp,sp,64
20012cce:	8082                	ret

20012cd0 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20012cd0:	7179                	addi	sp,sp,-48
20012cd2:	d606                	sw	ra,44(sp)
20012cd4:	d422                	sw	s0,40(sp)
20012cd6:	1800                	addi	s0,sp,48
20012cd8:	fca42e23          	sw	a0,-36(s0)
20012cdc:	fcb42c23          	sw	a1,-40(s0)
20012ce0:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20012ce4:	57fd                	li	a5,-1
20012ce6:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20012cea:	fdc42783          	lw	a5,-36(s0)
20012cee:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20012cf2:	fdc42503          	lw	a0,-36(s0)
20012cf6:	a55ff0ef          	jal	ra,2001274a <__metal_driver_sifive_clint0_control_base>
20012cfa:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20012cfe:	fd842703          	lw	a4,-40(s0)
20012d02:	4791                	li	a5,4
20012d04:	0cf70063          	beq	a4,a5,20012dc4 <__metal_driver_riscv_clint0_command_request+0xf4>
20012d08:	fd842703          	lw	a4,-40(s0)
20012d0c:	4791                	li	a5,4
20012d0e:	0ee7c063          	blt	a5,a4,20012dee <__metal_driver_riscv_clint0_command_request+0x11e>
20012d12:	fd842703          	lw	a4,-40(s0)
20012d16:	478d                	li	a5,3
20012d18:	06f70563          	beq	a4,a5,20012d82 <__metal_driver_riscv_clint0_command_request+0xb2>
20012d1c:	fd842703          	lw	a4,-40(s0)
20012d20:	478d                	li	a5,3
20012d22:	0ce7c663          	blt	a5,a4,20012dee <__metal_driver_riscv_clint0_command_request+0x11e>
20012d26:	fd842703          	lw	a4,-40(s0)
20012d2a:	4785                	li	a5,1
20012d2c:	00f70863          	beq	a4,a5,20012d3c <__metal_driver_riscv_clint0_command_request+0x6c>
20012d30:	fd842703          	lw	a4,-40(s0)
20012d34:	4789                	li	a5,2
20012d36:	02f70263          	beq	a4,a5,20012d5a <__metal_driver_riscv_clint0_command_request+0x8a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20012d3a:	a855                	j	20012dee <__metal_driver_riscv_clint0_command_request+0x11e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20012d3c:	fd442783          	lw	a5,-44(s0)
20012d40:	cbcd                	beqz	a5,20012df2 <__metal_driver_riscv_clint0_command_request+0x122>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012d42:	fe842503          	lw	a0,-24(s0)
20012d46:	34c9                	jal	20012808 <__metal_clint0_mtime_get>
20012d48:	872a                	mv	a4,a0
20012d4a:	87ae                	mv	a5,a1
20012d4c:	fd442683          	lw	a3,-44(s0)
20012d50:	c298                	sw	a4,0(a3)
20012d52:	c2dc                	sw	a5,4(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20012d54:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012d58:	a869                	j	20012df2 <__metal_driver_riscv_clint0_command_request+0x122>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20012d5a:	fd442783          	lw	a5,-44(s0)
20012d5e:	cfc1                	beqz	a5,20012df6 <__metal_driver_riscv_clint0_command_request+0x126>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20012d60:	fd442783          	lw	a5,-44(s0)
20012d64:	439c                	lw	a5,0(a5)
20012d66:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20012d6a:	fe042783          	lw	a5,-32(s0)
20012d6e:	078a                	slli	a5,a5,0x2
20012d70:	873e                	mv	a4,a5
20012d72:	fe442783          	lw	a5,-28(s0)
20012d76:	97ba                	add	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20012d78:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20012d7c:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012d80:	a89d                	j	20012df6 <__metal_driver_riscv_clint0_command_request+0x126>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20012d82:	fd442783          	lw	a5,-44(s0)
20012d86:	cbb5                	beqz	a5,20012dfa <__metal_driver_riscv_clint0_command_request+0x12a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20012d88:	fd442783          	lw	a5,-44(s0)
20012d8c:	439c                	lw	a5,0(a5)
20012d8e:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20012d92:	fe042783          	lw	a5,-32(s0)
20012d96:	078a                	slli	a5,a5,0x2
20012d98:	873e                	mv	a4,a5
20012d9a:	fe442783          	lw	a5,-28(s0)
20012d9e:	97ba                	add	a5,a5,a4
20012da0:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20012da2:	4785                	li	a5,1
20012da4:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20012da6:	0480000f          	fence	o,i
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20012daa:	fe042783          	lw	a5,-32(s0)
20012dae:	078a                	slli	a5,a5,0x2
20012db0:	873e                	mv	a4,a5
20012db2:	fe442783          	lw	a5,-28(s0)
20012db6:	97ba                	add	a5,a5,a4
20012db8:	439c                	lw	a5,0(a5)
20012dba:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20012dbe:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012dc2:	a825                	j	20012dfa <__metal_driver_riscv_clint0_command_request+0x12a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20012dc4:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20012dc8:	fd442783          	lw	a5,-44(s0)
20012dcc:	cb8d                	beqz	a5,20012dfe <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20012dce:	fd442783          	lw	a5,-44(s0)
20012dd2:	439c                	lw	a5,0(a5)
20012dd4:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20012dd8:	fe042783          	lw	a5,-32(s0)
20012ddc:	078a                	slli	a5,a5,0x2
20012dde:	873e                	mv	a4,a5
20012de0:	fe442783          	lw	a5,-28(s0)
20012de4:	97ba                	add	a5,a5,a4
20012de6:	439c                	lw	a5,0(a5)
20012de8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012dec:	a809                	j	20012dfe <__metal_driver_riscv_clint0_command_request+0x12e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20012dee:	0001                	nop
20012df0:	a801                	j	20012e00 <__metal_driver_riscv_clint0_command_request+0x130>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012df2:	0001                	nop
20012df4:	a031                	j	20012e00 <__metal_driver_riscv_clint0_command_request+0x130>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012df6:	0001                	nop
20012df8:	a021                	j	20012e00 <__metal_driver_riscv_clint0_command_request+0x130>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012dfa:	0001                	nop
20012dfc:	a011                	j	20012e00 <__metal_driver_riscv_clint0_command_request+0x130>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012dfe:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20012e00:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:267
}
20012e04:	853e                	mv	a0,a5
20012e06:	50b2                	lw	ra,44(sp)
20012e08:	5422                	lw	s0,40(sp)
20012e0a:	6145                	addi	sp,sp,48
20012e0c:	8082                	ret

20012e0e <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20012e0e:	7179                	addi	sp,sp,-48
20012e10:	d606                	sw	ra,44(sp)
20012e12:	d422                	sw	s0,40(sp)
20012e14:	1800                	addi	s0,sp,48
20012e16:	fca42e23          	sw	a0,-36(s0)
20012e1a:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20012e1e:	7bd030ef          	jal	ra,20016dda <metal_cpu_get_current_hartid>
20012e22:	87aa                	mv	a5,a0
20012e24:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20012e28:	fec40793          	addi	a5,s0,-20
20012e2c:	863e                	mv	a2,a5
20012e2e:	4589                	li	a1,2
20012e30:	fdc42503          	lw	a0,-36(s0)
20012e34:	3d71                	jal	20012cd0 <__metal_driver_riscv_clint0_command_request>
20012e36:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012e38:	853e                	mv	a0,a5
20012e3a:	50b2                	lw	ra,44(sp)
20012e3c:	5422                	lw	s0,40(sp)
20012e3e:	6145                	addi	sp,sp,48
20012e40:	8082                	ret

20012e42 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20012e42:	7179                	addi	sp,sp,-48
20012e44:	d606                	sw	ra,44(sp)
20012e46:	d422                	sw	s0,40(sp)
20012e48:	1800                	addi	s0,sp,48
20012e4a:	fca42e23          	sw	a0,-36(s0)
20012e4e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20012e52:	789030ef          	jal	ra,20016dda <metal_cpu_get_current_hartid>
20012e56:	87aa                	mv	a5,a0
20012e58:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20012e5c:	fec40793          	addi	a5,s0,-20
20012e60:	863e                	mv	a2,a5
20012e62:	458d                	li	a1,3
20012e64:	fdc42503          	lw	a0,-36(s0)
20012e68:	35a5                	jal	20012cd0 <__metal_driver_riscv_clint0_command_request>
20012e6a:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20012e6c:	853e                	mv	a0,a5
20012e6e:	50b2                	lw	ra,44(sp)
20012e70:	5422                	lw	s0,40(sp)
20012e72:	6145                	addi	sp,sp,48
20012e74:	8082                	ret

20012e76 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012e76:	1101                	addi	sp,sp,-32
20012e78:	ce22                	sw	s0,28(sp)
20012e7a:	1000                	addi	s0,sp,32
20012e7c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012e80:	fec42703          	lw	a4,-20(s0)
20012e84:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20012e88:	00f71463          	bne	a4,a5,20012e90 <__metal_driver_cpu_hartid+0x1a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:294
		return 0;
20012e8c:	4781                	li	a5,0
20012e8e:	a011                	j	20012e92 <__metal_driver_cpu_hartid+0x1c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20012e90:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:299
	}
}
20012e92:	853e                	mv	a0,a5
20012e94:	4472                	lw	s0,28(sp)
20012e96:	6105                	addi	sp,sp,32
20012e98:	8082                	ret

20012e9a <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012e9a:	1101                	addi	sp,sp,-32
20012e9c:	ce22                	sw	s0,28(sp)
20012e9e:	1000                	addi	s0,sp,32
20012ea0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ea4:	fec42703          	lw	a4,-20(s0)
20012ea8:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20012eac:	00f71763          	bne	a4,a5,20012eba <__metal_driver_cpu_timebase+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:304
		return 16000000;
20012eb0:	00f427b7          	lui	a5,0xf42
20012eb4:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20012eb8:	a011                	j	20012ebc <__metal_driver_cpu_timebase+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20012eba:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:309
	}
}
20012ebc:	853e                	mv	a0,a5
20012ebe:	4472                	lw	s0,28(sp)
20012ec0:	6105                	addi	sp,sp,32
20012ec2:	8082                	ret

20012ec4 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20012ec4:	1101                	addi	sp,sp,-32
20012ec6:	ce22                	sw	s0,28(sp)
20012ec8:	1000                	addi	s0,sp,32
20012eca:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ece:	fec42703          	lw	a4,-20(s0)
20012ed2:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20012ed6:	00f71763          	bne	a4,a5,20012ee4 <__metal_driver_cpu_interrupt_controller+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20012eda:	800007b7          	lui	a5,0x80000
20012ede:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
20012ee2:	a011                	j	20012ee6 <__metal_driver_cpu_interrupt_controller+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20012ee4:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:319
	}
}
20012ee6:	853e                	mv	a0,a5
20012ee8:	4472                	lw	s0,28(sp)
20012eea:	6105                	addi	sp,sp,32
20012eec:	8082                	ret

20012eee <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20012eee:	1101                	addi	sp,sp,-32
20012ef0:	ce22                	sw	s0,28(sp)
20012ef2:	1000                	addi	s0,sp,32
20012ef4:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ef8:	fec42703          	lw	a4,-20(s0)
20012efc:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20012f00:	00f71463          	bne	a4,a5,20012f08 <__metal_driver_cpu_buserror+0x1a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:334
		return NULL;
20012f04:	4781                	li	a5,0
20012f06:	a011                	j	20012f0a <__metal_driver_cpu_buserror+0x1c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20012f08:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:339
	}
}
20012f0a:	853e                	mv	a0,a5
20012f0c:	4472                	lw	s0,28(sp)
20012f0e:	6105                	addi	sp,sp,32
20012f10:	8082                	ret

20012f12 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20012f12:	1101                	addi	sp,sp,-32
20012f14:	ce22                	sw	s0,28(sp)
20012f16:	1000                	addi	s0,sp,32
20012f18:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20012f1c:	fec42783          	lw	a5,-20(s0)
20012f20:	00f04c63          	bgtz	a5,20012f38 <__metal_driver_cpu_get+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20012f24:	800017b7          	lui	a5,0x80001
20012f28:	fec42703          	lw	a4,-20(s0)
20012f2c:	070a                	slli	a4,a4,0x2
20012f2e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20012f32:	97ba                	add	a5,a5,a4
20012f34:	439c                	lw	a5,0(a5)
20012f36:	a011                	j	20012f3a <__metal_driver_cpu_get+0x28>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20012f38:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:30
}
20012f3a:	853e                	mv	a0,a5
20012f3c:	4472                	lw	s0,28(sp)
20012f3e:	6105                	addi	sp,sp,32
20012f40:	8082                	ret

20012f42 <__metal_myhart_id>:
__metal_myhart_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20012f42:	1101                	addi	sp,sp,-32
20012f44:	ce22                	sw	s0,28(sp)
20012f46:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20012f48:	f14027f3          	csrr	a5,mhartid
20012f4c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20012f50:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:36
}
20012f54:	853e                	mv	a0,a5
20012f56:	4472                	lw	s0,28(sp)
20012f58:	6105                	addi	sp,sp,32
20012f5a:	8082                	ret

20012f5c <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20012f5c:	1101                	addi	sp,sp,-32
20012f5e:	ce22                	sw	s0,28(sp)
20012f60:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20012f62:	47a1                	li	a5,8
20012f64:	3007a7f3          	csrrs	a5,mstatus,a5
20012f68:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012f6c:	0001                	nop
20012f6e:	4472                	lw	s0,28(sp)
20012f70:	6105                	addi	sp,sp,32
20012f72:	8082                	ret

20012f74 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20012f74:	1101                	addi	sp,sp,-32
20012f76:	ce22                	sw	s0,28(sp)
20012f78:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20012f7a:	47a1                	li	a5,8
20012f7c:	3007b7f3          	csrrc	a5,mstatus,a5
20012f80:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012f84:	0001                	nop
20012f86:	4472                	lw	s0,28(sp)
20012f88:	6105                	addi	sp,sp,32
20012f8a:	8082                	ret

20012f8c <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20012f8c:	1101                	addi	sp,sp,-32
20012f8e:	ce22                	sw	s0,28(sp)
20012f90:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012f92:	47a1                	li	a5,8
20012f94:	3047a7f3          	csrrs	a5,mie,a5
20012f98:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012f9c:	0001                	nop
20012f9e:	4472                	lw	s0,28(sp)
20012fa0:	6105                	addi	sp,sp,32
20012fa2:	8082                	ret

20012fa4 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20012fa4:	1101                	addi	sp,sp,-32
20012fa6:	ce22                	sw	s0,28(sp)
20012fa8:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012faa:	47a1                	li	a5,8
20012fac:	3047b7f3          	csrrc	a5,mie,a5
20012fb0:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012fb4:	0001                	nop
20012fb6:	4472                	lw	s0,28(sp)
20012fb8:	6105                	addi	sp,sp,32
20012fba:	8082                	ret

20012fbc <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20012fbc:	1101                	addi	sp,sp,-32
20012fbe:	ce22                	sw	s0,28(sp)
20012fc0:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012fc2:	08000793          	li	a5,128
20012fc6:	3047a7f3          	csrrs	a5,mie,a5
20012fca:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012fce:	0001                	nop
20012fd0:	4472                	lw	s0,28(sp)
20012fd2:	6105                	addi	sp,sp,32
20012fd4:	8082                	ret

20012fd6 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20012fd6:	1101                	addi	sp,sp,-32
20012fd8:	ce22                	sw	s0,28(sp)
20012fda:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012fdc:	08000793          	li	a5,128
20012fe0:	3047b7f3          	csrrc	a5,mie,a5
20012fe4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012fe8:	0001                	nop
20012fea:	4472                	lw	s0,28(sp)
20012fec:	6105                	addi	sp,sp,32
20012fee:	8082                	ret

20012ff0 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20012ff0:	1101                	addi	sp,sp,-32
20012ff2:	ce22                	sw	s0,28(sp)
20012ff4:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012ff6:	6785                	lui	a5,0x1
20012ff8:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012ffc:	3047a7f3          	csrrs	a5,mie,a5
20013000:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013004:	0001                	nop
20013006:	4472                	lw	s0,28(sp)
20013008:	6105                	addi	sp,sp,32
2001300a:	8082                	ret

2001300c <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
2001300c:	1101                	addi	sp,sp,-32
2001300e:	ce22                	sw	s0,28(sp)
20013010:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20013012:	6785                	lui	a5,0x1
20013014:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013018:	3047b7f3          	csrrc	a5,mie,a5
2001301c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013020:	0001                	nop
20013022:	4472                	lw	s0,28(sp)
20013024:	6105                	addi	sp,sp,32
20013026:	8082                	ret

20013028 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20013028:	7179                	addi	sp,sp,-48
2001302a:	d622                	sw	s0,44(sp)
2001302c:	1800                	addi	s0,sp,48
2001302e:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20013032:	fdc42783          	lw	a5,-36(s0)
20013036:	4705                	li	a4,1
20013038:	00f717b3          	sll	a5,a4,a5
2001303c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20013040:	fec42783          	lw	a5,-20(s0)
20013044:	3047a7f3          	csrrs	a5,mie,a5
20013048:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:105
}
2001304c:	0001                	nop
2001304e:	5432                	lw	s0,44(sp)
20013050:	6145                	addi	sp,sp,48
20013052:	8082                	ret

20013054 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20013054:	7179                	addi	sp,sp,-48
20013056:	d622                	sw	s0,44(sp)
20013058:	1800                	addi	s0,sp,48
2001305a:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
2001305e:	fdc42783          	lw	a5,-36(s0)
20013062:	4705                	li	a4,1
20013064:	00f717b3          	sll	a5,a4,a5
20013068:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
2001306c:	fec42783          	lw	a5,-20(s0)
20013070:	3047b7f3          	csrrc	a5,mie,a5
20013074:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:111
}
20013078:	0001                	nop
2001307a:	5432                	lw	s0,44(sp)
2001307c:	6145                	addi	sp,sp,48
2001307e:	8082                	ret

20013080 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20013080:	1101                	addi	sp,sp,-32
20013082:	ce06                	sw	ra,28(sp)
20013084:	cc22                	sw	s0,24(sp)
20013086:	1000                	addi	s0,sp,32
20013088:	fea42623          	sw	a0,-20(s0)
2001308c:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20013090:	06400513          	li	a0,100
20013094:	561030ef          	jal	ra,20016df4 <metal_shutdown>

20013098 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20013098:	1101                	addi	sp,sp,-32
2001309a:	ce06                	sw	ra,28(sp)
2001309c:	cc22                	sw	s0,24(sp)
2001309e:	1000                	addi	s0,sp,32
200130a0:	fea42623          	sw	a0,-20(s0)
200130a4:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
200130a8:	0c800513          	li	a0,200
200130ac:	549030ef          	jal	ra,20016df4 <metal_shutdown>

200130b0 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
200130b0:	715d                	addi	sp,sp,-80
200130b2:	c686                	sw	ra,76(sp)
200130b4:	c496                	sw	t0,72(sp)
200130b6:	c29a                	sw	t1,68(sp)
200130b8:	c09e                	sw	t2,64(sp)
200130ba:	de22                	sw	s0,60(sp)
200130bc:	dc2a                	sw	a0,56(sp)
200130be:	da2e                	sw	a1,52(sp)
200130c0:	d832                	sw	a2,48(sp)
200130c2:	d636                	sw	a3,44(sp)
200130c4:	d43a                	sw	a4,40(sp)
200130c6:	d23e                	sw	a5,36(sp)
200130c8:	d042                	sw	a6,32(sp)
200130ca:	ce46                	sw	a7,28(sp)
200130cc:	cc72                	sw	t3,24(sp)
200130ce:	ca76                	sw	t4,20(sp)
200130d0:	c87a                	sw	t5,16(sp)
200130d2:	c67e                	sw	t6,12(sp)
200130d4:	0880                	addi	s0,sp,80
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
200130d6:	12c00513          	li	a0,300
200130da:	51b030ef          	jal	ra,20016df4 <metal_shutdown>

200130de <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
200130de:	711d                	addi	sp,sp,-96
200130e0:	ce86                	sw	ra,92(sp)
200130e2:	cc96                	sw	t0,88(sp)
200130e4:	ca9a                	sw	t1,84(sp)
200130e6:	c89e                	sw	t2,80(sp)
200130e8:	c6a2                	sw	s0,76(sp)
200130ea:	c4aa                	sw	a0,72(sp)
200130ec:	c2ae                	sw	a1,68(sp)
200130ee:	c0b2                	sw	a2,64(sp)
200130f0:	de36                	sw	a3,60(sp)
200130f2:	dc3a                	sw	a4,56(sp)
200130f4:	da3e                	sw	a5,52(sp)
200130f6:	d842                	sw	a6,48(sp)
200130f8:	d646                	sw	a7,44(sp)
200130fa:	d472                	sw	t3,40(sp)
200130fc:	d276                	sw	t4,36(sp)
200130fe:	d07a                	sw	t5,32(sp)
20013100:	ce7e                	sw	t6,28(sp)
20013102:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20013104:	3d3d                	jal	20012f42 <__metal_myhart_id>
20013106:	872a                	mv	a4,a0
20013108:	800017b7          	lui	a5,0x80001
2001310c:	070a                	slli	a4,a4,0x2
2001310e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013112:	97ba                	add	a5,a5,a4
20013114:	439c                	lw	a5,0(a5)
20013116:	faf42623          	sw	a5,-84(s0)
2001311a:	fac42783          	lw	a5,-84(s0)
2001311e:	c785                	beqz	a5,20013146 <metal_software_interrupt_vector_handler+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20013120:	fac42503          	lw	a0,-84(s0)
20013124:	3345                	jal	20012ec4 <__metal_driver_cpu_interrupt_controller>
20013126:	faa42423          	sw	a0,-88(s0)
2001312a:	fa842783          	lw	a5,-88(s0)
2001312e:	0e07a783          	lw	a5,224(a5)
20013132:	faf42223          	sw	a5,-92(s0)
20013136:	fa842783          	lw	a5,-88(s0)
2001313a:	0d87a783          	lw	a5,216(a5)
2001313e:	fa442583          	lw	a1,-92(s0)
20013142:	450d                	li	a0,3
20013144:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:130
}
20013146:	0001                	nop
20013148:	40f6                	lw	ra,92(sp)
2001314a:	42e6                	lw	t0,88(sp)
2001314c:	4356                	lw	t1,84(sp)
2001314e:	43c6                	lw	t2,80(sp)
20013150:	4436                	lw	s0,76(sp)
20013152:	4526                	lw	a0,72(sp)
20013154:	4596                	lw	a1,68(sp)
20013156:	4606                	lw	a2,64(sp)
20013158:	56f2                	lw	a3,60(sp)
2001315a:	5762                	lw	a4,56(sp)
2001315c:	57d2                	lw	a5,52(sp)
2001315e:	5842                	lw	a6,48(sp)
20013160:	58b2                	lw	a7,44(sp)
20013162:	5e22                	lw	t3,40(sp)
20013164:	5e92                	lw	t4,36(sp)
20013166:	5f02                	lw	t5,32(sp)
20013168:	4ff2                	lw	t6,28(sp)
2001316a:	6125                	addi	sp,sp,96
2001316c:	30200073          	mret

20013170 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20013170:	7179                	addi	sp,sp,-48
20013172:	d606                	sw	ra,44(sp)
20013174:	d422                	sw	s0,40(sp)
20013176:	1800                	addi	s0,sp,48
20013178:	fca42e23          	sw	a0,-36(s0)
2001317c:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013180:	33c9                	jal	20012f42 <__metal_myhart_id>
20013182:	872a                	mv	a4,a0
20013184:	800017b7          	lui	a5,0x80001
20013188:	070a                	slli	a4,a4,0x2
2001318a:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
2001318e:	97ba                	add	a5,a5,a4
20013190:	439c                	lw	a5,0(a5)
20013192:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20013196:	342027f3          	csrr	a5,mcause
2001319a:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
2001319e:	fec42783          	lw	a5,-20(s0)
200131a2:	c795                	beqz	a5,200131ce <__metal_default_sw_handler+0x5e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200131a4:	fec42503          	lw	a0,-20(s0)
200131a8:	3b31                	jal	20012ec4 <__metal_driver_cpu_interrupt_controller>
200131aa:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
200131ae:	fe842783          	lw	a5,-24(s0)
200131b2:	3ff7f793          	andi	a5,a5,1023
200131b6:	fe442703          	lw	a4,-28(s0)
200131ba:	0e878793          	addi	a5,a5,232
200131be:	078a                	slli	a5,a5,0x2
200131c0:	97ba                	add	a5,a5,a4
200131c2:	439c                	lw	a5,0(a5)
200131c4:	fdc42583          	lw	a1,-36(s0)
200131c8:	fec42503          	lw	a0,-20(s0)
200131cc:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
200131ce:	0001                	nop
200131d0:	50b2                	lw	ra,44(sp)
200131d2:	5422                	lw	s0,40(sp)
200131d4:	6145                	addi	sp,sp,48
200131d6:	8082                	ret

200131d8 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
200131d8:	711d                	addi	sp,sp,-96
200131da:	ce86                	sw	ra,92(sp)
200131dc:	cc96                	sw	t0,88(sp)
200131de:	ca9a                	sw	t1,84(sp)
200131e0:	c89e                	sw	t2,80(sp)
200131e2:	c6a2                	sw	s0,76(sp)
200131e4:	c4aa                	sw	a0,72(sp)
200131e6:	c2ae                	sw	a1,68(sp)
200131e8:	c0b2                	sw	a2,64(sp)
200131ea:	de36                	sw	a3,60(sp)
200131ec:	dc3a                	sw	a4,56(sp)
200131ee:	da3e                	sw	a5,52(sp)
200131f0:	d842                	sw	a6,48(sp)
200131f2:	d646                	sw	a7,44(sp)
200131f4:	d472                	sw	t3,40(sp)
200131f6:	d276                	sw	t4,36(sp)
200131f8:	d07a                	sw	t5,32(sp)
200131fa:	ce7e                	sw	t6,28(sp)
200131fc:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
200131fe:	3391                	jal	20012f42 <__metal_myhart_id>
20013200:	872a                	mv	a4,a0
20013202:	800017b7          	lui	a5,0x80001
20013206:	070a                	slli	a4,a4,0x2
20013208:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
2001320c:	97ba                	add	a5,a5,a4
2001320e:	439c                	lw	a5,0(a5)
20013210:	faf42623          	sw	a5,-84(s0)
20013214:	fac42783          	lw	a5,-84(s0)
20013218:	c785                	beqz	a5,20013240 <metal_timer_interrupt_vector_handler+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
2001321a:	fac42503          	lw	a0,-84(s0)
2001321e:	315d                	jal	20012ec4 <__metal_driver_cpu_interrupt_controller>
20013220:	faa42423          	sw	a0,-88(s0)
20013224:	fa842783          	lw	a5,-88(s0)
20013228:	1407a783          	lw	a5,320(a5)
2001322c:	faf42223          	sw	a5,-92(s0)
20013230:	fa842783          	lw	a5,-88(s0)
20013234:	1387a783          	lw	a5,312(a5)
20013238:	fa442583          	lw	a1,-92(s0)
2001323c:	451d                	li	a0,7
2001323e:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:150
}
20013240:	0001                	nop
20013242:	40f6                	lw	ra,92(sp)
20013244:	42e6                	lw	t0,88(sp)
20013246:	4356                	lw	t1,84(sp)
20013248:	43c6                	lw	t2,80(sp)
2001324a:	4436                	lw	s0,76(sp)
2001324c:	4526                	lw	a0,72(sp)
2001324e:	4596                	lw	a1,68(sp)
20013250:	4606                	lw	a2,64(sp)
20013252:	56f2                	lw	a3,60(sp)
20013254:	5762                	lw	a4,56(sp)
20013256:	57d2                	lw	a5,52(sp)
20013258:	5842                	lw	a6,48(sp)
2001325a:	58b2                	lw	a7,44(sp)
2001325c:	5e22                	lw	t3,40(sp)
2001325e:	5e92                	lw	t4,36(sp)
20013260:	5f02                	lw	t5,32(sp)
20013262:	4ff2                	lw	t6,28(sp)
20013264:	6125                	addi	sp,sp,96
20013266:	30200073          	mret

2001326a <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
2001326a:	1101                	addi	sp,sp,-32
2001326c:	ce22                	sw	s0,28(sp)
2001326e:	1000                	addi	s0,sp,32
20013270:	fea42623          	sw	a0,-20(s0)
20013274:	feb42423          	sw	a1,-24(s0)
20013278:	0001                	nop
2001327a:	4472                	lw	s0,28(sp)
2001327c:	6105                	addi	sp,sp,32
2001327e:	8082                	ret

20013280 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20013280:	7179                	addi	sp,sp,-48
20013282:	d606                	sw	ra,44(sp)
20013284:	d422                	sw	s0,40(sp)
20013286:	1800                	addi	s0,sp,48
20013288:	fca42e23          	sw	a0,-36(s0)
2001328c:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20013290:	394d                	jal	20012f42 <__metal_myhart_id>
20013292:	87aa                	mv	a5,a0
20013294:	853e                	mv	a0,a5
20013296:	39b5                	jal	20012f12 <__metal_driver_cpu_get>
20013298:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
2001329c:	fec42503          	lw	a0,-20(s0)
200132a0:	280010ef          	jal	ra,20014520 <__metal_driver_cpu_mtime_get>
200132a4:	fea42023          	sw	a0,-32(s0)
200132a8:	feb42223          	sw	a1,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
200132ac:	fe042703          	lw	a4,-32(s0)
200132b0:	fe442783          	lw	a5,-28(s0)
200132b4:	4529                	li	a0,10
200132b6:	4581                	li	a1,0
200132b8:	00a70633          	add	a2,a4,a0
200132bc:	8832                	mv	a6,a2
200132be:	00e83833          	sltu	a6,a6,a4
200132c2:	00b786b3          	add	a3,a5,a1
200132c6:	00d807b3          	add	a5,a6,a3
200132ca:	86be                	mv	a3,a5
200132cc:	8732                	mv	a4,a2
200132ce:	87b6                	mv	a5,a3
200132d0:	85ba                	mv	a1,a4
200132d2:	863e                	mv	a2,a5
200132d4:	fec42503          	lw	a0,-20(s0)
200132d8:	2ae010ef          	jal	ra,20014586 <__metal_driver_cpu_mtimecmp_set>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:160
}
200132dc:	0001                	nop
200132de:	50b2                	lw	ra,44(sp)
200132e0:	5422                	lw	s0,40(sp)
200132e2:	6145                	addi	sp,sp,48
200132e4:	8082                	ret
	...

20013300 <__metal_exception_handler>:
__metal_exception_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013300:	7119                	addi	sp,sp,-128
20013302:	de86                	sw	ra,124(sp)
20013304:	dc96                	sw	t0,120(sp)
20013306:	da9a                	sw	t1,116(sp)
20013308:	d89e                	sw	t2,112(sp)
2001330a:	d6a2                	sw	s0,108(sp)
2001330c:	d4aa                	sw	a0,104(sp)
2001330e:	d2ae                	sw	a1,100(sp)
20013310:	d0b2                	sw	a2,96(sp)
20013312:	ceb6                	sw	a3,92(sp)
20013314:	ccba                	sw	a4,88(sp)
20013316:	cabe                	sw	a5,84(sp)
20013318:	c8c2                	sw	a6,80(sp)
2001331a:	c6c6                	sw	a7,76(sp)
2001331c:	c4f2                	sw	t3,72(sp)
2001331e:	c2f6                	sw	t4,68(sp)
20013320:	c0fa                	sw	t5,64(sp)
20013322:	de7e                	sw	t6,60(sp)
20013324:	0100                	addi	s0,sp,128
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013326:	3931                	jal	20012f42 <__metal_myhart_id>
20013328:	872a                	mv	a4,a0
2001332a:	800017b7          	lui	a5,0x80001
2001332e:	070a                	slli	a4,a4,0x2
20013330:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013334:	97ba                	add	a5,a5,a4
20013336:	439c                	lw	a5,0(a5)
20013338:	faf42623          	sw	a5,-84(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2001333c:	342027f3          	csrr	a5,mcause
20013340:	faf42423          	sw	a5,-88(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20013344:	341027f3          	csrr	a5,mepc
20013348:	faf42223          	sw	a5,-92(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2001334c:	343027f3          	csrr	a5,mtval
20013350:	faf42023          	sw	a5,-96(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013354:	305027f3          	csrr	a5,mtvec
20013358:	f8f42e23          	sw	a5,-100(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2001335c:	fac42783          	lw	a5,-84(s0)
20013360:	cbfd                	beqz	a5,20013456 <__metal_exception_handler+0x156>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013362:	fac42503          	lw	a0,-84(s0)
20013366:	b5fff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
2001336a:	f8a42c23          	sw	a0,-104(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
2001336e:	fa842783          	lw	a5,-88(s0)
20013372:	3ff7f793          	andi	a5,a5,1023
20013376:	f8f42a23          	sw	a5,-108(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2001337a:	fa842783          	lw	a5,-88(s0)
2001337e:	0a07de63          	bgez	a5,2001343a <__metal_exception_handler+0x13a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013382:	f9442703          	lw	a4,-108(s0)
20013386:	08000793          	li	a5,128
2001338a:	02f71263          	bne	a4,a5,200133ae <__metal_exception_handler+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001338e:	f9842783          	lw	a5,-104(s0)
20013392:	3987a783          	lw	a5,920(a5)
20013396:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001339a:	f9842783          	lw	a5,-104(s0)
2001339e:	3907a783          	lw	a5,912(a5)
200133a2:	f8c42583          	lw	a1,-116(s0)
200133a6:	f9442503          	lw	a0,-108(s0)
200133aa:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
200133ac:	a06d                	j	20013456 <__metal_exception_handler+0x156>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200133ae:	f9442703          	lw	a4,-108(s0)
200133b2:	47ad                	li	a5,11
200133b4:	00e7d763          	bge	a5,a4,200133c2 <__metal_exception_handler+0xc2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
200133b8:	f9c42783          	lw	a5,-100(s0)
200133bc:	03f7f793          	andi	a5,a5,63
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200133c0:	ef9d                	bnez	a5,200133fe <__metal_exception_handler+0xfe>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
200133c2:	f9842683          	lw	a3,-104(s0)
200133c6:	f9442703          	lw	a4,-108(s0)
200133ca:	87ba                	mv	a5,a4
200133cc:	0786                	slli	a5,a5,0x1
200133ce:	97ba                	add	a5,a5,a4
200133d0:	078e                	slli	a5,a5,0x3
200133d2:	97b6                	add	a5,a5,a3
200133d4:	0987a783          	lw	a5,152(a5)
200133d8:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
200133dc:	f9842683          	lw	a3,-104(s0)
200133e0:	f9442703          	lw	a4,-108(s0)
200133e4:	87ba                	mv	a5,a4
200133e6:	0786                	slli	a5,a5,0x1
200133e8:	97ba                	add	a5,a5,a4
200133ea:	078e                	slli	a5,a5,0x3
200133ec:	97b6                	add	a5,a5,a3
200133ee:	0907a783          	lw	a5,144(a5)
200133f2:	f8c42583          	lw	a1,-116(s0)
200133f6:	f9442503          	lw	a0,-108(s0)
200133fa:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
200133fc:	a8a9                	j	20013456 <__metal_exception_handler+0x156>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
200133fe:	f9c42783          	lw	a5,-100(s0)
20013402:	03f7f713          	andi	a4,a5,63
20013406:	4789                	li	a5,2
20013408:	04f71763          	bne	a4,a5,20013456 <__metal_exception_handler+0x156>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001340c:	307027f3          	csrr	a5,mtvt
20013410:	f8f42823          	sw	a5,-112(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013414:	f9842783          	lw	a5,-104(s0)
20013418:	0dc7a783          	lw	a5,220(a5)
2001341c:	f8f42623          	sw	a5,-116(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20013420:	f9042783          	lw	a5,-112(s0)
20013424:	439c                	lw	a5,0(a5)
20013426:	f8f42423          	sw	a5,-120(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2001342a:	f8842783          	lw	a5,-120(s0)
2001342e:	f8c42583          	lw	a1,-116(s0)
20013432:	f9442503          	lw	a0,-108(s0)
20013436:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20013438:	a839                	j	20013456 <__metal_exception_handler+0x156>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2001343a:	f9842703          	lw	a4,-104(s0)
2001343e:	f9442783          	lw	a5,-108(s0)
20013442:	0e878793          	addi	a5,a5,232
20013446:	078a                	slli	a5,a5,0x2
20013448:	97ba                	add	a5,a5,a4
2001344a:	439c                	lw	a5,0(a5)
2001344c:	f9442583          	lw	a1,-108(s0)
20013450:	fac42503          	lw	a0,-84(s0)
20013454:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20013456:	50f6                	lw	ra,124(sp)
20013458:	52e6                	lw	t0,120(sp)
2001345a:	5356                	lw	t1,116(sp)
2001345c:	53c6                	lw	t2,112(sp)
2001345e:	5436                	lw	s0,108(sp)
20013460:	5526                	lw	a0,104(sp)
20013462:	5596                	lw	a1,100(sp)
20013464:	5606                	lw	a2,96(sp)
20013466:	46f6                	lw	a3,92(sp)
20013468:	4766                	lw	a4,88(sp)
2001346a:	47d6                	lw	a5,84(sp)
2001346c:	4846                	lw	a6,80(sp)
2001346e:	48b6                	lw	a7,76(sp)
20013470:	4e26                	lw	t3,72(sp)
20013472:	4e96                	lw	t4,68(sp)
20013474:	4f06                	lw	t5,64(sp)
20013476:	5ff2                	lw	t6,60(sp)
20013478:	6109                	addi	sp,sp,128
2001347a:	30200073          	mret
	...

200134f8 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
200134f8:	711d                	addi	sp,sp,-96
200134fa:	ce86                	sw	ra,92(sp)
200134fc:	cc96                	sw	t0,88(sp)
200134fe:	ca9a                	sw	t1,84(sp)
20013500:	c89e                	sw	t2,80(sp)
20013502:	c6a2                	sw	s0,76(sp)
20013504:	c4aa                	sw	a0,72(sp)
20013506:	c2ae                	sw	a1,68(sp)
20013508:	c0b2                	sw	a2,64(sp)
2001350a:	de36                	sw	a3,60(sp)
2001350c:	dc3a                	sw	a4,56(sp)
2001350e:	da3e                	sw	a5,52(sp)
20013510:	d842                	sw	a6,48(sp)
20013512:	d646                	sw	a7,44(sp)
20013514:	d472                	sw	t3,40(sp)
20013516:	d276                	sw	t4,36(sp)
20013518:	d07a                	sw	t5,32(sp)
2001351a:	ce7e                	sw	t6,28(sp)
2001351c:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001351e:	a25ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013522:	872a                	mv	a4,a0
20013524:	800017b7          	lui	a5,0x80001
20013528:	070a                	slli	a4,a4,0x2
2001352a:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
2001352e:	97ba                	add	a5,a5,a4
20013530:	439c                	lw	a5,0(a5)
20013532:	faf42623          	sw	a5,-84(s0)
20013536:	fac42783          	lw	a5,-84(s0)
2001353a:	c78d                	beqz	a5,20013564 <metal_lc0_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2001353c:	fac42503          	lw	a0,-84(s0)
20013540:	985ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013544:	faa42423          	sw	a0,-88(s0)
20013548:	fa842783          	lw	a5,-88(s0)
2001354c:	2187a783          	lw	a5,536(a5)
20013550:	faf42223          	sw	a5,-92(s0)
20013554:	fa842783          	lw	a5,-88(s0)
20013558:	2107a783          	lw	a5,528(a5)
2001355c:	fa442583          	lw	a1,-92(s0)
20013560:	4541                	li	a0,16
20013562:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:216
}
20013564:	0001                	nop
20013566:	40f6                	lw	ra,92(sp)
20013568:	42e6                	lw	t0,88(sp)
2001356a:	4356                	lw	t1,84(sp)
2001356c:	43c6                	lw	t2,80(sp)
2001356e:	4436                	lw	s0,76(sp)
20013570:	4526                	lw	a0,72(sp)
20013572:	4596                	lw	a1,68(sp)
20013574:	4606                	lw	a2,64(sp)
20013576:	56f2                	lw	a3,60(sp)
20013578:	5762                	lw	a4,56(sp)
2001357a:	57d2                	lw	a5,52(sp)
2001357c:	5842                	lw	a6,48(sp)
2001357e:	58b2                	lw	a7,44(sp)
20013580:	5e22                	lw	t3,40(sp)
20013582:	5e92                	lw	t4,36(sp)
20013584:	5f02                	lw	t5,32(sp)
20013586:	4ff2                	lw	t6,28(sp)
20013588:	6125                	addi	sp,sp,96
2001358a:	30200073          	mret

2001358e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001358e:	711d                	addi	sp,sp,-96
20013590:	ce86                	sw	ra,92(sp)
20013592:	cc96                	sw	t0,88(sp)
20013594:	ca9a                	sw	t1,84(sp)
20013596:	c89e                	sw	t2,80(sp)
20013598:	c6a2                	sw	s0,76(sp)
2001359a:	c4aa                	sw	a0,72(sp)
2001359c:	c2ae                	sw	a1,68(sp)
2001359e:	c0b2                	sw	a2,64(sp)
200135a0:	de36                	sw	a3,60(sp)
200135a2:	dc3a                	sw	a4,56(sp)
200135a4:	da3e                	sw	a5,52(sp)
200135a6:	d842                	sw	a6,48(sp)
200135a8:	d646                	sw	a7,44(sp)
200135aa:	d472                	sw	t3,40(sp)
200135ac:	d276                	sw	t4,36(sp)
200135ae:	d07a                	sw	t5,32(sp)
200135b0:	ce7e                	sw	t6,28(sp)
200135b2:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
200135b4:	98fff0ef          	jal	ra,20012f42 <__metal_myhart_id>
200135b8:	872a                	mv	a4,a0
200135ba:	800017b7          	lui	a5,0x80001
200135be:	070a                	slli	a4,a4,0x2
200135c0:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
200135c4:	97ba                	add	a5,a5,a4
200135c6:	439c                	lw	a5,0(a5)
200135c8:	faf42623          	sw	a5,-84(s0)
200135cc:	fac42783          	lw	a5,-84(s0)
200135d0:	c78d                	beqz	a5,200135fa <metal_lc1_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
200135d2:	fac42503          	lw	a0,-84(s0)
200135d6:	8efff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200135da:	faa42423          	sw	a0,-88(s0)
200135de:	fa842783          	lw	a5,-88(s0)
200135e2:	2307a783          	lw	a5,560(a5)
200135e6:	faf42223          	sw	a5,-92(s0)
200135ea:	fa842783          	lw	a5,-88(s0)
200135ee:	2287a783          	lw	a5,552(a5)
200135f2:	fa442583          	lw	a1,-92(s0)
200135f6:	4545                	li	a0,17
200135f8:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:221
}
200135fa:	0001                	nop
200135fc:	40f6                	lw	ra,92(sp)
200135fe:	42e6                	lw	t0,88(sp)
20013600:	4356                	lw	t1,84(sp)
20013602:	43c6                	lw	t2,80(sp)
20013604:	4436                	lw	s0,76(sp)
20013606:	4526                	lw	a0,72(sp)
20013608:	4596                	lw	a1,68(sp)
2001360a:	4606                	lw	a2,64(sp)
2001360c:	56f2                	lw	a3,60(sp)
2001360e:	5762                	lw	a4,56(sp)
20013610:	57d2                	lw	a5,52(sp)
20013612:	5842                	lw	a6,48(sp)
20013614:	58b2                	lw	a7,44(sp)
20013616:	5e22                	lw	t3,40(sp)
20013618:	5e92                	lw	t4,36(sp)
2001361a:	5f02                	lw	t5,32(sp)
2001361c:	4ff2                	lw	t6,28(sp)
2001361e:	6125                	addi	sp,sp,96
20013620:	30200073          	mret

20013624 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20013624:	711d                	addi	sp,sp,-96
20013626:	ce86                	sw	ra,92(sp)
20013628:	cc96                	sw	t0,88(sp)
2001362a:	ca9a                	sw	t1,84(sp)
2001362c:	c89e                	sw	t2,80(sp)
2001362e:	c6a2                	sw	s0,76(sp)
20013630:	c4aa                	sw	a0,72(sp)
20013632:	c2ae                	sw	a1,68(sp)
20013634:	c0b2                	sw	a2,64(sp)
20013636:	de36                	sw	a3,60(sp)
20013638:	dc3a                	sw	a4,56(sp)
2001363a:	da3e                	sw	a5,52(sp)
2001363c:	d842                	sw	a6,48(sp)
2001363e:	d646                	sw	a7,44(sp)
20013640:	d472                	sw	t3,40(sp)
20013642:	d276                	sw	t4,36(sp)
20013644:	d07a                	sw	t5,32(sp)
20013646:	ce7e                	sw	t6,28(sp)
20013648:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2001364a:	8f9ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
2001364e:	872a                	mv	a4,a0
20013650:	800017b7          	lui	a5,0x80001
20013654:	070a                	slli	a4,a4,0x2
20013656:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
2001365a:	97ba                	add	a5,a5,a4
2001365c:	439c                	lw	a5,0(a5)
2001365e:	faf42623          	sw	a5,-84(s0)
20013662:	fac42783          	lw	a5,-84(s0)
20013666:	c78d                	beqz	a5,20013690 <metal_lc2_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20013668:	fac42503          	lw	a0,-84(s0)
2001366c:	859ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013670:	faa42423          	sw	a0,-88(s0)
20013674:	fa842783          	lw	a5,-88(s0)
20013678:	2487a783          	lw	a5,584(a5)
2001367c:	faf42223          	sw	a5,-92(s0)
20013680:	fa842783          	lw	a5,-88(s0)
20013684:	2407a783          	lw	a5,576(a5)
20013688:	fa442583          	lw	a1,-92(s0)
2001368c:	4549                	li	a0,18
2001368e:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:226
}
20013690:	0001                	nop
20013692:	40f6                	lw	ra,92(sp)
20013694:	42e6                	lw	t0,88(sp)
20013696:	4356                	lw	t1,84(sp)
20013698:	43c6                	lw	t2,80(sp)
2001369a:	4436                	lw	s0,76(sp)
2001369c:	4526                	lw	a0,72(sp)
2001369e:	4596                	lw	a1,68(sp)
200136a0:	4606                	lw	a2,64(sp)
200136a2:	56f2                	lw	a3,60(sp)
200136a4:	5762                	lw	a4,56(sp)
200136a6:	57d2                	lw	a5,52(sp)
200136a8:	5842                	lw	a6,48(sp)
200136aa:	58b2                	lw	a7,44(sp)
200136ac:	5e22                	lw	t3,40(sp)
200136ae:	5e92                	lw	t4,36(sp)
200136b0:	5f02                	lw	t5,32(sp)
200136b2:	4ff2                	lw	t6,28(sp)
200136b4:	6125                	addi	sp,sp,96
200136b6:	30200073          	mret

200136ba <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200136ba:	711d                	addi	sp,sp,-96
200136bc:	ce86                	sw	ra,92(sp)
200136be:	cc96                	sw	t0,88(sp)
200136c0:	ca9a                	sw	t1,84(sp)
200136c2:	c89e                	sw	t2,80(sp)
200136c4:	c6a2                	sw	s0,76(sp)
200136c6:	c4aa                	sw	a0,72(sp)
200136c8:	c2ae                	sw	a1,68(sp)
200136ca:	c0b2                	sw	a2,64(sp)
200136cc:	de36                	sw	a3,60(sp)
200136ce:	dc3a                	sw	a4,56(sp)
200136d0:	da3e                	sw	a5,52(sp)
200136d2:	d842                	sw	a6,48(sp)
200136d4:	d646                	sw	a7,44(sp)
200136d6:	d472                	sw	t3,40(sp)
200136d8:	d276                	sw	t4,36(sp)
200136da:	d07a                	sw	t5,32(sp)
200136dc:	ce7e                	sw	t6,28(sp)
200136de:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200136e0:	863ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
200136e4:	872a                	mv	a4,a0
200136e6:	800017b7          	lui	a5,0x80001
200136ea:	070a                	slli	a4,a4,0x2
200136ec:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
200136f0:	97ba                	add	a5,a5,a4
200136f2:	439c                	lw	a5,0(a5)
200136f4:	faf42623          	sw	a5,-84(s0)
200136f8:	fac42783          	lw	a5,-84(s0)
200136fc:	c78d                	beqz	a5,20013726 <metal_lc3_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
200136fe:	fac42503          	lw	a0,-84(s0)
20013702:	fc2ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013706:	faa42423          	sw	a0,-88(s0)
2001370a:	fa842783          	lw	a5,-88(s0)
2001370e:	2607a783          	lw	a5,608(a5)
20013712:	faf42223          	sw	a5,-92(s0)
20013716:	fa842783          	lw	a5,-88(s0)
2001371a:	2587a783          	lw	a5,600(a5)
2001371e:	fa442583          	lw	a1,-92(s0)
20013722:	454d                	li	a0,19
20013724:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:231
}
20013726:	0001                	nop
20013728:	40f6                	lw	ra,92(sp)
2001372a:	42e6                	lw	t0,88(sp)
2001372c:	4356                	lw	t1,84(sp)
2001372e:	43c6                	lw	t2,80(sp)
20013730:	4436                	lw	s0,76(sp)
20013732:	4526                	lw	a0,72(sp)
20013734:	4596                	lw	a1,68(sp)
20013736:	4606                	lw	a2,64(sp)
20013738:	56f2                	lw	a3,60(sp)
2001373a:	5762                	lw	a4,56(sp)
2001373c:	57d2                	lw	a5,52(sp)
2001373e:	5842                	lw	a6,48(sp)
20013740:	58b2                	lw	a7,44(sp)
20013742:	5e22                	lw	t3,40(sp)
20013744:	5e92                	lw	t4,36(sp)
20013746:	5f02                	lw	t5,32(sp)
20013748:	4ff2                	lw	t6,28(sp)
2001374a:	6125                	addi	sp,sp,96
2001374c:	30200073          	mret

20013750 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20013750:	711d                	addi	sp,sp,-96
20013752:	ce86                	sw	ra,92(sp)
20013754:	cc96                	sw	t0,88(sp)
20013756:	ca9a                	sw	t1,84(sp)
20013758:	c89e                	sw	t2,80(sp)
2001375a:	c6a2                	sw	s0,76(sp)
2001375c:	c4aa                	sw	a0,72(sp)
2001375e:	c2ae                	sw	a1,68(sp)
20013760:	c0b2                	sw	a2,64(sp)
20013762:	de36                	sw	a3,60(sp)
20013764:	dc3a                	sw	a4,56(sp)
20013766:	da3e                	sw	a5,52(sp)
20013768:	d842                	sw	a6,48(sp)
2001376a:	d646                	sw	a7,44(sp)
2001376c:	d472                	sw	t3,40(sp)
2001376e:	d276                	sw	t4,36(sp)
20013770:	d07a                	sw	t5,32(sp)
20013772:	ce7e                	sw	t6,28(sp)
20013774:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20013776:	fccff0ef          	jal	ra,20012f42 <__metal_myhart_id>
2001377a:	872a                	mv	a4,a0
2001377c:	800017b7          	lui	a5,0x80001
20013780:	070a                	slli	a4,a4,0x2
20013782:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013786:	97ba                	add	a5,a5,a4
20013788:	439c                	lw	a5,0(a5)
2001378a:	faf42623          	sw	a5,-84(s0)
2001378e:	fac42783          	lw	a5,-84(s0)
20013792:	c78d                	beqz	a5,200137bc <metal_lc4_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20013794:	fac42503          	lw	a0,-84(s0)
20013798:	f2cff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
2001379c:	faa42423          	sw	a0,-88(s0)
200137a0:	fa842783          	lw	a5,-88(s0)
200137a4:	2787a783          	lw	a5,632(a5)
200137a8:	faf42223          	sw	a5,-92(s0)
200137ac:	fa842783          	lw	a5,-88(s0)
200137b0:	2707a783          	lw	a5,624(a5)
200137b4:	fa442583          	lw	a1,-92(s0)
200137b8:	4551                	li	a0,20
200137ba:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:236
}
200137bc:	0001                	nop
200137be:	40f6                	lw	ra,92(sp)
200137c0:	42e6                	lw	t0,88(sp)
200137c2:	4356                	lw	t1,84(sp)
200137c4:	43c6                	lw	t2,80(sp)
200137c6:	4436                	lw	s0,76(sp)
200137c8:	4526                	lw	a0,72(sp)
200137ca:	4596                	lw	a1,68(sp)
200137cc:	4606                	lw	a2,64(sp)
200137ce:	56f2                	lw	a3,60(sp)
200137d0:	5762                	lw	a4,56(sp)
200137d2:	57d2                	lw	a5,52(sp)
200137d4:	5842                	lw	a6,48(sp)
200137d6:	58b2                	lw	a7,44(sp)
200137d8:	5e22                	lw	t3,40(sp)
200137da:	5e92                	lw	t4,36(sp)
200137dc:	5f02                	lw	t5,32(sp)
200137de:	4ff2                	lw	t6,28(sp)
200137e0:	6125                	addi	sp,sp,96
200137e2:	30200073          	mret

200137e6 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200137e6:	711d                	addi	sp,sp,-96
200137e8:	ce86                	sw	ra,92(sp)
200137ea:	cc96                	sw	t0,88(sp)
200137ec:	ca9a                	sw	t1,84(sp)
200137ee:	c89e                	sw	t2,80(sp)
200137f0:	c6a2                	sw	s0,76(sp)
200137f2:	c4aa                	sw	a0,72(sp)
200137f4:	c2ae                	sw	a1,68(sp)
200137f6:	c0b2                	sw	a2,64(sp)
200137f8:	de36                	sw	a3,60(sp)
200137fa:	dc3a                	sw	a4,56(sp)
200137fc:	da3e                	sw	a5,52(sp)
200137fe:	d842                	sw	a6,48(sp)
20013800:	d646                	sw	a7,44(sp)
20013802:	d472                	sw	t3,40(sp)
20013804:	d276                	sw	t4,36(sp)
20013806:	d07a                	sw	t5,32(sp)
20013808:	ce7e                	sw	t6,28(sp)
2001380a:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001380c:	f36ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013810:	872a                	mv	a4,a0
20013812:	800017b7          	lui	a5,0x80001
20013816:	070a                	slli	a4,a4,0x2
20013818:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
2001381c:	97ba                	add	a5,a5,a4
2001381e:	439c                	lw	a5,0(a5)
20013820:	faf42623          	sw	a5,-84(s0)
20013824:	fac42783          	lw	a5,-84(s0)
20013828:	c78d                	beqz	a5,20013852 <metal_lc5_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2001382a:	fac42503          	lw	a0,-84(s0)
2001382e:	e96ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013832:	faa42423          	sw	a0,-88(s0)
20013836:	fa842783          	lw	a5,-88(s0)
2001383a:	2907a783          	lw	a5,656(a5)
2001383e:	faf42223          	sw	a5,-92(s0)
20013842:	fa842783          	lw	a5,-88(s0)
20013846:	2887a783          	lw	a5,648(a5)
2001384a:	fa442583          	lw	a1,-92(s0)
2001384e:	4555                	li	a0,21
20013850:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:241
}
20013852:	0001                	nop
20013854:	40f6                	lw	ra,92(sp)
20013856:	42e6                	lw	t0,88(sp)
20013858:	4356                	lw	t1,84(sp)
2001385a:	43c6                	lw	t2,80(sp)
2001385c:	4436                	lw	s0,76(sp)
2001385e:	4526                	lw	a0,72(sp)
20013860:	4596                	lw	a1,68(sp)
20013862:	4606                	lw	a2,64(sp)
20013864:	56f2                	lw	a3,60(sp)
20013866:	5762                	lw	a4,56(sp)
20013868:	57d2                	lw	a5,52(sp)
2001386a:	5842                	lw	a6,48(sp)
2001386c:	58b2                	lw	a7,44(sp)
2001386e:	5e22                	lw	t3,40(sp)
20013870:	5e92                	lw	t4,36(sp)
20013872:	5f02                	lw	t5,32(sp)
20013874:	4ff2                	lw	t6,28(sp)
20013876:	6125                	addi	sp,sp,96
20013878:	30200073          	mret

2001387c <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2001387c:	711d                	addi	sp,sp,-96
2001387e:	ce86                	sw	ra,92(sp)
20013880:	cc96                	sw	t0,88(sp)
20013882:	ca9a                	sw	t1,84(sp)
20013884:	c89e                	sw	t2,80(sp)
20013886:	c6a2                	sw	s0,76(sp)
20013888:	c4aa                	sw	a0,72(sp)
2001388a:	c2ae                	sw	a1,68(sp)
2001388c:	c0b2                	sw	a2,64(sp)
2001388e:	de36                	sw	a3,60(sp)
20013890:	dc3a                	sw	a4,56(sp)
20013892:	da3e                	sw	a5,52(sp)
20013894:	d842                	sw	a6,48(sp)
20013896:	d646                	sw	a7,44(sp)
20013898:	d472                	sw	t3,40(sp)
2001389a:	d276                	sw	t4,36(sp)
2001389c:	d07a                	sw	t5,32(sp)
2001389e:	ce7e                	sw	t6,28(sp)
200138a0:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
200138a2:	ea0ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
200138a6:	872a                	mv	a4,a0
200138a8:	800017b7          	lui	a5,0x80001
200138ac:	070a                	slli	a4,a4,0x2
200138ae:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
200138b2:	97ba                	add	a5,a5,a4
200138b4:	439c                	lw	a5,0(a5)
200138b6:	faf42623          	sw	a5,-84(s0)
200138ba:	fac42783          	lw	a5,-84(s0)
200138be:	c78d                	beqz	a5,200138e8 <metal_lc6_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200138c0:	fac42503          	lw	a0,-84(s0)
200138c4:	e00ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200138c8:	faa42423          	sw	a0,-88(s0)
200138cc:	fa842783          	lw	a5,-88(s0)
200138d0:	2a87a783          	lw	a5,680(a5)
200138d4:	faf42223          	sw	a5,-92(s0)
200138d8:	fa842783          	lw	a5,-88(s0)
200138dc:	2a07a783          	lw	a5,672(a5)
200138e0:	fa442583          	lw	a1,-92(s0)
200138e4:	4559                	li	a0,22
200138e6:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:246
}
200138e8:	0001                	nop
200138ea:	40f6                	lw	ra,92(sp)
200138ec:	42e6                	lw	t0,88(sp)
200138ee:	4356                	lw	t1,84(sp)
200138f0:	43c6                	lw	t2,80(sp)
200138f2:	4436                	lw	s0,76(sp)
200138f4:	4526                	lw	a0,72(sp)
200138f6:	4596                	lw	a1,68(sp)
200138f8:	4606                	lw	a2,64(sp)
200138fa:	56f2                	lw	a3,60(sp)
200138fc:	5762                	lw	a4,56(sp)
200138fe:	57d2                	lw	a5,52(sp)
20013900:	5842                	lw	a6,48(sp)
20013902:	58b2                	lw	a7,44(sp)
20013904:	5e22                	lw	t3,40(sp)
20013906:	5e92                	lw	t4,36(sp)
20013908:	5f02                	lw	t5,32(sp)
2001390a:	4ff2                	lw	t6,28(sp)
2001390c:	6125                	addi	sp,sp,96
2001390e:	30200073          	mret

20013912 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20013912:	711d                	addi	sp,sp,-96
20013914:	ce86                	sw	ra,92(sp)
20013916:	cc96                	sw	t0,88(sp)
20013918:	ca9a                	sw	t1,84(sp)
2001391a:	c89e                	sw	t2,80(sp)
2001391c:	c6a2                	sw	s0,76(sp)
2001391e:	c4aa                	sw	a0,72(sp)
20013920:	c2ae                	sw	a1,68(sp)
20013922:	c0b2                	sw	a2,64(sp)
20013924:	de36                	sw	a3,60(sp)
20013926:	dc3a                	sw	a4,56(sp)
20013928:	da3e                	sw	a5,52(sp)
2001392a:	d842                	sw	a6,48(sp)
2001392c:	d646                	sw	a7,44(sp)
2001392e:	d472                	sw	t3,40(sp)
20013930:	d276                	sw	t4,36(sp)
20013932:	d07a                	sw	t5,32(sp)
20013934:	ce7e                	sw	t6,28(sp)
20013936:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20013938:	e0aff0ef          	jal	ra,20012f42 <__metal_myhart_id>
2001393c:	872a                	mv	a4,a0
2001393e:	800017b7          	lui	a5,0x80001
20013942:	070a                	slli	a4,a4,0x2
20013944:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013948:	97ba                	add	a5,a5,a4
2001394a:	439c                	lw	a5,0(a5)
2001394c:	faf42623          	sw	a5,-84(s0)
20013950:	fac42783          	lw	a5,-84(s0)
20013954:	c78d                	beqz	a5,2001397e <metal_lc7_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20013956:	fac42503          	lw	a0,-84(s0)
2001395a:	d6aff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
2001395e:	faa42423          	sw	a0,-88(s0)
20013962:	fa842783          	lw	a5,-88(s0)
20013966:	2c07a783          	lw	a5,704(a5)
2001396a:	faf42223          	sw	a5,-92(s0)
2001396e:	fa842783          	lw	a5,-88(s0)
20013972:	2b87a783          	lw	a5,696(a5)
20013976:	fa442583          	lw	a1,-92(s0)
2001397a:	455d                	li	a0,23
2001397c:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:251
}
2001397e:	0001                	nop
20013980:	40f6                	lw	ra,92(sp)
20013982:	42e6                	lw	t0,88(sp)
20013984:	4356                	lw	t1,84(sp)
20013986:	43c6                	lw	t2,80(sp)
20013988:	4436                	lw	s0,76(sp)
2001398a:	4526                	lw	a0,72(sp)
2001398c:	4596                	lw	a1,68(sp)
2001398e:	4606                	lw	a2,64(sp)
20013990:	56f2                	lw	a3,60(sp)
20013992:	5762                	lw	a4,56(sp)
20013994:	57d2                	lw	a5,52(sp)
20013996:	5842                	lw	a6,48(sp)
20013998:	58b2                	lw	a7,44(sp)
2001399a:	5e22                	lw	t3,40(sp)
2001399c:	5e92                	lw	t4,36(sp)
2001399e:	5f02                	lw	t5,32(sp)
200139a0:	4ff2                	lw	t6,28(sp)
200139a2:	6125                	addi	sp,sp,96
200139a4:	30200073          	mret

200139a8 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200139a8:	711d                	addi	sp,sp,-96
200139aa:	ce86                	sw	ra,92(sp)
200139ac:	cc96                	sw	t0,88(sp)
200139ae:	ca9a                	sw	t1,84(sp)
200139b0:	c89e                	sw	t2,80(sp)
200139b2:	c6a2                	sw	s0,76(sp)
200139b4:	c4aa                	sw	a0,72(sp)
200139b6:	c2ae                	sw	a1,68(sp)
200139b8:	c0b2                	sw	a2,64(sp)
200139ba:	de36                	sw	a3,60(sp)
200139bc:	dc3a                	sw	a4,56(sp)
200139be:	da3e                	sw	a5,52(sp)
200139c0:	d842                	sw	a6,48(sp)
200139c2:	d646                	sw	a7,44(sp)
200139c4:	d472                	sw	t3,40(sp)
200139c6:	d276                	sw	t4,36(sp)
200139c8:	d07a                	sw	t5,32(sp)
200139ca:	ce7e                	sw	t6,28(sp)
200139cc:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200139ce:	d74ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
200139d2:	872a                	mv	a4,a0
200139d4:	800017b7          	lui	a5,0x80001
200139d8:	070a                	slli	a4,a4,0x2
200139da:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
200139de:	97ba                	add	a5,a5,a4
200139e0:	439c                	lw	a5,0(a5)
200139e2:	faf42623          	sw	a5,-84(s0)
200139e6:	fac42783          	lw	a5,-84(s0)
200139ea:	c78d                	beqz	a5,20013a14 <metal_lc8_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200139ec:	fac42503          	lw	a0,-84(s0)
200139f0:	cd4ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200139f4:	faa42423          	sw	a0,-88(s0)
200139f8:	fa842783          	lw	a5,-88(s0)
200139fc:	2d87a783          	lw	a5,728(a5)
20013a00:	faf42223          	sw	a5,-92(s0)
20013a04:	fa842783          	lw	a5,-88(s0)
20013a08:	2d07a783          	lw	a5,720(a5)
20013a0c:	fa442583          	lw	a1,-92(s0)
20013a10:	4561                	li	a0,24
20013a12:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:256
}
20013a14:	0001                	nop
20013a16:	40f6                	lw	ra,92(sp)
20013a18:	42e6                	lw	t0,88(sp)
20013a1a:	4356                	lw	t1,84(sp)
20013a1c:	43c6                	lw	t2,80(sp)
20013a1e:	4436                	lw	s0,76(sp)
20013a20:	4526                	lw	a0,72(sp)
20013a22:	4596                	lw	a1,68(sp)
20013a24:	4606                	lw	a2,64(sp)
20013a26:	56f2                	lw	a3,60(sp)
20013a28:	5762                	lw	a4,56(sp)
20013a2a:	57d2                	lw	a5,52(sp)
20013a2c:	5842                	lw	a6,48(sp)
20013a2e:	58b2                	lw	a7,44(sp)
20013a30:	5e22                	lw	t3,40(sp)
20013a32:	5e92                	lw	t4,36(sp)
20013a34:	5f02                	lw	t5,32(sp)
20013a36:	4ff2                	lw	t6,28(sp)
20013a38:	6125                	addi	sp,sp,96
20013a3a:	30200073          	mret

20013a3e <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20013a3e:	711d                	addi	sp,sp,-96
20013a40:	ce86                	sw	ra,92(sp)
20013a42:	cc96                	sw	t0,88(sp)
20013a44:	ca9a                	sw	t1,84(sp)
20013a46:	c89e                	sw	t2,80(sp)
20013a48:	c6a2                	sw	s0,76(sp)
20013a4a:	c4aa                	sw	a0,72(sp)
20013a4c:	c2ae                	sw	a1,68(sp)
20013a4e:	c0b2                	sw	a2,64(sp)
20013a50:	de36                	sw	a3,60(sp)
20013a52:	dc3a                	sw	a4,56(sp)
20013a54:	da3e                	sw	a5,52(sp)
20013a56:	d842                	sw	a6,48(sp)
20013a58:	d646                	sw	a7,44(sp)
20013a5a:	d472                	sw	t3,40(sp)
20013a5c:	d276                	sw	t4,36(sp)
20013a5e:	d07a                	sw	t5,32(sp)
20013a60:	ce7e                	sw	t6,28(sp)
20013a62:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20013a64:	cdeff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013a68:	872a                	mv	a4,a0
20013a6a:	800017b7          	lui	a5,0x80001
20013a6e:	070a                	slli	a4,a4,0x2
20013a70:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013a74:	97ba                	add	a5,a5,a4
20013a76:	439c                	lw	a5,0(a5)
20013a78:	faf42623          	sw	a5,-84(s0)
20013a7c:	fac42783          	lw	a5,-84(s0)
20013a80:	c78d                	beqz	a5,20013aaa <metal_lc9_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20013a82:	fac42503          	lw	a0,-84(s0)
20013a86:	c3eff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013a8a:	faa42423          	sw	a0,-88(s0)
20013a8e:	fa842783          	lw	a5,-88(s0)
20013a92:	2f07a783          	lw	a5,752(a5)
20013a96:	faf42223          	sw	a5,-92(s0)
20013a9a:	fa842783          	lw	a5,-88(s0)
20013a9e:	2e87a783          	lw	a5,744(a5)
20013aa2:	fa442583          	lw	a1,-92(s0)
20013aa6:	4565                	li	a0,25
20013aa8:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:261
}
20013aaa:	0001                	nop
20013aac:	40f6                	lw	ra,92(sp)
20013aae:	42e6                	lw	t0,88(sp)
20013ab0:	4356                	lw	t1,84(sp)
20013ab2:	43c6                	lw	t2,80(sp)
20013ab4:	4436                	lw	s0,76(sp)
20013ab6:	4526                	lw	a0,72(sp)
20013ab8:	4596                	lw	a1,68(sp)
20013aba:	4606                	lw	a2,64(sp)
20013abc:	56f2                	lw	a3,60(sp)
20013abe:	5762                	lw	a4,56(sp)
20013ac0:	57d2                	lw	a5,52(sp)
20013ac2:	5842                	lw	a6,48(sp)
20013ac4:	58b2                	lw	a7,44(sp)
20013ac6:	5e22                	lw	t3,40(sp)
20013ac8:	5e92                	lw	t4,36(sp)
20013aca:	5f02                	lw	t5,32(sp)
20013acc:	4ff2                	lw	t6,28(sp)
20013ace:	6125                	addi	sp,sp,96
20013ad0:	30200073          	mret

20013ad4 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20013ad4:	711d                	addi	sp,sp,-96
20013ad6:	ce86                	sw	ra,92(sp)
20013ad8:	cc96                	sw	t0,88(sp)
20013ada:	ca9a                	sw	t1,84(sp)
20013adc:	c89e                	sw	t2,80(sp)
20013ade:	c6a2                	sw	s0,76(sp)
20013ae0:	c4aa                	sw	a0,72(sp)
20013ae2:	c2ae                	sw	a1,68(sp)
20013ae4:	c0b2                	sw	a2,64(sp)
20013ae6:	de36                	sw	a3,60(sp)
20013ae8:	dc3a                	sw	a4,56(sp)
20013aea:	da3e                	sw	a5,52(sp)
20013aec:	d842                	sw	a6,48(sp)
20013aee:	d646                	sw	a7,44(sp)
20013af0:	d472                	sw	t3,40(sp)
20013af2:	d276                	sw	t4,36(sp)
20013af4:	d07a                	sw	t5,32(sp)
20013af6:	ce7e                	sw	t6,28(sp)
20013af8:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20013afa:	c48ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013afe:	872a                	mv	a4,a0
20013b00:	800017b7          	lui	a5,0x80001
20013b04:	070a                	slli	a4,a4,0x2
20013b06:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013b0a:	97ba                	add	a5,a5,a4
20013b0c:	439c                	lw	a5,0(a5)
20013b0e:	faf42623          	sw	a5,-84(s0)
20013b12:	fac42783          	lw	a5,-84(s0)
20013b16:	c78d                	beqz	a5,20013b40 <metal_lc10_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20013b18:	fac42503          	lw	a0,-84(s0)
20013b1c:	ba8ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013b20:	faa42423          	sw	a0,-88(s0)
20013b24:	fa842783          	lw	a5,-88(s0)
20013b28:	3087a783          	lw	a5,776(a5)
20013b2c:	faf42223          	sw	a5,-92(s0)
20013b30:	fa842783          	lw	a5,-88(s0)
20013b34:	3007a783          	lw	a5,768(a5)
20013b38:	fa442583          	lw	a1,-92(s0)
20013b3c:	4569                	li	a0,26
20013b3e:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:267
}
20013b40:	0001                	nop
20013b42:	40f6                	lw	ra,92(sp)
20013b44:	42e6                	lw	t0,88(sp)
20013b46:	4356                	lw	t1,84(sp)
20013b48:	43c6                	lw	t2,80(sp)
20013b4a:	4436                	lw	s0,76(sp)
20013b4c:	4526                	lw	a0,72(sp)
20013b4e:	4596                	lw	a1,68(sp)
20013b50:	4606                	lw	a2,64(sp)
20013b52:	56f2                	lw	a3,60(sp)
20013b54:	5762                	lw	a4,56(sp)
20013b56:	57d2                	lw	a5,52(sp)
20013b58:	5842                	lw	a6,48(sp)
20013b5a:	58b2                	lw	a7,44(sp)
20013b5c:	5e22                	lw	t3,40(sp)
20013b5e:	5e92                	lw	t4,36(sp)
20013b60:	5f02                	lw	t5,32(sp)
20013b62:	4ff2                	lw	t6,28(sp)
20013b64:	6125                	addi	sp,sp,96
20013b66:	30200073          	mret

20013b6a <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20013b6a:	711d                	addi	sp,sp,-96
20013b6c:	ce86                	sw	ra,92(sp)
20013b6e:	cc96                	sw	t0,88(sp)
20013b70:	ca9a                	sw	t1,84(sp)
20013b72:	c89e                	sw	t2,80(sp)
20013b74:	c6a2                	sw	s0,76(sp)
20013b76:	c4aa                	sw	a0,72(sp)
20013b78:	c2ae                	sw	a1,68(sp)
20013b7a:	c0b2                	sw	a2,64(sp)
20013b7c:	de36                	sw	a3,60(sp)
20013b7e:	dc3a                	sw	a4,56(sp)
20013b80:	da3e                	sw	a5,52(sp)
20013b82:	d842                	sw	a6,48(sp)
20013b84:	d646                	sw	a7,44(sp)
20013b86:	d472                	sw	t3,40(sp)
20013b88:	d276                	sw	t4,36(sp)
20013b8a:	d07a                	sw	t5,32(sp)
20013b8c:	ce7e                	sw	t6,28(sp)
20013b8e:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20013b90:	bb2ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013b94:	872a                	mv	a4,a0
20013b96:	800017b7          	lui	a5,0x80001
20013b9a:	070a                	slli	a4,a4,0x2
20013b9c:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013ba0:	97ba                	add	a5,a5,a4
20013ba2:	439c                	lw	a5,0(a5)
20013ba4:	faf42623          	sw	a5,-84(s0)
20013ba8:	fac42783          	lw	a5,-84(s0)
20013bac:	c78d                	beqz	a5,20013bd6 <metal_lc11_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20013bae:	fac42503          	lw	a0,-84(s0)
20013bb2:	b12ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013bb6:	faa42423          	sw	a0,-88(s0)
20013bba:	fa842783          	lw	a5,-88(s0)
20013bbe:	3207a783          	lw	a5,800(a5)
20013bc2:	faf42223          	sw	a5,-92(s0)
20013bc6:	fa842783          	lw	a5,-88(s0)
20013bca:	3187a783          	lw	a5,792(a5)
20013bce:	fa442583          	lw	a1,-92(s0)
20013bd2:	456d                	li	a0,27
20013bd4:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:273
}
20013bd6:	0001                	nop
20013bd8:	40f6                	lw	ra,92(sp)
20013bda:	42e6                	lw	t0,88(sp)
20013bdc:	4356                	lw	t1,84(sp)
20013bde:	43c6                	lw	t2,80(sp)
20013be0:	4436                	lw	s0,76(sp)
20013be2:	4526                	lw	a0,72(sp)
20013be4:	4596                	lw	a1,68(sp)
20013be6:	4606                	lw	a2,64(sp)
20013be8:	56f2                	lw	a3,60(sp)
20013bea:	5762                	lw	a4,56(sp)
20013bec:	57d2                	lw	a5,52(sp)
20013bee:	5842                	lw	a6,48(sp)
20013bf0:	58b2                	lw	a7,44(sp)
20013bf2:	5e22                	lw	t3,40(sp)
20013bf4:	5e92                	lw	t4,36(sp)
20013bf6:	5f02                	lw	t5,32(sp)
20013bf8:	4ff2                	lw	t6,28(sp)
20013bfa:	6125                	addi	sp,sp,96
20013bfc:	30200073          	mret

20013c00 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20013c00:	711d                	addi	sp,sp,-96
20013c02:	ce86                	sw	ra,92(sp)
20013c04:	cc96                	sw	t0,88(sp)
20013c06:	ca9a                	sw	t1,84(sp)
20013c08:	c89e                	sw	t2,80(sp)
20013c0a:	c6a2                	sw	s0,76(sp)
20013c0c:	c4aa                	sw	a0,72(sp)
20013c0e:	c2ae                	sw	a1,68(sp)
20013c10:	c0b2                	sw	a2,64(sp)
20013c12:	de36                	sw	a3,60(sp)
20013c14:	dc3a                	sw	a4,56(sp)
20013c16:	da3e                	sw	a5,52(sp)
20013c18:	d842                	sw	a6,48(sp)
20013c1a:	d646                	sw	a7,44(sp)
20013c1c:	d472                	sw	t3,40(sp)
20013c1e:	d276                	sw	t4,36(sp)
20013c20:	d07a                	sw	t5,32(sp)
20013c22:	ce7e                	sw	t6,28(sp)
20013c24:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20013c26:	b1cff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013c2a:	872a                	mv	a4,a0
20013c2c:	800017b7          	lui	a5,0x80001
20013c30:	070a                	slli	a4,a4,0x2
20013c32:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013c36:	97ba                	add	a5,a5,a4
20013c38:	439c                	lw	a5,0(a5)
20013c3a:	faf42623          	sw	a5,-84(s0)
20013c3e:	fac42783          	lw	a5,-84(s0)
20013c42:	c78d                	beqz	a5,20013c6c <metal_lc12_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20013c44:	fac42503          	lw	a0,-84(s0)
20013c48:	a7cff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013c4c:	faa42423          	sw	a0,-88(s0)
20013c50:	fa842783          	lw	a5,-88(s0)
20013c54:	3387a783          	lw	a5,824(a5)
20013c58:	faf42223          	sw	a5,-92(s0)
20013c5c:	fa842783          	lw	a5,-88(s0)
20013c60:	3307a783          	lw	a5,816(a5)
20013c64:	fa442583          	lw	a1,-92(s0)
20013c68:	4571                	li	a0,28
20013c6a:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:279
}
20013c6c:	0001                	nop
20013c6e:	40f6                	lw	ra,92(sp)
20013c70:	42e6                	lw	t0,88(sp)
20013c72:	4356                	lw	t1,84(sp)
20013c74:	43c6                	lw	t2,80(sp)
20013c76:	4436                	lw	s0,76(sp)
20013c78:	4526                	lw	a0,72(sp)
20013c7a:	4596                	lw	a1,68(sp)
20013c7c:	4606                	lw	a2,64(sp)
20013c7e:	56f2                	lw	a3,60(sp)
20013c80:	5762                	lw	a4,56(sp)
20013c82:	57d2                	lw	a5,52(sp)
20013c84:	5842                	lw	a6,48(sp)
20013c86:	58b2                	lw	a7,44(sp)
20013c88:	5e22                	lw	t3,40(sp)
20013c8a:	5e92                	lw	t4,36(sp)
20013c8c:	5f02                	lw	t5,32(sp)
20013c8e:	4ff2                	lw	t6,28(sp)
20013c90:	6125                	addi	sp,sp,96
20013c92:	30200073          	mret

20013c96 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20013c96:	711d                	addi	sp,sp,-96
20013c98:	ce86                	sw	ra,92(sp)
20013c9a:	cc96                	sw	t0,88(sp)
20013c9c:	ca9a                	sw	t1,84(sp)
20013c9e:	c89e                	sw	t2,80(sp)
20013ca0:	c6a2                	sw	s0,76(sp)
20013ca2:	c4aa                	sw	a0,72(sp)
20013ca4:	c2ae                	sw	a1,68(sp)
20013ca6:	c0b2                	sw	a2,64(sp)
20013ca8:	de36                	sw	a3,60(sp)
20013caa:	dc3a                	sw	a4,56(sp)
20013cac:	da3e                	sw	a5,52(sp)
20013cae:	d842                	sw	a6,48(sp)
20013cb0:	d646                	sw	a7,44(sp)
20013cb2:	d472                	sw	t3,40(sp)
20013cb4:	d276                	sw	t4,36(sp)
20013cb6:	d07a                	sw	t5,32(sp)
20013cb8:	ce7e                	sw	t6,28(sp)
20013cba:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20013cbc:	a86ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013cc0:	872a                	mv	a4,a0
20013cc2:	800017b7          	lui	a5,0x80001
20013cc6:	070a                	slli	a4,a4,0x2
20013cc8:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013ccc:	97ba                	add	a5,a5,a4
20013cce:	439c                	lw	a5,0(a5)
20013cd0:	faf42623          	sw	a5,-84(s0)
20013cd4:	fac42783          	lw	a5,-84(s0)
20013cd8:	c78d                	beqz	a5,20013d02 <metal_lc13_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20013cda:	fac42503          	lw	a0,-84(s0)
20013cde:	9e6ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013ce2:	faa42423          	sw	a0,-88(s0)
20013ce6:	fa842783          	lw	a5,-88(s0)
20013cea:	3507a783          	lw	a5,848(a5)
20013cee:	faf42223          	sw	a5,-92(s0)
20013cf2:	fa842783          	lw	a5,-88(s0)
20013cf6:	3487a783          	lw	a5,840(a5)
20013cfa:	fa442583          	lw	a1,-92(s0)
20013cfe:	4575                	li	a0,29
20013d00:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:285
}
20013d02:	0001                	nop
20013d04:	40f6                	lw	ra,92(sp)
20013d06:	42e6                	lw	t0,88(sp)
20013d08:	4356                	lw	t1,84(sp)
20013d0a:	43c6                	lw	t2,80(sp)
20013d0c:	4436                	lw	s0,76(sp)
20013d0e:	4526                	lw	a0,72(sp)
20013d10:	4596                	lw	a1,68(sp)
20013d12:	4606                	lw	a2,64(sp)
20013d14:	56f2                	lw	a3,60(sp)
20013d16:	5762                	lw	a4,56(sp)
20013d18:	57d2                	lw	a5,52(sp)
20013d1a:	5842                	lw	a6,48(sp)
20013d1c:	58b2                	lw	a7,44(sp)
20013d1e:	5e22                	lw	t3,40(sp)
20013d20:	5e92                	lw	t4,36(sp)
20013d22:	5f02                	lw	t5,32(sp)
20013d24:	4ff2                	lw	t6,28(sp)
20013d26:	6125                	addi	sp,sp,96
20013d28:	30200073          	mret

20013d2c <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20013d2c:	711d                	addi	sp,sp,-96
20013d2e:	ce86                	sw	ra,92(sp)
20013d30:	cc96                	sw	t0,88(sp)
20013d32:	ca9a                	sw	t1,84(sp)
20013d34:	c89e                	sw	t2,80(sp)
20013d36:	c6a2                	sw	s0,76(sp)
20013d38:	c4aa                	sw	a0,72(sp)
20013d3a:	c2ae                	sw	a1,68(sp)
20013d3c:	c0b2                	sw	a2,64(sp)
20013d3e:	de36                	sw	a3,60(sp)
20013d40:	dc3a                	sw	a4,56(sp)
20013d42:	da3e                	sw	a5,52(sp)
20013d44:	d842                	sw	a6,48(sp)
20013d46:	d646                	sw	a7,44(sp)
20013d48:	d472                	sw	t3,40(sp)
20013d4a:	d276                	sw	t4,36(sp)
20013d4c:	d07a                	sw	t5,32(sp)
20013d4e:	ce7e                	sw	t6,28(sp)
20013d50:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20013d52:	9f0ff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013d56:	872a                	mv	a4,a0
20013d58:	800017b7          	lui	a5,0x80001
20013d5c:	070a                	slli	a4,a4,0x2
20013d5e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013d62:	97ba                	add	a5,a5,a4
20013d64:	439c                	lw	a5,0(a5)
20013d66:	faf42623          	sw	a5,-84(s0)
20013d6a:	fac42783          	lw	a5,-84(s0)
20013d6e:	c78d                	beqz	a5,20013d98 <metal_lc14_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20013d70:	fac42503          	lw	a0,-84(s0)
20013d74:	950ff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013d78:	faa42423          	sw	a0,-88(s0)
20013d7c:	fa842783          	lw	a5,-88(s0)
20013d80:	3687a783          	lw	a5,872(a5)
20013d84:	faf42223          	sw	a5,-92(s0)
20013d88:	fa842783          	lw	a5,-88(s0)
20013d8c:	3607a783          	lw	a5,864(a5)
20013d90:	fa442583          	lw	a1,-92(s0)
20013d94:	4579                	li	a0,30
20013d96:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:291
}
20013d98:	0001                	nop
20013d9a:	40f6                	lw	ra,92(sp)
20013d9c:	42e6                	lw	t0,88(sp)
20013d9e:	4356                	lw	t1,84(sp)
20013da0:	43c6                	lw	t2,80(sp)
20013da2:	4436                	lw	s0,76(sp)
20013da4:	4526                	lw	a0,72(sp)
20013da6:	4596                	lw	a1,68(sp)
20013da8:	4606                	lw	a2,64(sp)
20013daa:	56f2                	lw	a3,60(sp)
20013dac:	5762                	lw	a4,56(sp)
20013dae:	57d2                	lw	a5,52(sp)
20013db0:	5842                	lw	a6,48(sp)
20013db2:	58b2                	lw	a7,44(sp)
20013db4:	5e22                	lw	t3,40(sp)
20013db6:	5e92                	lw	t4,36(sp)
20013db8:	5f02                	lw	t5,32(sp)
20013dba:	4ff2                	lw	t6,28(sp)
20013dbc:	6125                	addi	sp,sp,96
20013dbe:	30200073          	mret

20013dc2 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20013dc2:	711d                	addi	sp,sp,-96
20013dc4:	ce86                	sw	ra,92(sp)
20013dc6:	cc96                	sw	t0,88(sp)
20013dc8:	ca9a                	sw	t1,84(sp)
20013dca:	c89e                	sw	t2,80(sp)
20013dcc:	c6a2                	sw	s0,76(sp)
20013dce:	c4aa                	sw	a0,72(sp)
20013dd0:	c2ae                	sw	a1,68(sp)
20013dd2:	c0b2                	sw	a2,64(sp)
20013dd4:	de36                	sw	a3,60(sp)
20013dd6:	dc3a                	sw	a4,56(sp)
20013dd8:	da3e                	sw	a5,52(sp)
20013dda:	d842                	sw	a6,48(sp)
20013ddc:	d646                	sw	a7,44(sp)
20013dde:	d472                	sw	t3,40(sp)
20013de0:	d276                	sw	t4,36(sp)
20013de2:	d07a                	sw	t5,32(sp)
20013de4:	ce7e                	sw	t6,28(sp)
20013de6:	1080                	addi	s0,sp,96
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20013de8:	95aff0ef          	jal	ra,20012f42 <__metal_myhart_id>
20013dec:	872a                	mv	a4,a0
20013dee:	800017b7          	lui	a5,0x80001
20013df2:	070a                	slli	a4,a4,0x2
20013df4:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20013df8:	97ba                	add	a5,a5,a4
20013dfa:	439c                	lw	a5,0(a5)
20013dfc:	faf42623          	sw	a5,-84(s0)
20013e00:	fac42783          	lw	a5,-84(s0)
20013e04:	c78d                	beqz	a5,20013e2e <metal_lc15_interrupt_vector_handler+0x6c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20013e06:	fac42503          	lw	a0,-84(s0)
20013e0a:	8baff0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20013e0e:	faa42423          	sw	a0,-88(s0)
20013e12:	fa842783          	lw	a5,-88(s0)
20013e16:	3807a783          	lw	a5,896(a5)
20013e1a:	faf42223          	sw	a5,-92(s0)
20013e1e:	fa842783          	lw	a5,-88(s0)
20013e22:	3787a783          	lw	a5,888(a5)
20013e26:	fa442583          	lw	a1,-92(s0)
20013e2a:	457d                	li	a0,31
20013e2c:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:297
}
20013e2e:	0001                	nop
20013e30:	40f6                	lw	ra,92(sp)
20013e32:	42e6                	lw	t0,88(sp)
20013e34:	4356                	lw	t1,84(sp)
20013e36:	43c6                	lw	t2,80(sp)
20013e38:	4436                	lw	s0,76(sp)
20013e3a:	4526                	lw	a0,72(sp)
20013e3c:	4596                	lw	a1,68(sp)
20013e3e:	4606                	lw	a2,64(sp)
20013e40:	56f2                	lw	a3,60(sp)
20013e42:	5762                	lw	a4,56(sp)
20013e44:	57d2                	lw	a5,52(sp)
20013e46:	5842                	lw	a6,48(sp)
20013e48:	58b2                	lw	a7,44(sp)
20013e4a:	5e22                	lw	t3,40(sp)
20013e4c:	5e92                	lw	t4,36(sp)
20013e4e:	5f02                	lw	t5,32(sp)
20013e50:	4ff2                	lw	t6,28(sp)
20013e52:	6125                	addi	sp,sp,96
20013e54:	30200073          	mret

20013e58 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20013e58:	1101                	addi	sp,sp,-32
20013e5a:	ce22                	sw	s0,28(sp)
20013e5c:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013e5e:	305027f3          	csrr	a5,mtvec
20013e62:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20013e66:	fec42783          	lw	a5,-20(s0)
20013e6a:	03f7f793          	andi	a5,a5,63
20013e6e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20013e72:	fec42703          	lw	a4,-20(s0)
20013e76:	478d                	li	a5,3
20013e78:	02f70363          	beq	a4,a5,20013e9e <__metal_controller_interrupt_vector_mode+0x46>
20013e7c:	fec42703          	lw	a4,-20(s0)
20013e80:	478d                	li	a5,3
20013e82:	02e7e263          	bltu	a5,a4,20013ea6 <__metal_controller_interrupt_vector_mode+0x4e>
20013e86:	fec42703          	lw	a4,-20(s0)
20013e8a:	4785                	li	a5,1
20013e8c:	00f70b63          	beq	a4,a5,20013ea2 <__metal_controller_interrupt_vector_mode+0x4a>
20013e90:	fec42703          	lw	a4,-20(s0)
20013e94:	4789                	li	a5,2
20013e96:	00f71863          	bne	a4,a5,20013ea6 <__metal_controller_interrupt_vector_mode+0x4e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013e9a:	478d                	li	a5,3
20013e9c:	a031                	j	20013ea8 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013e9e:	4791                	li	a5,4
20013ea0:	a021                	j	20013ea8 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20013ea2:	4785                	li	a5,1
20013ea4:	a011                	j	20013ea8 <__metal_controller_interrupt_vector_mode+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20013ea6:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:314
}
20013ea8:	853e                	mv	a0,a5
20013eaa:	4472                	lw	s0,28(sp)
20013eac:	6105                	addi	sp,sp,32
20013eae:	8082                	ret

20013eb0 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20013eb0:	7179                	addi	sp,sp,-48
20013eb2:	d622                	sw	s0,44(sp)
20013eb4:	1800                	addi	s0,sp,48
20013eb6:	fca42e23          	sw	a0,-36(s0)
20013eba:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013ebe:	305027f3          	csrr	a5,mtvec
20013ec2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20013ec6:	fec42783          	lw	a5,-20(s0)
20013eca:	fc07f793          	andi	a5,a5,-64
20013ece:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20013ed2:	fd842783          	lw	a5,-40(s0)
20013ed6:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20013eda:	fdc42703          	lw	a4,-36(s0)
20013ede:	4791                	li	a5,4
20013ee0:	04f70563          	beq	a4,a5,20013f2a <__metal_controller_interrupt_vector+0x7a>
20013ee4:	fdc42703          	lw	a4,-36(s0)
20013ee8:	4791                	li	a5,4
20013eea:	06e7e863          	bltu	a5,a4,20013f5a <__metal_controller_interrupt_vector+0xaa>
20013eee:	fdc42703          	lw	a4,-36(s0)
20013ef2:	478d                	li	a5,3
20013ef4:	06e7e363          	bltu	a5,a4,20013f5a <__metal_controller_interrupt_vector+0xaa>
20013ef8:	fdc42703          	lw	a4,-36(s0)
20013efc:	4789                	li	a5,2
20013efe:	00f77b63          	bgeu	a4,a5,20013f14 <__metal_controller_interrupt_vector+0x64>
20013f02:	fdc42783          	lw	a5,-36(s0)
20013f06:	c7a1                	beqz	a5,20013f4e <__metal_controller_interrupt_vector+0x9e>
20013f08:	fdc42703          	lw	a4,-36(s0)
20013f0c:	4785                	li	a5,1
20013f0e:	02f70963          	beq	a4,a5,20013f40 <__metal_controller_interrupt_vector+0x90>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20013f12:	a0a1                	j	20013f5a <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013f14:	fe842783          	lw	a5,-24(s0)
20013f18:	30779073          	csrw	mtvt,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20013f1c:	fec42783          	lw	a5,-20(s0)
20013f20:	0027e793          	ori	a5,a5,2
20013f24:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20013f28:	a80d                	j	20013f5a <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013f2a:	fe842783          	lw	a5,-24(s0)
20013f2e:	30779073          	csrw	mtvt,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20013f32:	fec42783          	lw	a5,-20(s0)
20013f36:	0037e793          	ori	a5,a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20013f3a:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20013f3e:	a831                	j	20013f5a <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20013f40:	fe842783          	lw	a5,-24(s0)
20013f44:	0017e793          	ori	a5,a5,1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20013f48:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20013f4c:	a039                	j	20013f5a <__metal_controller_interrupt_vector+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20013f4e:	fe842783          	lw	a5,-24(s0)
20013f52:	9bf1                	andi	a5,a5,-4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20013f54:	30579073          	csrw	mtvec,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20013f58:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:344
}
20013f5a:	0001                	nop
20013f5c:	5432                	lw	s0,44(sp)
20013f5e:	6145                	addi	sp,sp,48
20013f60:	8082                	ret

20013f62 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20013f62:	1101                	addi	sp,sp,-32
20013f64:	ce22                	sw	s0,28(sp)
20013f66:	1000                	addi	s0,sp,32
20013f68:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013f6c:	fec42703          	lw	a4,-20(s0)
20013f70:	47fd                	li	a5,31
20013f72:	02e7c663          	blt	a5,a4,20013f9e <__metal_valid_interrupt_id+0x3c>
20013f76:	fec42703          	lw	a4,-20(s0)
20013f7a:	478d                	li	a5,3
20013f7c:	02f74963          	blt	a4,a5,20013fae <__metal_valid_interrupt_id+0x4c>
20013f80:	fec42783          	lw	a5,-20(s0)
20013f84:	4705                	li	a4,1
20013f86:	00f71733          	sll	a4,a4,a5
20013f8a:	77c5                	lui	a5,0xffff1
20013f8c:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef118>
20013f90:	8ff9                	and	a5,a5,a4
20013f92:	00f037b3          	snez	a5,a5
20013f96:	0ff7f793          	zext.b	a5,a5
20013f9a:	eb81                	bnez	a5,20013faa <__metal_valid_interrupt_id+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20013f9c:	a809                	j	20013fae <__metal_valid_interrupt_id+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013f9e:	fec42703          	lw	a4,-20(s0)
20013fa2:	08000793          	li	a5,128
20013fa6:	00f71463          	bne	a4,a5,20013fae <__metal_valid_interrupt_id+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20013faa:	4785                	li	a5,1
20013fac:	a019                	j	20013fb2 <__metal_valid_interrupt_id+0x50>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20013fae:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20013fb0:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:374
}
20013fb2:	853e                	mv	a0,a5
20013fb4:	4472                	lw	s0,28(sp)
20013fb6:	6105                	addi	sp,sp,32
20013fb8:	8082                	ret

20013fba <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20013fba:	7179                	addi	sp,sp,-48
20013fbc:	d606                	sw	ra,44(sp)
20013fbe:	d422                	sw	s0,40(sp)
20013fc0:	1800                	addi	s0,sp,48
20013fc2:	fca42e23          	sw	a0,-36(s0)
20013fc6:	fcb42c23          	sw	a1,-40(s0)
20013fca:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20013fce:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20013fd2:	fdc42783          	lw	a5,-36(s0)
20013fd6:	e399                	bnez	a5,20013fdc <__metal_local_interrupt_enable+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20013fd8:	57fd                	li	a5,-1
20013fda:	a849                	j	2001406c <__metal_local_interrupt_enable+0xb2>
20013fdc:	fd842703          	lw	a4,-40(s0)
20013fe0:	47fd                	li	a5,31
20013fe2:	08e7e063          	bltu	a5,a4,20014062 <__metal_local_interrupt_enable+0xa8>
20013fe6:	fd842783          	lw	a5,-40(s0)
20013fea:	00279713          	slli	a4,a5,0x2
20013fee:	200107b7          	lui	a5,0x20010
20013ff2:	4c878793          	addi	a5,a5,1224 # 200104c8 <__metal_driver_vtable_riscv_clint0+0x64>
20013ff6:	97ba                	add	a5,a5,a4
20013ff8:	439c                	lw	a5,0(a5)
20013ffa:	8782                	jr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20013ffc:	fd442783          	lw	a5,-44(s0)
20014000:	c781                	beqz	a5,20014008 <__metal_local_interrupt_enable+0x4e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20014002:	f5bfe0ef          	jal	ra,20012f5c <__metal_interrupt_global_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20014006:	a08d                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20014008:	f6dfe0ef          	jal	ra,20012f74 <__metal_interrupt_global_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2001400c:	a8b1                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2001400e:	fd442783          	lw	a5,-44(s0)
20014012:	c781                	beqz	a5,2001401a <__metal_local_interrupt_enable+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20014014:	f79fe0ef          	jal	ra,20012f8c <__metal_interrupt_software_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20014018:	a881                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2001401a:	f8bfe0ef          	jal	ra,20012fa4 <__metal_interrupt_software_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2001401e:	a0a9                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20014020:	fd442783          	lw	a5,-44(s0)
20014024:	c781                	beqz	a5,2001402c <__metal_local_interrupt_enable+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20014026:	f97fe0ef          	jal	ra,20012fbc <__metal_interrupt_timer_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2001402a:	a83d                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2001402c:	fabfe0ef          	jal	ra,20012fd6 <__metal_interrupt_timer_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20014030:	a825                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20014032:	fd442783          	lw	a5,-44(s0)
20014036:	c781                	beqz	a5,2001403e <__metal_local_interrupt_enable+0x84>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20014038:	fb9fe0ef          	jal	ra,20012ff0 <__metal_interrupt_external_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2001403c:	a035                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
2001403e:	fcffe0ef          	jal	ra,2001300c <__metal_interrupt_external_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20014042:	a01d                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20014044:	fd442783          	lw	a5,-44(s0)
20014048:	c799                	beqz	a5,20014056 <__metal_local_interrupt_enable+0x9c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2001404a:	fd842783          	lw	a5,-40(s0)
2001404e:	853e                	mv	a0,a5
20014050:	fd9fe0ef          	jal	ra,20013028 <__metal_interrupt_local_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20014054:	a811                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20014056:	fd842783          	lw	a5,-40(s0)
2001405a:	853e                	mv	a0,a5
2001405c:	ff9fe0ef          	jal	ra,20013054 <__metal_interrupt_local_disable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20014060:	a021                	j	20014068 <__metal_local_interrupt_enable+0xae>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20014062:	57fd                	li	a5,-1
20014064:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20014068:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:439
}
2001406c:	853e                	mv	a0,a5
2001406e:	50b2                	lw	ra,44(sp)
20014070:	5422                	lw	s0,40(sp)
20014072:	6145                	addi	sp,sp,48
20014074:	8082                	ret

20014076 <__metal_exception_register>:
__metal_exception_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20014076:	7179                	addi	sp,sp,-48
20014078:	d622                	sw	s0,44(sp)
2001407a:	1800                	addi	s0,sp,48
2001407c:	fca42e23          	sw	a0,-36(s0)
20014080:	fcb42c23          	sw	a1,-40(s0)
20014084:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014088:	fdc42783          	lw	a5,-36(s0)
2001408c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20014090:	fd842703          	lw	a4,-40(s0)
20014094:	47ad                	li	a5,11
20014096:	02e7c263          	blt	a5,a4,200140ba <__metal_exception_register+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2001409a:	fd442783          	lw	a5,-44(s0)
2001409e:	cf91                	beqz	a5,200140ba <__metal_exception_register+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
200140a0:	fec42703          	lw	a4,-20(s0)
200140a4:	fd842783          	lw	a5,-40(s0)
200140a8:	0e878793          	addi	a5,a5,232
200140ac:	078a                	slli	a5,a5,0x2
200140ae:	97ba                	add	a5,a5,a4
200140b0:	fd442703          	lw	a4,-44(s0)
200140b4:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
200140b6:	4781                	li	a5,0
200140b8:	a011                	j	200140bc <__metal_exception_register+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
200140ba:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:450
}
200140bc:	853e                	mv	a0,a5
200140be:	5432                	lw	s0,44(sp)
200140c0:	6145                	addi	sp,sp,48
200140c2:	8082                	ret

200140c4 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
200140c4:	7179                	addi	sp,sp,-48
200140c6:	d606                	sw	ra,44(sp)
200140c8:	d422                	sw	s0,40(sp)
200140ca:	1800                	addi	s0,sp,48
200140cc:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200140d0:	fdc42783          	lw	a5,-36(s0)
200140d4:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
200140d8:	fe442783          	lw	a5,-28(s0)
200140dc:	43dc                	lw	a5,4(a5)
200140de:	efdd                	bnez	a5,2001419c <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
200140e0:	fe042623          	sw	zero,-20(s0)
200140e4:	a0b9                	j	20014132 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
200140e6:	fe442683          	lw	a3,-28(s0)
200140ea:	fec42703          	lw	a4,-20(s0)
200140ee:	87ba                	mv	a5,a4
200140f0:	0786                	slli	a5,a5,0x1
200140f2:	97ba                	add	a5,a5,a4
200140f4:	078e                	slli	a5,a5,0x3
200140f6:	97b6                	add	a5,a5,a3
200140f8:	0807a823          	sw	zero,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
200140fc:	fe442683          	lw	a3,-28(s0)
20014100:	fec42703          	lw	a4,-20(s0)
20014104:	87ba                	mv	a5,a4
20014106:	0786                	slli	a5,a5,0x1
20014108:	97ba                	add	a5,a5,a4
2001410a:	078e                	slli	a5,a5,0x3
2001410c:	97b6                	add	a5,a5,a3
2001410e:	0807aa23          	sw	zero,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20014112:	fe442683          	lw	a3,-28(s0)
20014116:	fec42703          	lw	a4,-20(s0)
2001411a:	87ba                	mv	a5,a4
2001411c:	0786                	slli	a5,a5,0x1
2001411e:	97ba                	add	a5,a5,a4
20014120:	078e                	slli	a5,a5,0x3
20014122:	97b6                	add	a5,a5,a3
20014124:	0807ac23          	sw	zero,152(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014128:	fec42783          	lw	a5,-20(s0)
2001412c:	0785                	addi	a5,a5,1
2001412e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20014132:	fec42703          	lw	a4,-20(s0)
20014136:	47fd                	li	a5,31
20014138:	fae7d7e3          	bge	a5,a4,200140e6 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2001413c:	fe042423          	sw	zero,-24(s0)
20014140:	a01d                	j	20014166 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20014142:	fe442703          	lw	a4,-28(s0)
20014146:	fe842783          	lw	a5,-24(s0)
2001414a:	0e878793          	addi	a5,a5,232
2001414e:	078a                	slli	a5,a5,0x2
20014150:	97ba                	add	a5,a5,a4
20014152:	20013737          	lui	a4,0x20013
20014156:	08070713          	addi	a4,a4,128 # 20013080 <__metal_default_exception_handler>
2001415a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2001415c:	fe842783          	lw	a5,-24(s0)
20014160:	0785                	addi	a5,a5,1
20014162:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20014166:	fe842703          	lw	a4,-24(s0)
2001416a:	47ad                	li	a5,11
2001416c:	fce7dbe3          	bge	a5,a4,20014142 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20014170:	305027f3          	csrr	a5,mtvec
20014174:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20014178:	200107b7          	lui	a5,0x20010
2001417c:	13478793          	addi	a5,a5,308 # 20010134 <early_trap_vector>
20014180:	fe042703          	lw	a4,-32(s0)
20014184:	00f71863          	bne	a4,a5,20014194 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20014188:	200137b7          	lui	a5,0x20013
2001418c:	30078593          	addi	a1,a5,768 # 20013300 <__metal_exception_handler>
20014190:	4501                	li	a0,0
20014192:	3b39                	jal	20013eb0 <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20014194:	fe442783          	lw	a5,-28(s0)
20014198:	4705                	li	a4,1
2001419a:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2001419c:	0001                	nop
2001419e:	50b2                	lw	ra,44(sp)
200141a0:	5422                	lw	s0,40(sp)
200141a2:	6145                	addi	sp,sp,48
200141a4:	8082                	ret

200141a6 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
200141a6:	7179                	addi	sp,sp,-48
200141a8:	d606                	sw	ra,44(sp)
200141aa:	d422                	sw	s0,40(sp)
200141ac:	1800                	addi	s0,sp,48
200141ae:	fca42e23          	sw	a0,-36(s0)
200141b2:	fcb42c23          	sw	a1,-40(s0)
200141b6:	fcc42a23          	sw	a2,-44(s0)
200141ba:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
200141be:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200141c2:	fdc42783          	lw	a5,-36(s0)
200141c6:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
200141ca:	fd842503          	lw	a0,-40(s0)
200141ce:	3b51                	jal	20013f62 <__metal_valid_interrupt_id>
200141d0:	87aa                	mv	a5,a0
200141d2:	e399                	bnez	a5,200141d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
200141d4:	57d5                	li	a5,-11
200141d6:	a25d                	j	2001437c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200141d8:	fd842703          	lw	a4,-40(s0)
200141dc:	08000793          	li	a5,128
200141e0:	00f71763          	bne	a4,a5,200141ee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
200141e4:	3995                	jal	20013e58 <__metal_controller_interrupt_vector_mode>
200141e6:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200141e8:	c399                	beqz	a5,200141ee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
200141ea:	57cd                	li	a5,-13
200141ec:	aa41                	j	2001437c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
200141ee:	fd442783          	lw	a5,-44(s0)
200141f2:	cfb9                	beqz	a5,20014250 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
200141f4:	fd842703          	lw	a4,-40(s0)
200141f8:	08000793          	li	a5,128
200141fc:	00f71f63          	bne	a4,a5,2001421a <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20014200:	fe842783          	lw	a5,-24(s0)
20014204:	fd442703          	lw	a4,-44(s0)
20014208:	38e7a823          	sw	a4,912(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
2001420c:	fe842783          	lw	a5,-24(s0)
20014210:	fd042703          	lw	a4,-48(s0)
20014214:	38e7ac23          	sw	a4,920(a5)
20014218:	a285                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
2001421a:	fe842683          	lw	a3,-24(s0)
2001421e:	fd842703          	lw	a4,-40(s0)
20014222:	87ba                	mv	a5,a4
20014224:	0786                	slli	a5,a5,0x1
20014226:	97ba                	add	a5,a5,a4
20014228:	078e                	slli	a5,a5,0x3
2001422a:	97b6                	add	a5,a5,a3
2001422c:	fd442703          	lw	a4,-44(s0)
20014230:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20014234:	fe842683          	lw	a3,-24(s0)
20014238:	fd842703          	lw	a4,-40(s0)
2001423c:	87ba                	mv	a5,a4
2001423e:	0786                	slli	a5,a5,0x1
20014240:	97ba                	add	a5,a5,a4
20014242:	078e                	slli	a5,a5,0x3
20014244:	97b6                	add	a5,a5,a3
20014246:	fd042703          	lw	a4,-48(s0)
2001424a:	08e7ac23          	sw	a4,152(a5)
2001424e:	a22d                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20014250:	fd842703          	lw	a4,-40(s0)
20014254:	08000793          	li	a5,128
20014258:	0cf70163          	beq	a4,a5,2001431a <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
2001425c:	fd842703          	lw	a4,-40(s0)
20014260:	08000793          	li	a5,128
20014264:	10e7c763          	blt	a5,a4,20014372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20014268:	fd842703          	lw	a4,-40(s0)
2001426c:	47fd                	li	a5,31
2001426e:	10e7c263          	blt	a5,a4,20014372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20014272:	fd842703          	lw	a4,-40(s0)
20014276:	47c1                	li	a5,16
20014278:	0cf75063          	bge	a4,a5,20014338 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
2001427c:	fd842703          	lw	a4,-40(s0)
20014280:	47ad                	li	a5,11
20014282:	0af70b63          	beq	a4,a5,20014338 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20014286:	fd842703          	lw	a4,-40(s0)
2001428a:	47ad                	li	a5,11
2001428c:	0ee7c363          	blt	a5,a4,20014372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20014290:	fd842703          	lw	a4,-40(s0)
20014294:	478d                	li	a5,3
20014296:	00f70863          	beq	a4,a5,200142a6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
2001429a:	fd842703          	lw	a4,-40(s0)
2001429e:	479d                	li	a5,7
200142a0:	04f70063          	beq	a4,a5,200142e0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
200142a4:	a0f9                	j	20014372 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
200142a6:	fe842683          	lw	a3,-24(s0)
200142aa:	fd842703          	lw	a4,-40(s0)
200142ae:	87ba                	mv	a5,a4
200142b0:	0786                	slli	a5,a5,0x1
200142b2:	97ba                	add	a5,a5,a4
200142b4:	078e                	slli	a5,a5,0x3
200142b6:	97b6                	add	a5,a5,a3
200142b8:	20013737          	lui	a4,0x20013
200142bc:	17070713          	addi	a4,a4,368 # 20013170 <__metal_default_sw_handler>
200142c0:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
200142c4:	fe842683          	lw	a3,-24(s0)
200142c8:	fd842703          	lw	a4,-40(s0)
200142cc:	87ba                	mv	a5,a4
200142ce:	0786                	slli	a5,a5,0x1
200142d0:	97ba                	add	a5,a5,a4
200142d2:	078e                	slli	a5,a5,0x3
200142d4:	97b6                	add	a5,a5,a3
200142d6:	fd042703          	lw	a4,-48(s0)
200142da:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
200142de:	a869                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
200142e0:	fe842683          	lw	a3,-24(s0)
200142e4:	fd842703          	lw	a4,-40(s0)
200142e8:	87ba                	mv	a5,a4
200142ea:	0786                	slli	a5,a5,0x1
200142ec:	97ba                	add	a5,a5,a4
200142ee:	078e                	slli	a5,a5,0x3
200142f0:	97b6                	add	a5,a5,a3
200142f2:	20013737          	lui	a4,0x20013
200142f6:	28070713          	addi	a4,a4,640 # 20013280 <__metal_default_timer_handler>
200142fa:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
200142fe:	fe842683          	lw	a3,-24(s0)
20014302:	fd842703          	lw	a4,-40(s0)
20014306:	87ba                	mv	a5,a4
20014308:	0786                	slli	a5,a5,0x1
2001430a:	97ba                	add	a5,a5,a4
2001430c:	078e                	slli	a5,a5,0x3
2001430e:	97b6                	add	a5,a5,a3
20014310:	fd042703          	lw	a4,-48(s0)
20014314:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20014318:	a085                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2001431a:	fe842783          	lw	a5,-24(s0)
2001431e:	20013737          	lui	a4,0x20013
20014322:	26a70713          	addi	a4,a4,618 # 2001326a <__metal_default_beu_handler>
20014326:	38e7a823          	sw	a4,912(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001432a:	fe842783          	lw	a5,-24(s0)
2001432e:	fd042703          	lw	a4,-48(s0)
20014332:	38e7ac23          	sw	a4,920(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014336:	a089                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014338:	fe842683          	lw	a3,-24(s0)
2001433c:	fd842703          	lw	a4,-40(s0)
20014340:	87ba                	mv	a5,a4
20014342:	0786                	slli	a5,a5,0x1
20014344:	97ba                	add	a5,a5,a4
20014346:	078e                	slli	a5,a5,0x3
20014348:	97b6                	add	a5,a5,a3
2001434a:	20013737          	lui	a4,0x20013
2001434e:	09870713          	addi	a4,a4,152 # 20013098 <__metal_default_interrupt_handler>
20014352:	08e7a823          	sw	a4,144(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20014356:	fe842683          	lw	a3,-24(s0)
2001435a:	fd842703          	lw	a4,-40(s0)
2001435e:	87ba                	mv	a5,a4
20014360:	0786                	slli	a5,a5,0x1
20014362:	97ba                	add	a5,a5,a4
20014364:	078e                	slli	a5,a5,0x3
20014366:	97b6                	add	a5,a5,a3
20014368:	fd042703          	lw	a4,-48(s0)
2001436c:	08e7aa23          	sw	a4,148(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20014370:	a021                	j	20014378 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20014372:	57d1                	li	a5,-12
20014374:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20014378:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:549
}
2001437c:	853e                	mv	a0,a5
2001437e:	50b2                	lw	ra,44(sp)
20014380:	5422                	lw	s0,40(sp)
20014382:	6145                	addi	sp,sp,48
20014384:	8082                	ret

20014386 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20014386:	1101                	addi	sp,sp,-32
20014388:	ce06                	sw	ra,28(sp)
2001438a:	cc22                	sw	s0,24(sp)
2001438c:	1000                	addi	s0,sp,32
2001438e:	fea42623          	sw	a0,-20(s0)
20014392:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20014396:	fe842783          	lw	a5,-24(s0)
2001439a:	4605                	li	a2,1
2001439c:	85be                	mv	a1,a5
2001439e:	fec42503          	lw	a0,-20(s0)
200143a2:	c19ff0ef          	jal	ra,20013fba <__metal_local_interrupt_enable>
200143a6:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:554
}
200143a8:	853e                	mv	a0,a5
200143aa:	40f2                	lw	ra,28(sp)
200143ac:	4462                	lw	s0,24(sp)
200143ae:	6105                	addi	sp,sp,32
200143b0:	8082                	ret

200143b2 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
200143b2:	1101                	addi	sp,sp,-32
200143b4:	ce06                	sw	ra,28(sp)
200143b6:	cc22                	sw	s0,24(sp)
200143b8:	1000                	addi	s0,sp,32
200143ba:	fea42623          	sw	a0,-20(s0)
200143be:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
200143c2:	fe842783          	lw	a5,-24(s0)
200143c6:	4601                	li	a2,0
200143c8:	85be                	mv	a1,a5
200143ca:	fec42503          	lw	a0,-20(s0)
200143ce:	bedff0ef          	jal	ra,20013fba <__metal_local_interrupt_enable>
200143d2:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:559
}
200143d4:	853e                	mv	a0,a5
200143d6:	40f2                	lw	ra,28(sp)
200143d8:	4462                	lw	s0,24(sp)
200143da:	6105                	addi	sp,sp,32
200143dc:	8082                	ret

200143de <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
200143de:	1101                	addi	sp,sp,-32
200143e0:	ce06                	sw	ra,28(sp)
200143e2:	cc22                	sw	s0,24(sp)
200143e4:	1000                	addi	s0,sp,32
200143e6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
200143ea:	a6fff0ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
200143ee:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:593
}
200143f0:	853e                	mv	a0,a5
200143f2:	40f2                	lw	ra,28(sp)
200143f4:	4462                	lw	s0,24(sp)
200143f6:	6105                	addi	sp,sp,32
200143f8:	8082                	ret

200143fa <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200143fa:	1101                	addi	sp,sp,-32
200143fc:	ce06                	sw	ra,28(sp)
200143fe:	cc22                	sw	s0,24(sp)
20014400:	1000                	addi	s0,sp,32
20014402:	fea42623          	sw	a0,-20(s0)
20014406:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
2001440a:	fe842783          	lw	a5,-24(s0)
2001440e:	eb99                	bnez	a5,20014424 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20014410:	200137b7          	lui	a5,0x20013
20014414:	30078593          	addi	a1,a5,768 # 20013300 <__metal_exception_handler>
20014418:	fe842503          	lw	a0,-24(s0)
2001441c:	a95ff0ef          	jal	ra,20013eb0 <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20014420:	4781                	li	a5,0
20014422:	a00d                	j	20014444 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20014424:	fe842703          	lw	a4,-24(s0)
20014428:	4785                	li	a5,1
2001442a:	00f71c63          	bne	a4,a5,20014442 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2001442e:	200177b7          	lui	a5,0x20017
20014432:	e8078593          	addi	a1,a5,-384 # 20016e80 <__metal_vector_table>
20014436:	fe842503          	lw	a0,-24(s0)
2001443a:	a77ff0ef          	jal	ra,20013eb0 <__metal_controller_interrupt_vector>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2001443e:	4781                	li	a5,0
20014440:	a011                	j	20014444 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20014442:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:609
}
20014444:	853e                	mv	a0,a5
20014446:	40f2                	lw	ra,28(sp)
20014448:	4462                	lw	s0,24(sp)
2001444a:	6105                	addi	sp,sp,32
2001444c:	8082                	ret

2001444e <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
2001444e:	1101                	addi	sp,sp,-32
20014450:	ce22                	sw	s0,28(sp)
20014452:	1000                	addi	s0,sp,32
20014454:	fea42623          	sw	a0,-20(s0)
20014458:	feb42423          	sw	a1,-24(s0)
2001445c:	fec42223          	sw	a2,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20014460:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:616
}
20014462:	853e                	mv	a0,a5
20014464:	4472                	lw	s0,28(sp)
20014466:	6105                	addi	sp,sp,32
20014468:	8082                	ret

2001446a <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
2001446a:	7139                	addi	sp,sp,-64
2001446c:	de22                	sw	s0,60(sp)
2001446e:	0080                	addi	s0,sp,64
20014470:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20014474:	4501                	li	a0,0
20014476:	4581                	li	a1,0
20014478:	fea42423          	sw	a0,-24(s0)
2001447c:	feb42623          	sw	a1,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20014480:	b80025f3          	csrr	a1,mcycleh
20014484:	feb42223          	sw	a1,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20014488:	b00025f3          	csrr	a1,mcycle
2001448c:	feb42023          	sw	a1,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20014490:	b80025f3          	csrr	a1,mcycleh
20014494:	fcb42e23          	sw	a1,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20014498:	fe442503          	lw	a0,-28(s0)
2001449c:	fdc42583          	lw	a1,-36(s0)
200144a0:	feb510e3          	bne	a0,a1,20014480 <__metal_driver_cpu_mcycle_get+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
200144a4:	fe442583          	lw	a1,-28(s0)
200144a8:	882e                	mv	a6,a1
200144aa:	4881                	li	a7,0
200144ac:	00081793          	slli	a5,a6,0x0
200144b0:	4701                	li	a4,0
200144b2:	fe042583          	lw	a1,-32(s0)
200144b6:	862e                	mv	a2,a1
200144b8:	4681                	li	a3,0
200144ba:	00c765b3          	or	a1,a4,a2
200144be:	feb42423          	sw	a1,-24(s0)
200144c2:	8fd5                	or	a5,a5,a3
200144c4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
200144c8:	fe842703          	lw	a4,-24(s0)
200144cc:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:640
}
200144d0:	853a                	mv	a0,a4
200144d2:	85be                	mv	a1,a5
200144d4:	5472                	lw	s0,60(sp)
200144d6:	6121                	addi	sp,sp,64
200144d8:	8082                	ret

200144da <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
200144da:	7179                	addi	sp,sp,-48
200144dc:	d606                	sw	ra,44(sp)
200144de:	d422                	sw	s0,40(sp)
200144e0:	d24a                	sw	s2,36(sp)
200144e2:	d04e                	sw	s3,32(sp)
200144e4:	1800                	addi	s0,sp,48
200144e6:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
200144ea:	fdc42783          	lw	a5,-36(s0)
200144ee:	e781                	bnez	a5,200144f6 <__metal_driver_cpu_timebase_get+0x1c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
200144f0:	4901                	li	s2,0
200144f2:	4981                	li	s3,0
200144f4:	a821                	j	2001450c <__metal_driver_cpu_timebase_get+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
200144f6:	fdc42503          	lw	a0,-36(s0)
200144fa:	9a1fe0ef          	jal	ra,20012e9a <__metal_driver_cpu_timebase>
200144fe:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20014502:	fec42783          	lw	a5,-20(s0)
20014506:	893e                	mv	s2,a5
20014508:	87fd                	srai	a5,a5,0x1f
2001450a:	89be                	mv	s3,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:650
}
2001450c:	874a                	mv	a4,s2
2001450e:	87ce                	mv	a5,s3
20014510:	853a                	mv	a0,a4
20014512:	85be                	mv	a1,a5
20014514:	50b2                	lw	ra,44(sp)
20014516:	5422                	lw	s0,40(sp)
20014518:	5912                	lw	s2,36(sp)
2001451a:	5982                	lw	s3,32(sp)
2001451c:	6145                	addi	sp,sp,48
2001451e:	8082                	ret

20014520 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20014520:	7179                	addi	sp,sp,-48
20014522:	d606                	sw	ra,44(sp)
20014524:	d422                	sw	s0,40(sp)
20014526:	1800                	addi	s0,sp,48
20014528:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2001452c:	4781                	li	a5,0
2001452e:	4801                	li	a6,0
20014530:	fef42023          	sw	a5,-32(s0)
20014534:	ff042223          	sw	a6,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014538:	fdc42503          	lw	a0,-36(s0)
2001453c:	989fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20014540:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20014544:	fec42783          	lw	a5,-20(s0)
20014548:	c78d                	beqz	a5,20014572 <__metal_driver_cpu_mtime_get+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2001454a:	fec42783          	lw	a5,-20(s0)
2001454e:	13c7a783          	lw	a5,316(a5)
20014552:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20014556:	fe842783          	lw	a5,-24(s0)
2001455a:	cf81                	beqz	a5,20014572 <__metal_driver_cpu_mtime_get+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
2001455c:	fe842783          	lw	a5,-24(s0)
20014560:	439c                	lw	a5,0(a5)
20014562:	47f8                	lw	a4,76(a5)
20014564:	fe040793          	addi	a5,s0,-32
20014568:	863e                	mv	a2,a5
2001456a:	4585                	li	a1,1
2001456c:	fe842503          	lw	a0,-24(s0)
20014570:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20014572:	fe042703          	lw	a4,-32(s0)
20014576:	fe442783          	lw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:667
}
2001457a:	853a                	mv	a0,a4
2001457c:	85be                	mv	a1,a5
2001457e:	50b2                	lw	ra,44(sp)
20014580:	5422                	lw	s0,40(sp)
20014582:	6145                	addi	sp,sp,48
20014584:	8082                	ret

20014586 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20014586:	7179                	addi	sp,sp,-48
20014588:	d606                	sw	ra,44(sp)
2001458a:	d422                	sw	s0,40(sp)
2001458c:	d226                	sw	s1,36(sp)
2001458e:	1800                	addi	s0,sp,48
20014590:	fca42e23          	sw	a0,-36(s0)
20014594:	fcb42823          	sw	a1,-48(s0)
20014598:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
2001459c:	57fd                	li	a5,-1
2001459e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200145a2:	fdc42503          	lw	a0,-36(s0)
200145a6:	91ffe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200145aa:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
200145ae:	fe842783          	lw	a5,-24(s0)
200145b2:	cf8d                	beqz	a5,200145ec <__metal_driver_cpu_mtimecmp_set+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200145b4:	fe842783          	lw	a5,-24(s0)
200145b8:	13c7a783          	lw	a5,316(a5)
200145bc:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
200145c0:	fe442783          	lw	a5,-28(s0)
200145c4:	c785                	beqz	a5,200145ec <__metal_driver_cpu_mtimecmp_set+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
200145c6:	fe442783          	lw	a5,-28(s0)
200145ca:	439c                	lw	a5,0(a5)
200145cc:	4ba4                	lw	s1,80(a5)
200145ce:	fdc42503          	lw	a0,-36(s0)
200145d2:	8a5fe0ef          	jal	ra,20012e76 <__metal_driver_cpu_hartid>
200145d6:	87aa                	mv	a5,a0
200145d8:	fd042603          	lw	a2,-48(s0)
200145dc:	fd442683          	lw	a3,-44(s0)
200145e0:	85be                	mv	a1,a5
200145e2:	fe442503          	lw	a0,-28(s0)
200145e6:	9482                	jalr	s1
200145e8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
200145ec:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:685
}
200145f0:	853e                	mv	a0,a5
200145f2:	50b2                	lw	ra,44(sp)
200145f4:	5422                	lw	s0,40(sp)
200145f6:	5492                	lw	s1,36(sp)
200145f8:	6145                	addi	sp,sp,48
200145fa:	8082                	ret

200145fc <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
200145fc:	1101                	addi	sp,sp,-32
200145fe:	ce22                	sw	s0,28(sp)
20014600:	1000                	addi	s0,sp,32
20014602:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20014606:	800017b7          	lui	a5,0x80001
2001460a:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2001460e:	853e                	mv	a0,a5
20014610:	4472                	lw	s0,28(sp)
20014612:	6105                	addi	sp,sp,32
20014614:	8082                	ret

20014616 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20014616:	1101                	addi	sp,sp,-32
20014618:	ce22                	sw	s0,28(sp)
2001461a:	1000                	addi	s0,sp,32
2001461c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20014620:	479d                	li	a5,7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:703
}
20014622:	853e                	mv	a0,a5
20014624:	4472                	lw	s0,28(sp)
20014626:	6105                	addi	sp,sp,32
20014628:	8082                	ret

2001462a <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
2001462a:	1101                	addi	sp,sp,-32
2001462c:	ce22                	sw	s0,28(sp)
2001462e:	1000                	addi	s0,sp,32
20014630:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20014634:	800017b7          	lui	a5,0x80001
20014638:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
2001463c:	853e                	mv	a0,a5
2001463e:	4472                	lw	s0,28(sp)
20014640:	6105                	addi	sp,sp,32
20014642:	8082                	ret

20014644 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20014644:	1101                	addi	sp,sp,-32
20014646:	ce22                	sw	s0,28(sp)
20014648:	1000                	addi	s0,sp,32
2001464a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
2001464e:	478d                	li	a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:721
}
20014650:	853e                	mv	a0,a5
20014652:	4472                	lw	s0,28(sp)
20014654:	6105                	addi	sp,sp,32
20014656:	8082                	ret

20014658 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20014658:	7179                	addi	sp,sp,-48
2001465a:	d606                	sw	ra,44(sp)
2001465c:	d422                	sw	s0,40(sp)
2001465e:	1800                	addi	s0,sp,48
20014660:	fca42e23          	sw	a0,-36(s0)
20014664:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20014668:	57fd                	li	a5,-1
2001466a:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001466e:	fdc42503          	lw	a0,-36(s0)
20014672:	853fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20014676:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2001467a:	fe842783          	lw	a5,-24(s0)
2001467e:	c79d                	beqz	a5,200146ac <__metal_driver_cpu_set_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014680:	fe842783          	lw	a5,-24(s0)
20014684:	0dc7a783          	lw	a5,220(a5)
20014688:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
2001468c:	fe442783          	lw	a5,-28(s0)
20014690:	cf91                	beqz	a5,200146ac <__metal_driver_cpu_set_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20014692:	fe442783          	lw	a5,-28(s0)
20014696:	439c                	lw	a5,0(a5)
20014698:	47f8                	lw	a4,76(a5)
2001469a:	fd840793          	addi	a5,s0,-40
2001469e:	863e                	mv	a2,a5
200146a0:	458d                	li	a1,3
200146a2:	fe442503          	lw	a0,-28(s0)
200146a6:	9702                	jalr	a4
200146a8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
200146ac:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:738
}
200146b0:	853e                	mv	a0,a5
200146b2:	50b2                	lw	ra,44(sp)
200146b4:	5422                	lw	s0,40(sp)
200146b6:	6145                	addi	sp,sp,48
200146b8:	8082                	ret

200146ba <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
200146ba:	7179                	addi	sp,sp,-48
200146bc:	d606                	sw	ra,44(sp)
200146be:	d422                	sw	s0,40(sp)
200146c0:	1800                	addi	s0,sp,48
200146c2:	fca42e23          	sw	a0,-36(s0)
200146c6:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
200146ca:	57fd                	li	a5,-1
200146cc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200146d0:	fdc42503          	lw	a0,-36(s0)
200146d4:	ff0fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200146d8:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200146dc:	fe842783          	lw	a5,-24(s0)
200146e0:	c79d                	beqz	a5,2001470e <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200146e2:	fe842783          	lw	a5,-24(s0)
200146e6:	0dc7a783          	lw	a5,220(a5)
200146ea:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200146ee:	fe442783          	lw	a5,-28(s0)
200146f2:	cf91                	beqz	a5,2001470e <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200146f4:	fe442783          	lw	a5,-28(s0)
200146f8:	439c                	lw	a5,0(a5)
200146fa:	47f8                	lw	a4,76(a5)
200146fc:	fd840793          	addi	a5,s0,-40
20014700:	863e                	mv	a2,a5
20014702:	4589                	li	a1,2
20014704:	fe442503          	lw	a0,-28(s0)
20014708:	9702                	jalr	a4
2001470a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2001470e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:755
}
20014712:	853e                	mv	a0,a5
20014714:	50b2                	lw	ra,44(sp)
20014716:	5422                	lw	s0,40(sp)
20014718:	6145                	addi	sp,sp,48
2001471a:	8082                	ret

2001471c <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
2001471c:	7179                	addi	sp,sp,-48
2001471e:	d606                	sw	ra,44(sp)
20014720:	d422                	sw	s0,40(sp)
20014722:	1800                	addi	s0,sp,48
20014724:	fca42e23          	sw	a0,-36(s0)
20014728:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
2001472c:	fe042623          	sw	zero,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014730:	fdc42503          	lw	a0,-36(s0)
20014734:	f90fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20014738:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
2001473c:	fe842783          	lw	a5,-24(s0)
20014740:	c79d                	beqz	a5,2001476e <__metal_driver_cpu_get_msip+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014742:	fe842783          	lw	a5,-24(s0)
20014746:	0dc7a783          	lw	a5,220(a5)
2001474a:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
2001474e:	fe442783          	lw	a5,-28(s0)
20014752:	cf91                	beqz	a5,2001476e <__metal_driver_cpu_get_msip+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20014754:	fe442783          	lw	a5,-28(s0)
20014758:	439c                	lw	a5,0(a5)
2001475a:	47f8                	lw	a4,76(a5)
2001475c:	fd840793          	addi	a5,s0,-40
20014760:	863e                	mv	a2,a5
20014762:	4591                	li	a1,4
20014764:	fe442503          	lw	a0,-28(s0)
20014768:	9702                	jalr	a4
2001476a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
2001476e:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:772
}
20014772:	853e                	mv	a0,a5
20014774:	50b2                	lw	ra,44(sp)
20014776:	5422                	lw	s0,40(sp)
20014778:	6145                	addi	sp,sp,48
2001477a:	8082                	ret

2001477c <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
2001477c:	1101                	addi	sp,sp,-32
2001477e:	ce06                	sw	ra,28(sp)
20014780:	cc22                	sw	s0,24(sp)
20014782:	1000                	addi	s0,sp,32
20014784:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20014788:	fec42503          	lw	a0,-20(s0)
2001478c:	f38fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
20014790:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:777
}
20014792:	853e                	mv	a0,a5
20014794:	40f2                	lw	ra,28(sp)
20014796:	4462                	lw	s0,24(sp)
20014798:	6105                	addi	sp,sp,32
2001479a:	8082                	ret

2001479c <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
2001479c:	7179                	addi	sp,sp,-48
2001479e:	d606                	sw	ra,44(sp)
200147a0:	d422                	sw	s0,40(sp)
200147a2:	1800                	addi	s0,sp,48
200147a4:	fca42e23          	sw	a0,-36(s0)
200147a8:	fcb42c23          	sw	a1,-40(s0)
200147ac:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200147b0:	fdc42503          	lw	a0,-36(s0)
200147b4:	f10fe0ef          	jal	ra,20012ec4 <__metal_driver_cpu_interrupt_controller>
200147b8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
200147bc:	fec42783          	lw	a5,-20(s0)
200147c0:	cb99                	beqz	a5,200147d6 <__metal_driver_cpu_exception_register+0x3a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
200147c2:	fd442603          	lw	a2,-44(s0)
200147c6:	fd842583          	lw	a1,-40(s0)
200147ca:	fec42503          	lw	a0,-20(s0)
200147ce:	8a9ff0ef          	jal	ra,20014076 <__metal_exception_register>
200147d2:	87aa                	mv	a5,a0
200147d4:	a011                	j	200147d8 <__metal_driver_cpu_exception_register+0x3c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200147d6:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:808
}
200147d8:	853e                	mv	a0,a5
200147da:	50b2                	lw	ra,44(sp)
200147dc:	5422                	lw	s0,40(sp)
200147de:	6145                	addi	sp,sp,48
200147e0:	8082                	ret

200147e2 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200147e2:	1101                	addi	sp,sp,-32
200147e4:	ce22                	sw	s0,28(sp)
200147e6:	1000                	addi	s0,sp,32
200147e8:	fea42623          	sw	a0,-20(s0)
200147ec:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200147f0:	fe842783          	lw	a5,-24(s0)
200147f4:	0007d783          	lhu	a5,0(a5)
200147f8:	0037f713          	andi	a4,a5,3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
200147fc:	478d                	li	a5,3
200147fe:	00f71463          	bne	a4,a5,20014806 <__metal_driver_cpu_get_instruction_length+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20014802:	4791                	li	a5,4
20014804:	a011                	j	20014808 <__metal_driver_cpu_get_instruction_length+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20014806:	4789                	li	a5,2
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20014808:	853e                	mv	a0,a5
2001480a:	4472                	lw	s0,28(sp)
2001480c:	6105                	addi	sp,sp,32
2001480e:	8082                	ret

20014810 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20014810:	7179                	addi	sp,sp,-48
20014812:	d622                	sw	s0,44(sp)
20014814:	1800                	addi	s0,sp,48
20014816:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2001481a:	341027f3          	csrr	a5,mepc
2001481e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20014822:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:827
}
20014826:	853e                	mv	a0,a5
20014828:	5432                	lw	s0,44(sp)
2001482a:	6145                	addi	sp,sp,48
2001482c:	8082                	ret

2001482e <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
2001482e:	1101                	addi	sp,sp,-32
20014830:	ce22                	sw	s0,28(sp)
20014832:	1000                	addi	s0,sp,32
20014834:	fea42623          	sw	a0,-20(s0)
20014838:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
2001483c:	fe842783          	lw	a5,-24(s0)
20014840:	34179073          	csrw	mepc,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20014844:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:832
}
20014846:	853e                	mv	a0,a5
20014848:	4472                	lw	s0,28(sp)
2001484a:	6105                	addi	sp,sp,32
2001484c:	8082                	ret

2001484e <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
2001484e:	1101                	addi	sp,sp,-32
20014850:	ce06                	sw	ra,28(sp)
20014852:	cc22                	sw	s0,24(sp)
20014854:	1000                	addi	s0,sp,32
20014856:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
2001485a:	fec42503          	lw	a0,-20(s0)
2001485e:	e90fe0ef          	jal	ra,20012eee <__metal_driver_cpu_buserror>
20014862:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_cpu.c:836
}
20014864:	853e                	mv	a0,a5
20014866:	40f2                	lw	ra,28(sp)
20014868:	4462                	lw	s0,24(sp)
2001486a:	6105                	addi	sp,sp,32
2001486c:	8082                	ret

2001486e <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
2001486e:	1101                	addi	sp,sp,-32
20014870:	ce22                	sw	s0,28(sp)
20014872:	1000                	addi	s0,sp,32
20014874:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014878:	fec42703          	lw	a4,-20(s0)
2001487c:	800007b7          	lui	a5,0x80000
20014880:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
20014884:	00f71563          	bne	a4,a5,2001488e <__metal_driver_sifive_plic0_control_base+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20014888:	0c0007b7          	lui	a5,0xc000
2001488c:	a011                	j	20014890 <__metal_driver_sifive_plic0_control_base+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
2001488e:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:352
	}
}
20014890:	853e                	mv	a0,a5
20014892:	4472                	lw	s0,28(sp)
20014894:	6105                	addi	sp,sp,32
20014896:	8082                	ret

20014898 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20014898:	1101                	addi	sp,sp,-32
2001489a:	ce22                	sw	s0,28(sp)
2001489c:	1000                	addi	s0,sp,32
2001489e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200148a2:	fec42703          	lw	a4,-20(s0)
200148a6:	800007b7          	lui	a5,0x80000
200148aa:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
200148ae:	00f71563          	bne	a4,a5,200148b8 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
200148b2:	03500793          	li	a5,53
200148b6:	a011                	j	200148ba <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
200148b8:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:372
	}
}
200148ba:	853e                	mv	a0,a5
200148bc:	4472                	lw	s0,28(sp)
200148be:	6105                	addi	sp,sp,32
200148c0:	8082                	ret

200148c2 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
200148c2:	1101                	addi	sp,sp,-32
200148c4:	ce22                	sw	s0,28(sp)
200148c6:	1000                	addi	s0,sp,32
200148c8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200148cc:	fec42703          	lw	a4,-20(s0)
200148d0:	800007b7          	lui	a5,0x80000
200148d4:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
200148d8:	00f71463          	bne	a4,a5,200148e0 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200148dc:	479d                	li	a5,7
200148de:	a011                	j	200148e2 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
200148e0:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:382
	}
}
200148e2:	853e                	mv	a0,a5
200148e4:	4472                	lw	s0,28(sp)
200148e6:	6105                	addi	sp,sp,32
200148e8:	8082                	ret

200148ea <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200148ea:	1101                	addi	sp,sp,-32
200148ec:	ce22                	sw	s0,28(sp)
200148ee:	1000                	addi	s0,sp,32
200148f0:	fea42623          	sw	a0,-20(s0)
200148f4:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:386
	if (idx == 0) {
200148f8:	fe842783          	lw	a5,-24(s0)
200148fc:	e791                	bnez	a5,20014908 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200148fe:	800007b7          	lui	a5,0x80000
20014902:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
20014906:	a011                	j	2001490a <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
20014908:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:392
	}
}
2001490a:	853e                	mv	a0,a5
2001490c:	4472                	lw	s0,28(sp)
2001490e:	6105                	addi	sp,sp,32
20014910:	8082                	ret

20014912 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20014912:	1101                	addi	sp,sp,-32
20014914:	ce22                	sw	s0,28(sp)
20014916:	1000                	addi	s0,sp,32
20014918:	fea42623          	sw	a0,-20(s0)
2001491c:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:396
	if (idx == 0) {
20014920:	fe842783          	lw	a5,-24(s0)
20014924:	e399                	bnez	a5,2001492a <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:397
		return 11;
20014926:	47ad                	li	a5,11
20014928:	a011                	j	2001492c <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
2001492a:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:402
	}
}
2001492c:	853e                	mv	a0,a5
2001492e:	4472                	lw	s0,28(sp)
20014930:	6105                	addi	sp,sp,32
20014932:	8082                	ret

20014934 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20014934:	1101                	addi	sp,sp,-32
20014936:	ce22                	sw	s0,28(sp)
20014938:	1000                	addi	s0,sp,32
2001493a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:406
	if (hartid == 0) {
2001493e:	fec42783          	lw	a5,-20(s0)
20014942:	e399                	bnez	a5,20014948 <__metal_driver_sifive_plic0_context_ids+0x14>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:407
		return 0;
20014944:	4781                	li	a5,0
20014946:	a011                	j	2001494a <__metal_driver_sifive_plic0_context_ids+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
20014948:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:412
	}
}
2001494a:	853e                	mv	a0,a5
2001494c:	4472                	lw	s0,28(sp)
2001494e:	6105                	addi	sp,sp,32
20014950:	8082                	ret

20014952 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20014952:	7179                	addi	sp,sp,-48
20014954:	d606                	sw	ra,44(sp)
20014956:	d422                	sw	s0,40(sp)
20014958:	1800                	addi	s0,sp,48
2001495a:	fca42e23          	sw	a0,-36(s0)
2001495e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014962:	fdc42503          	lw	a0,-36(s0)
20014966:	3721                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
20014968:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
2001496c:	fd842783          	lw	a5,-40(s0)
20014970:	00c79713          	slli	a4,a5,0xc
20014974:	fec42783          	lw	a5,-20(s0)
20014978:	973e                	add	a4,a4,a5
2001497a:	002007b7          	lui	a5,0x200
2001497e:	0791                	addi	a5,a5,4
20014980:	97ba                	add	a5,a5,a4
20014982:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20014984:	853e                	mv	a0,a5
20014986:	50b2                	lw	ra,44(sp)
20014988:	5422                	lw	s0,40(sp)
2001498a:	6145                	addi	sp,sp,48
2001498c:	8082                	ret

2001498e <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
2001498e:	7179                	addi	sp,sp,-48
20014990:	d606                	sw	ra,44(sp)
20014992:	d422                	sw	s0,40(sp)
20014994:	1800                	addi	s0,sp,48
20014996:	fca42e23          	sw	a0,-36(s0)
2001499a:	fcb42c23          	sw	a1,-40(s0)
2001499e:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200149a2:	fdc42503          	lw	a0,-36(s0)
200149a6:	35e1                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
200149a8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
200149ac:	fd842783          	lw	a5,-40(s0)
200149b0:	00c79713          	slli	a4,a5,0xc
200149b4:	fec42783          	lw	a5,-20(s0)
200149b8:	973e                	add	a4,a4,a5
200149ba:	002007b7          	lui	a5,0x200
200149be:	0791                	addi	a5,a5,4
200149c0:	97ba                	add	a5,a5,a4
200149c2:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
200149c4:	fd442783          	lw	a5,-44(s0)
200149c8:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:35
}
200149ca:	0001                	nop
200149cc:	50b2                	lw	ra,44(sp)
200149ce:	5422                	lw	s0,40(sp)
200149d0:	6145                	addi	sp,sp,48
200149d2:	8082                	ret

200149d4 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
200149d4:	7179                	addi	sp,sp,-48
200149d6:	d606                	sw	ra,44(sp)
200149d8:	d422                	sw	s0,40(sp)
200149da:	1800                	addi	s0,sp,48
200149dc:	fca42e23          	sw	a0,-36(s0)
200149e0:	fcb42c23          	sw	a1,-40(s0)
200149e4:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200149e8:	fdc42503          	lw	a0,-36(s0)
200149ec:	3549                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
200149ee:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
200149f2:	fd842783          	lw	a5,-40(s0)
200149f6:	00c79713          	slli	a4,a5,0xc
200149fa:	fec42783          	lw	a5,-20(s0)
200149fe:	973e                	add	a4,a4,a5
20014a00:	002007b7          	lui	a5,0x200
20014a04:	97ba                	add	a5,a5,a4
20014a06:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20014a08:	fd442783          	lw	a5,-44(s0)
20014a0c:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20014a0e:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:46
}
20014a10:	853e                	mv	a0,a5
20014a12:	50b2                	lw	ra,44(sp)
20014a14:	5422                	lw	s0,40(sp)
20014a16:	6145                	addi	sp,sp,48
20014a18:	8082                	ret

20014a1a <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20014a1a:	7179                	addi	sp,sp,-48
20014a1c:	d606                	sw	ra,44(sp)
20014a1e:	d422                	sw	s0,40(sp)
20014a20:	1800                	addi	s0,sp,48
20014a22:	fca42e23          	sw	a0,-36(s0)
20014a26:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014a2a:	fdc42503          	lw	a0,-36(s0)
20014a2e:	3581                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
20014a30:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20014a34:	fd842783          	lw	a5,-40(s0)
20014a38:	00c79713          	slli	a4,a5,0xc
20014a3c:	fec42783          	lw	a5,-20(s0)
20014a40:	973e                	add	a4,a4,a5
20014a42:	002007b7          	lui	a5,0x200
20014a46:	97ba                	add	a5,a5,a4
20014a48:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20014a4a:	853e                	mv	a0,a5
20014a4c:	50b2                	lw	ra,44(sp)
20014a4e:	5422                	lw	s0,40(sp)
20014a50:	6145                	addi	sp,sp,48
20014a52:	8082                	ret

20014a54 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20014a54:	7179                	addi	sp,sp,-48
20014a56:	d606                	sw	ra,44(sp)
20014a58:	d422                	sw	s0,40(sp)
20014a5a:	1800                	addi	s0,sp,48
20014a5c:	fca42e23          	sw	a0,-36(s0)
20014a60:	fcb42c23          	sw	a1,-40(s0)
20014a64:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014a68:	fdc42503          	lw	a0,-36(s0)
20014a6c:	3509                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
20014a6e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20014a72:	fdc42503          	lw	a0,-36(s0)
20014a76:	35b1                	jal	200148c2 <__metal_driver_sifive_plic0_max_priority>
20014a78:	87aa                	mv	a5,a0
20014a7a:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20014a7e:	fe842783          	lw	a5,-24(s0)
20014a82:	c785                	beqz	a5,20014aaa <__metal_driver_riscv_plic0_set_priority+0x56>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20014a84:	fd442703          	lw	a4,-44(s0)
20014a88:	fe842783          	lw	a5,-24(s0)
20014a8c:	00f77f63          	bgeu	a4,a5,20014aaa <__metal_driver_riscv_plic0_set_priority+0x56>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20014a90:	fd842783          	lw	a5,-40(s0)
20014a94:	078a                	slli	a5,a5,0x2
20014a96:	873e                	mv	a4,a5
20014a98:	fec42783          	lw	a5,-20(s0)
20014a9c:	97ba                	add	a5,a5,a4
20014a9e:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20014aa0:	fd442783          	lw	a5,-44(s0)
20014aa4:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20014aa6:	4781                	li	a5,0
20014aa8:	a011                	j	20014aac <__metal_driver_riscv_plic0_set_priority+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20014aaa:	57fd                	li	a5,-1
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:72
}
20014aac:	853e                	mv	a0,a5
20014aae:	50b2                	lw	ra,44(sp)
20014ab0:	5422                	lw	s0,40(sp)
20014ab2:	6145                	addi	sp,sp,48
20014ab4:	8082                	ret

20014ab6 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20014ab6:	7179                	addi	sp,sp,-48
20014ab8:	d606                	sw	ra,44(sp)
20014aba:	d422                	sw	s0,40(sp)
20014abc:	1800                	addi	s0,sp,48
20014abe:	fca42e23          	sw	a0,-36(s0)
20014ac2:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014ac6:	fdc42503          	lw	a0,-36(s0)
20014aca:	3355                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
20014acc:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20014ad0:	fd842783          	lw	a5,-40(s0)
20014ad4:	078a                	slli	a5,a5,0x2
20014ad6:	873e                	mv	a4,a5
20014ad8:	fec42783          	lw	a5,-20(s0)
20014adc:	97ba                	add	a5,a5,a4
20014ade:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20014ae0:	853e                	mv	a0,a5
20014ae2:	50b2                	lw	ra,44(sp)
20014ae4:	5422                	lw	s0,40(sp)
20014ae6:	6145                	addi	sp,sp,48
20014ae8:	8082                	ret

20014aea <__metal_plic0_enable>:
__metal_plic0_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20014aea:	7179                	addi	sp,sp,-48
20014aec:	d606                	sw	ra,44(sp)
20014aee:	d422                	sw	s0,40(sp)
20014af0:	1800                	addi	s0,sp,48
20014af2:	fca42e23          	sw	a0,-36(s0)
20014af6:	fcb42c23          	sw	a1,-40(s0)
20014afa:	fcc42a23          	sw	a2,-44(s0)
20014afe:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014b02:	fdc42503          	lw	a0,-36(s0)
20014b06:	33a5                	jal	2001486e <__metal_driver_sifive_plic0_control_base>
20014b08:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20014b0c:	fd842783          	lw	a5,-40(s0)
20014b10:	00779713          	slli	a4,a5,0x7
20014b14:	fec42783          	lw	a5,-20(s0)
20014b18:	97ba                	add	a5,a5,a4
20014b1a:	fd442703          	lw	a4,-44(s0)
20014b1e:	8715                	srai	a4,a4,0x5
20014b20:	070a                	slli	a4,a4,0x2
20014b22:	973e                	add	a4,a4,a5
20014b24:	6789                	lui	a5,0x2
20014b26:	97ba                	add	a5,a5,a4
20014b28:	439c                	lw	a5,0(a5)
20014b2a:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b2e:	fd042783          	lw	a5,-48(s0)
20014b32:	cf81                	beqz	a5,20014b4a <__metal_plic0_enable+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20014b34:	fd442783          	lw	a5,-44(s0)
20014b38:	8bfd                	andi	a5,a5,31
20014b3a:	4705                	li	a4,1
20014b3c:	00f717b3          	sll	a5,a4,a5
20014b40:	873e                	mv	a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b42:	fe842783          	lw	a5,-24(s0)
20014b46:	8fd9                	or	a5,a5,a4
20014b48:	a829                	j	20014b62 <__metal_plic0_enable+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20014b4a:	fd442783          	lw	a5,-44(s0)
20014b4e:	8bfd                	andi	a5,a5,31
20014b50:	4705                	li	a4,1
20014b52:	00f717b3          	sll	a5,a4,a5
20014b56:	fff7c793          	not	a5,a5
20014b5a:	873e                	mv	a4,a5
20014b5c:	fe842783          	lw	a5,-24(s0)
20014b60:	8ff9                	and	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20014b62:	fd842703          	lw	a4,-40(s0)
20014b66:	00771693          	slli	a3,a4,0x7
20014b6a:	fec42703          	lw	a4,-20(s0)
20014b6e:	9736                	add	a4,a4,a3
20014b70:	fd442683          	lw	a3,-44(s0)
20014b74:	8695                	srai	a3,a3,0x5
20014b76:	068a                	slli	a3,a3,0x2
20014b78:	96ba                	add	a3,a3,a4
20014b7a:	6709                	lui	a4,0x2
20014b7c:	9736                	add	a4,a4,a3
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20014b7e:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20014b80:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:103
}
20014b82:	853e                	mv	a0,a5
20014b84:	50b2                	lw	ra,44(sp)
20014b86:	5422                	lw	s0,40(sp)
20014b88:	6145                	addi	sp,sp,48
20014b8a:	8082                	ret

20014b8c <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20014b8c:	1101                	addi	sp,sp,-32
20014b8e:	ce06                	sw	ra,28(sp)
20014b90:	cc22                	sw	s0,24(sp)
20014b92:	1000                	addi	s0,sp,32
20014b94:	fea42623          	sw	a0,-20(s0)
20014b98:	feb42423          	sw	a1,-24(s0)
20014b9c:	12c00513          	li	a0,300
20014ba0:	254020ef          	jal	ra,20016df4 <metal_shutdown>

20014ba4 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20014ba4:	7179                	addi	sp,sp,-48
20014ba6:	d606                	sw	ra,44(sp)
20014ba8:	d422                	sw	s0,40(sp)
20014baa:	1800                	addi	s0,sp,48
20014bac:	fca42e23          	sw	a0,-36(s0)
20014bb0:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20014bb4:	fd842783          	lw	a5,-40(s0)
20014bb8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20014bbc:	b86fe0ef          	jal	ra,20012f42 <__metal_myhart_id>
20014bc0:	87aa                	mv	a5,a0
20014bc2:	853e                	mv	a0,a5
20014bc4:	3b85                	jal	20014934 <__metal_driver_sifive_plic0_context_ids>
20014bc6:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20014bca:	fe842583          	lw	a1,-24(s0)
20014bce:	fec42503          	lw	a0,-20(s0)
20014bd2:	3341                	jal	20014952 <__metal_plic0_claim_interrupt>
20014bd4:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20014bd8:	fec42503          	lw	a0,-20(s0)
20014bdc:	3975                	jal	20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014bde:	87aa                	mv	a5,a0
20014be0:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20014be4:	fe442703          	lw	a4,-28(s0)
20014be8:	fe042783          	lw	a5,-32(s0)
20014bec:	04f77263          	bgeu	a4,a5,20014c30 <__metal_plic0_handler+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20014bf0:	fec42703          	lw	a4,-20(s0)
20014bf4:	fe442783          	lw	a5,-28(s0)
20014bf8:	078a                	slli	a5,a5,0x2
20014bfa:	97ba                	add	a5,a5,a4
20014bfc:	479c                	lw	a5,8(a5)
20014bfe:	cb8d                	beqz	a5,20014c30 <__metal_plic0_handler+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20014c00:	fec42703          	lw	a4,-20(s0)
20014c04:	fe442783          	lw	a5,-28(s0)
20014c08:	078a                	slli	a5,a5,0x2
20014c0a:	97ba                	add	a5,a5,a4
20014c0c:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20014c10:	fe442603          	lw	a2,-28(s0)
20014c14:	fec42683          	lw	a3,-20(s0)
20014c18:	fe442703          	lw	a4,-28(s0)
20014c1c:	87ba                	mv	a5,a4
20014c1e:	0786                	slli	a5,a5,0x1
20014c20:	97ba                	add	a5,a5,a4
20014c22:	078e                	slli	a5,a5,0x3
20014c24:	97b6                	add	a5,a5,a3
20014c26:	0f07a783          	lw	a5,240(a5)
20014c2a:	85be                	mv	a1,a5
20014c2c:	8532                	mv	a0,a2
20014c2e:	9802                	jalr	a6
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20014c30:	fe442603          	lw	a2,-28(s0)
20014c34:	fe842583          	lw	a1,-24(s0)
20014c38:	fec42503          	lw	a0,-20(s0)
20014c3c:	3b89                	jal	2001498e <__metal_plic0_complete_interrupt>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:121
}
20014c3e:	0001                	nop
20014c40:	50b2                	lw	ra,44(sp)
20014c42:	5422                	lw	s0,40(sp)
20014c44:	6145                	addi	sp,sp,48
20014c46:	8082                	ret

20014c48 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20014c48:	7139                	addi	sp,sp,-64
20014c4a:	de06                	sw	ra,60(sp)
20014c4c:	dc22                	sw	s0,56(sp)
20014c4e:	0080                	addi	s0,sp,64
20014c50:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014c54:	fcc42783          	lw	a5,-52(s0)
20014c58:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20014c5c:	fe442783          	lw	a5,-28(s0)
20014c60:	43dc                	lw	a5,4(a5)
20014c62:	12079a63          	bnez	a5,20014d96 <__metal_driver_riscv_plic0_init+0x14e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014c66:	fe042623          	sw	zero,-20(s0)
20014c6a:	aa31                	j	20014d86 <__metal_driver_riscv_plic0_init+0x13e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20014c6c:	fcc42503          	lw	a0,-52(s0)
20014c70:	c29ff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014c74:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20014c78:	fec42583          	lw	a1,-20(s0)
20014c7c:	fcc42503          	lw	a0,-52(s0)
20014c80:	c6bff0ef          	jal	ra,200148ea <__metal_driver_sifive_plic0_interrupt_parents>
20014c84:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20014c88:	fec42583          	lw	a1,-20(s0)
20014c8c:	fcc42503          	lw	a0,-52(s0)
20014c90:	c83ff0ef          	jal	ra,20014912 <__metal_driver_sifive_plic0_interrupt_lines>
20014c94:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20014c98:	fdc42783          	lw	a5,-36(s0)
20014c9c:	439c                	lw	a5,0(a5)
20014c9e:	439c                	lw	a5,0(a5)
20014ca0:	fdc42503          	lw	a0,-36(s0)
20014ca4:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014ca6:	fe042423          	sw	zero,-24(s0)
20014caa:	a885                	j	20014d1a <__metal_driver_riscv_plic0_init+0xd2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20014cac:	4681                	li	a3,0
20014cae:	fe842603          	lw	a2,-24(s0)
20014cb2:	fec42583          	lw	a1,-20(s0)
20014cb6:	fe442503          	lw	a0,-28(s0)
20014cba:	3d05                	jal	20014aea <__metal_plic0_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20014cbc:	fe842703          	lw	a4,-24(s0)
20014cc0:	fe042783          	lw	a5,-32(s0)
20014cc4:	04f75663          	bge	a4,a5,20014d10 <__metal_driver_riscv_plic0_init+0xc8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20014cc8:	4601                	li	a2,0
20014cca:	fe842583          	lw	a1,-24(s0)
20014cce:	fcc42503          	lw	a0,-52(s0)
20014cd2:	3349                	jal	20014a54 <__metal_driver_riscv_plic0_set_priority>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20014cd4:	fe442703          	lw	a4,-28(s0)
20014cd8:	fe842783          	lw	a5,-24(s0)
20014cdc:	078a                	slli	a5,a5,0x2
20014cde:	97ba                	add	a5,a5,a4
20014ce0:	0007a423          	sw	zero,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20014ce4:	fe442683          	lw	a3,-28(s0)
20014ce8:	fe842703          	lw	a4,-24(s0)
20014cec:	87ba                	mv	a5,a4
20014cee:	0786                	slli	a5,a5,0x1
20014cf0:	97ba                	add	a5,a5,a4
20014cf2:	078e                	slli	a5,a5,0x3
20014cf4:	97b6                	add	a5,a5,a3
20014cf6:	0e07a623          	sw	zero,236(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20014cfa:	fe442683          	lw	a3,-28(s0)
20014cfe:	fe842703          	lw	a4,-24(s0)
20014d02:	87ba                	mv	a5,a4
20014d04:	0786                	slli	a5,a5,0x1
20014d06:	97ba                	add	a5,a5,a4
20014d08:	078e                	slli	a5,a5,0x3
20014d0a:	97b6                	add	a5,a5,a3
20014d0c:	0e07a823          	sw	zero,240(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014d10:	fe842783          	lw	a5,-24(s0)
20014d14:	0785                	addi	a5,a5,1
20014d16:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20014d1a:	fe842703          	lw	a4,-24(s0)
20014d1e:	3ff00793          	li	a5,1023
20014d22:	f8e7d5e3          	bge	a5,a4,20014cac <__metal_driver_riscv_plic0_init+0x64>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20014d26:	4601                	li	a2,0
20014d28:	fec42583          	lw	a1,-20(s0)
20014d2c:	fcc42503          	lw	a0,-52(s0)
20014d30:	ca5ff0ef          	jal	ra,200149d4 <__metal_plic0_set_threshold>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20014d34:	fdc42783          	lw	a5,-36(s0)
20014d38:	439c                	lw	a5,0(a5)
20014d3a:	4fdc                	lw	a5,28(a5)
20014d3c:	fe442683          	lw	a3,-28(s0)
20014d40:	4601                	li	a2,0
20014d42:	fd842583          	lw	a1,-40(s0)
20014d46:	fdc42503          	lw	a0,-36(s0)
20014d4a:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20014d4c:	fdc42783          	lw	a5,-36(s0)
20014d50:	439c                	lw	a5,0(a5)
20014d52:	4fd8                	lw	a4,28(a5)
20014d54:	fe442683          	lw	a3,-28(s0)
20014d58:	200157b7          	lui	a5,0x20015
20014d5c:	ba478613          	addi	a2,a5,-1116 # 20014ba4 <__metal_plic0_handler>
20014d60:	fd842583          	lw	a1,-40(s0)
20014d64:	fdc42503          	lw	a0,-36(s0)
20014d68:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20014d6a:	fdc42783          	lw	a5,-36(s0)
20014d6e:	439c                	lw	a5,0(a5)
20014d70:	53dc                	lw	a5,36(a5)
20014d72:	fd842583          	lw	a1,-40(s0)
20014d76:	fdc42503          	lw	a0,-36(s0)
20014d7a:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014d7c:	fec42783          	lw	a5,-20(s0)
20014d80:	0785                	addi	a5,a5,1
20014d82:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20014d86:	fec42783          	lw	a5,-20(s0)
20014d8a:	eef051e3          	blez	a5,20014c6c <__metal_driver_riscv_plic0_init+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20014d8e:	fe442783          	lw	a5,-28(s0)
20014d92:	4705                	li	a4,1
20014d94:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20014d96:	0001                	nop
20014d98:	50f2                	lw	ra,60(sp)
20014d9a:	5462                	lw	s0,56(sp)
20014d9c:	6121                	addi	sp,sp,64
20014d9e:	8082                	ret

20014da0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20014da0:	7179                	addi	sp,sp,-48
20014da2:	d606                	sw	ra,44(sp)
20014da4:	d422                	sw	s0,40(sp)
20014da6:	1800                	addi	s0,sp,48
20014da8:	fca42e23          	sw	a0,-36(s0)
20014dac:	fcb42c23          	sw	a1,-40(s0)
20014db0:	fcc42a23          	sw	a2,-44(s0)
20014db4:	fcd42823          	sw	a3,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014db8:	fdc42783          	lw	a5,-36(s0)
20014dbc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014dc0:	fdc42503          	lw	a0,-36(s0)
20014dc4:	ad5ff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014dc8:	872a                	mv	a4,a0
20014dca:	fd842783          	lw	a5,-40(s0)
20014dce:	00e7c463          	blt	a5,a4,20014dd6 <__metal_driver_riscv_plic0_register+0x36>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20014dd2:	57fd                	li	a5,-1
20014dd4:	a051                	j	20014e58 <__metal_driver_riscv_plic0_register+0xb8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20014dd6:	fd442783          	lw	a5,-44(s0)
20014dda:	cf9d                	beqz	a5,20014e18 <__metal_driver_riscv_plic0_register+0x78>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20014ddc:	4609                	li	a2,2
20014dde:	fd842583          	lw	a1,-40(s0)
20014de2:	fdc42503          	lw	a0,-36(s0)
20014de6:	c6fff0ef          	jal	ra,20014a54 <__metal_driver_riscv_plic0_set_priority>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20014dea:	fec42703          	lw	a4,-20(s0)
20014dee:	fd842783          	lw	a5,-40(s0)
20014df2:	078a                	slli	a5,a5,0x2
20014df4:	97ba                	add	a5,a5,a4
20014df6:	fd442703          	lw	a4,-44(s0)
20014dfa:	c798                	sw	a4,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20014dfc:	fec42683          	lw	a3,-20(s0)
20014e00:	fd842703          	lw	a4,-40(s0)
20014e04:	87ba                	mv	a5,a4
20014e06:	0786                	slli	a5,a5,0x1
20014e08:	97ba                	add	a5,a5,a4
20014e0a:	078e                	slli	a5,a5,0x3
20014e0c:	97b6                	add	a5,a5,a3
20014e0e:	fd042703          	lw	a4,-48(s0)
20014e12:	0ee7a823          	sw	a4,240(a5)
20014e16:	a081                	j	20014e56 <__metal_driver_riscv_plic0_register+0xb6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20014e18:	4605                	li	a2,1
20014e1a:	fd842583          	lw	a1,-40(s0)
20014e1e:	fdc42503          	lw	a0,-36(s0)
20014e22:	c33ff0ef          	jal	ra,20014a54 <__metal_driver_riscv_plic0_set_priority>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20014e26:	fec42703          	lw	a4,-20(s0)
20014e2a:	fd842783          	lw	a5,-40(s0)
20014e2e:	078a                	slli	a5,a5,0x2
20014e30:	97ba                	add	a5,a5,a4
20014e32:	20015737          	lui	a4,0x20015
20014e36:	b8c70713          	addi	a4,a4,-1140 # 20014b8c <__metal_plic0_default_handler>
20014e3a:	c798                	sw	a4,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20014e3c:	fec42683          	lw	a3,-20(s0)
20014e40:	fd842703          	lw	a4,-40(s0)
20014e44:	87ba                	mv	a5,a4
20014e46:	0786                	slli	a5,a5,0x1
20014e48:	97ba                	add	a5,a5,a4
20014e4a:	078e                	slli	a5,a5,0x3
20014e4c:	97b6                	add	a5,a5,a3
20014e4e:	fd042703          	lw	a4,-48(s0)
20014e52:	0ee7a623          	sw	a4,236(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20014e56:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:185
}
20014e58:	853e                	mv	a0,a5
20014e5a:	50b2                	lw	ra,44(sp)
20014e5c:	5422                	lw	s0,40(sp)
20014e5e:	6145                	addi	sp,sp,48
20014e60:	8082                	ret

20014e62 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20014e62:	7179                	addi	sp,sp,-48
20014e64:	d606                	sw	ra,44(sp)
20014e66:	d422                	sw	s0,40(sp)
20014e68:	1800                	addi	s0,sp,48
20014e6a:	fca42e23          	sw	a0,-36(s0)
20014e6e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014e72:	fdc42783          	lw	a5,-36(s0)
20014e76:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014e7a:	fdc42503          	lw	a0,-36(s0)
20014e7e:	a1bff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014e82:	872a                	mv	a4,a0
20014e84:	fd842783          	lw	a5,-40(s0)
20014e88:	00e7c463          	blt	a5,a4,20014e90 <__metal_driver_riscv_plic0_enable+0x2e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20014e8c:	57fd                	li	a5,-1
20014e8e:	a829                	j	20014ea8 <__metal_driver_riscv_plic0_enable+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20014e90:	8b2fe0ef          	jal	ra,20012f42 <__metal_myhart_id>
20014e94:	87aa                	mv	a5,a0
20014e96:	4685                	li	a3,1
20014e98:	fd842603          	lw	a2,-40(s0)
20014e9c:	85be                	mv	a1,a5
20014e9e:	fec42503          	lw	a0,-20(s0)
20014ea2:	c49ff0ef          	jal	ra,20014aea <__metal_plic0_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20014ea6:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:197
}
20014ea8:	853e                	mv	a0,a5
20014eaa:	50b2                	lw	ra,44(sp)
20014eac:	5422                	lw	s0,40(sp)
20014eae:	6145                	addi	sp,sp,48
20014eb0:	8082                	ret

20014eb2 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20014eb2:	7179                	addi	sp,sp,-48
20014eb4:	d606                	sw	ra,44(sp)
20014eb6:	d422                	sw	s0,40(sp)
20014eb8:	1800                	addi	s0,sp,48
20014eba:	fca42e23          	sw	a0,-36(s0)
20014ebe:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014ec2:	fdc42783          	lw	a5,-36(s0)
20014ec6:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014eca:	fdc42503          	lw	a0,-36(s0)
20014ece:	9cbff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014ed2:	872a                	mv	a4,a0
20014ed4:	fd842783          	lw	a5,-40(s0)
20014ed8:	00e7c463          	blt	a5,a4,20014ee0 <__metal_driver_riscv_plic0_disable+0x2e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20014edc:	57fd                	li	a5,-1
20014ede:	a829                	j	20014ef8 <__metal_driver_riscv_plic0_disable+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20014ee0:	862fe0ef          	jal	ra,20012f42 <__metal_myhart_id>
20014ee4:	87aa                	mv	a5,a0
20014ee6:	4681                	li	a3,0
20014ee8:	fd842603          	lw	a2,-40(s0)
20014eec:	85be                	mv	a1,a5
20014eee:	fec42503          	lw	a0,-20(s0)
20014ef2:	bf9ff0ef          	jal	ra,20014aea <__metal_plic0_enable>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20014ef6:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:208
}
20014ef8:	853e                	mv	a0,a5
20014efa:	50b2                	lw	ra,44(sp)
20014efc:	5422                	lw	s0,40(sp)
20014efe:	6145                	addi	sp,sp,48
20014f00:	8082                	ret

20014f02 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20014f02:	1101                	addi	sp,sp,-32
20014f04:	ce06                	sw	ra,28(sp)
20014f06:	cc22                	sw	s0,24(sp)
20014f08:	1000                	addi	s0,sp,32
20014f0a:	fea42623          	sw	a0,-20(s0)
20014f0e:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20014f12:	830fe0ef          	jal	ra,20012f42 <__metal_myhart_id>
20014f16:	87aa                	mv	a5,a0
20014f18:	fe842603          	lw	a2,-24(s0)
20014f1c:	85be                	mv	a1,a5
20014f1e:	fec42503          	lw	a0,-20(s0)
20014f22:	ab3ff0ef          	jal	ra,200149d4 <__metal_plic0_set_threshold>
20014f26:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20014f28:	853e                	mv	a0,a5
20014f2a:	40f2                	lw	ra,28(sp)
20014f2c:	4462                	lw	s0,24(sp)
20014f2e:	6105                	addi	sp,sp,32
20014f30:	8082                	ret

20014f32 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20014f32:	1101                	addi	sp,sp,-32
20014f34:	ce06                	sw	ra,28(sp)
20014f36:	cc22                	sw	s0,24(sp)
20014f38:	1000                	addi	s0,sp,32
20014f3a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20014f3e:	804fe0ef          	jal	ra,20012f42 <__metal_myhart_id>
20014f42:	87aa                	mv	a5,a0
20014f44:	85be                	mv	a1,a5
20014f46:	fec42503          	lw	a0,-20(s0)
20014f4a:	ad1ff0ef          	jal	ra,20014a1a <__metal_plic0_get_threshold>
20014f4e:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:219
}
20014f50:	853e                	mv	a0,a5
20014f52:	40f2                	lw	ra,28(sp)
20014f54:	4462                	lw	s0,24(sp)
20014f56:	6105                	addi	sp,sp,32
20014f58:	8082                	ret

20014f5a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20014f5a:	7179                	addi	sp,sp,-48
20014f5c:	d606                	sw	ra,44(sp)
20014f5e:	d422                	sw	s0,40(sp)
20014f60:	1800                	addi	s0,sp,48
20014f62:	fca42e23          	sw	a0,-36(s0)
20014f66:	fcb42c23          	sw	a1,-40(s0)
20014f6a:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20014f6e:	fe042223          	sw	zero,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014f72:	fdc42783          	lw	a5,-36(s0)
20014f76:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014f7a:	fdc42503          	lw	a0,-36(s0)
20014f7e:	91bff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
20014f82:	872a                	mv	a4,a0
20014f84:	fd442783          	lw	a5,-44(s0)
20014f88:	00e7c863          	blt	a5,a4,20014f98 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20014f8c:	57fd                	li	a5,-1
20014f8e:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20014f92:	fe442783          	lw	a5,-28(s0)
20014f96:	a899                	j	20014fec <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20014f98:	fe042623          	sw	zero,-20(s0)
20014f9c:	a099                	j	20014fe2 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20014f9e:	fec42783          	lw	a5,-20(s0)
20014fa2:	c795                	beqz	a5,20014fce <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20014fa4:	4685                	li	a3,1
20014fa6:	fd442603          	lw	a2,-44(s0)
20014faa:	fec42583          	lw	a1,-20(s0)
20014fae:	fe842503          	lw	a0,-24(s0)
20014fb2:	b39ff0ef          	jal	ra,20014aea <__metal_plic0_enable>
20014fb6:	87aa                	mv	a5,a0
20014fb8:	0017f713          	andi	a4,a5,1
20014fbc:	fec42783          	lw	a5,-20(s0)
20014fc0:	00f71733          	sll	a4,a4,a5
20014fc4:	fe442783          	lw	a5,-28(s0)
20014fc8:	8fd9                	or	a5,a5,a4
20014fca:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014fce:	fec42783          	lw	a5,-20(s0)
20014fd2:	0785                	addi	a5,a5,1
20014fd4:	fef42623          	sw	a5,-20(s0)
20014fd8:	fd842783          	lw	a5,-40(s0)
20014fdc:	8385                	srli	a5,a5,0x1
20014fde:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20014fe2:	fd842783          	lw	a5,-40(s0)
20014fe6:	ffc5                	bnez	a5,20014f9e <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20014fe8:	fe442783          	lw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20014fec:	853e                	mv	a0,a5
20014fee:	50b2                	lw	ra,44(sp)
20014ff0:	5422                	lw	s0,40(sp)
20014ff2:	6145                	addi	sp,sp,48
20014ff4:	8082                	ret

20014ff6 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20014ff6:	7179                	addi	sp,sp,-48
20014ff8:	d606                	sw	ra,44(sp)
20014ffa:	d422                	sw	s0,40(sp)
20014ffc:	1800                	addi	s0,sp,48
20014ffe:	fca42e23          	sw	a0,-36(s0)
20015002:	fcb42c23          	sw	a1,-40(s0)
20015006:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2001500a:	fe042223          	sw	zero,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2001500e:	fdc42783          	lw	a5,-36(s0)
20015012:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015016:	fdc42503          	lw	a0,-36(s0)
2001501a:	87fff0ef          	jal	ra,20014898 <__metal_driver_sifive_plic0_num_interrupts>
2001501e:	872a                	mv	a4,a0
20015020:	fd442783          	lw	a5,-44(s0)
20015024:	00e7c863          	blt	a5,a4,20015034 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20015028:	57fd                	li	a5,-1
2001502a:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2001502e:	fe442783          	lw	a5,-28(s0)
20015032:	a899                	j	20015088 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20015034:	fe042623          	sw	zero,-20(s0)
20015038:	a099                	j	2001507e <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2001503a:	fec42783          	lw	a5,-20(s0)
2001503e:	c795                	beqz	a5,2001506a <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20015040:	4681                	li	a3,0
20015042:	fd442603          	lw	a2,-44(s0)
20015046:	fec42583          	lw	a1,-20(s0)
2001504a:	fe842503          	lw	a0,-24(s0)
2001504e:	a9dff0ef          	jal	ra,20014aea <__metal_plic0_enable>
20015052:	87aa                	mv	a5,a0
20015054:	0017f713          	andi	a4,a5,1
20015058:	fec42783          	lw	a5,-20(s0)
2001505c:	00f71733          	sll	a4,a4,a5
20015060:	fe442783          	lw	a5,-28(s0)
20015064:	8fd9                	or	a5,a5,a4
20015066:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001506a:	fec42783          	lw	a5,-20(s0)
2001506e:	0785                	addi	a5,a5,1
20015070:	fef42623          	sw	a5,-20(s0)
20015074:	fd842783          	lw	a5,-40(s0)
20015078:	8385                	srli	a5,a5,0x1
2001507a:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2001507e:	fd842783          	lw	a5,-40(s0)
20015082:	ffc5                	bnez	a5,2001503a <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20015084:	fe442783          	lw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20015088:	853e                	mv	a0,a5
2001508a:	50b2                	lw	ra,44(sp)
2001508c:	5422                	lw	s0,40(sp)
2001508e:	6145                	addi	sp,sp,48
20015090:	8082                	ret

20015092 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20015092:	7179                	addi	sp,sp,-48
20015094:	d606                	sw	ra,44(sp)
20015096:	d422                	sw	s0,40(sp)
20015098:	1800                	addi	s0,sp,48
2001509a:	fca42e23          	sw	a0,-36(s0)
2001509e:	fcb42c23          	sw	a1,-40(s0)
200150a2:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
200150a6:	fe042423          	sw	zero,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
200150aa:	fe042623          	sw	zero,-20(s0)
200150ae:	a091                	j	200150f2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
200150b0:	fec42783          	lw	a5,-20(s0)
200150b4:	c78d                	beqz	a5,200150de <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
200150b6:	fd442603          	lw	a2,-44(s0)
200150ba:	fec42583          	lw	a1,-20(s0)
200150be:	fdc42503          	lw	a0,-36(s0)
200150c2:	913ff0ef          	jal	ra,200149d4 <__metal_plic0_set_threshold>
200150c6:	87aa                	mv	a5,a0
200150c8:	0017f713          	andi	a4,a5,1
200150cc:	fec42783          	lw	a5,-20(s0)
200150d0:	00f71733          	sll	a4,a4,a5
200150d4:	fe842783          	lw	a5,-24(s0)
200150d8:	8fd9                	or	a5,a5,a4
200150da:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200150de:	fec42783          	lw	a5,-20(s0)
200150e2:	0785                	addi	a5,a5,1
200150e4:	fef42623          	sw	a5,-20(s0)
200150e8:	fd842783          	lw	a5,-40(s0)
200150ec:	8385                	srli	a5,a5,0x1
200150ee:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
200150f2:	fd842783          	lw	a5,-40(s0)
200150f6:	ffcd                	bnez	a5,200150b0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
200150f8:	fe842783          	lw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:281
}
200150fc:	853e                	mv	a0,a5
200150fe:	50b2                	lw	ra,44(sp)
20015100:	5422                	lw	s0,40(sp)
20015102:	6145                	addi	sp,sp,48
20015104:	8082                	ret

20015106 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20015106:	1101                	addi	sp,sp,-32
20015108:	ce06                	sw	ra,28(sp)
2001510a:	cc22                	sw	s0,24(sp)
2001510c:	1000                	addi	s0,sp,32
2001510e:	fea42623          	sw	a0,-20(s0)
20015112:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20015116:	fe842583          	lw	a1,-24(s0)
2001511a:	fec42503          	lw	a0,-20(s0)
2001511e:	8fdff0ef          	jal	ra,20014a1a <__metal_plic0_get_threshold>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20015122:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/riscv_plic0.c:287
}
20015124:	853e                	mv	a0,a5
20015126:	40f2                	lw	ra,28(sp)
20015128:	4462                	lw	s0,24(sp)
2001512a:	6105                	addi	sp,sp,32
2001512c:	8082                	ret

2001512e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1248



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2001512e:	1101                	addi	sp,sp,-32
20015130:	ce22                	sw	s0,28(sp)
20015132:	1000                	addi	s0,sp,32
20015134:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1249
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20015138:	800007b7          	lui	a5,0x80000
2001513c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1250
}
20015140:	853e                	mv	a0,a5
20015142:	4472                	lw	s0,28(sp)
20015144:	6105                	addi	sp,sp,32
20015146:	8082                	ret

20015148 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1253

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20015148:	1101                	addi	sp,sp,-32
2001514a:	ce22                	sw	s0,28(sp)
2001514c:	1000                	addi	s0,sp,32
2001514e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1254
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015152:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1255
}
20015156:	853e                	mv	a0,a5
20015158:	4472                	lw	s0,28(sp)
2001515a:	6105                	addi	sp,sp,32
2001515c:	8082                	ret

2001515e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1263
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2001515e:	1101                	addi	sp,sp,-32
20015160:	ce22                	sw	s0,28(sp)
20015162:	1000                	addi	s0,sp,32
20015164:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1264
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20015168:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1265
}
2001516a:	853e                	mv	a0,a5
2001516c:	4472                	lw	s0,28(sp)
2001516e:	6105                	addi	sp,sp,32
20015170:	8082                	ret

20015172 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20015172:	1141                	addi	sp,sp,-16
20015174:	c622                	sw	s0,12(sp)
20015176:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015178:	200117b7          	lui	a5,0x20011
2001517c:	fb478793          	addi	a5,a5,-76 # 20010fb4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
20015180:	853e                	mv	a0,a5
20015182:	4432                	lw	s0,12(sp)
20015184:	0141                	addi	sp,sp,16
20015186:	8082                	ret

20015188 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20015188:	7139                	addi	sp,sp,-64
2001518a:	de06                	sw	ra,60(sp)
2001518c:	dc22                	sw	s0,56(sp)
2001518e:	0080                	addi	s0,sp,64
20015190:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20015194:	fcc42503          	lw	a0,-52(s0)
20015198:	3f59                	jal	2001512e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2001519a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2001519e:	fcc42503          	lw	a0,-52(s0)
200151a2:	3f75                	jal	2001515e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
200151a4:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
200151a8:	fcc42503          	lw	a0,-52(s0)
200151ac:	3f71                	jal	20015148 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
200151ae:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200151b2:	37c1                	jal	20015172 <__metal_driver_sifive_fe310_g000_prci_vtable>
200151b4:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
200151b8:	fe042783          	lw	a5,-32(s0)
200151bc:	439c                	lw	a5,0(a5)
200151be:	fe842583          	lw	a1,-24(s0)
200151c2:	fe442503          	lw	a0,-28(s0)
200151c6:	9782                	jalr	a5
200151c8:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
200151cc:	fdc42703          	lw	a4,-36(s0)
200151d0:	400007b7          	lui	a5,0x40000
200151d4:	8ff9                	and	a5,a5,a4
200151d6:	e399                	bnez	a5,200151dc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
200151d8:	57fd                	li	a5,-1
200151da:	a025                	j	20015202 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
200151dc:	fdc42783          	lw	a5,-36(s0)
200151e0:	0007c463          	bltz	a5,200151e8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
200151e4:	57fd                	li	a5,-1
200151e6:	a831                	j	20015202 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
200151e8:	fec42503          	lw	a0,-20(s0)
200151ec:	2c5010ef          	jal	ra,20016cb0 <metal_clock_get_rate_hz>
200151f0:	87aa                	mv	a5,a0
200151f2:	873e                	mv	a4,a5
200151f4:	fdc42783          	lw	a5,-36(s0)
200151f8:	03f7f793          	andi	a5,a5,63
200151fc:	0785                	addi	a5,a5,1
200151fe:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20015202:	853e                	mv	a0,a5
20015204:	50f2                	lw	ra,60(sp)
20015206:	5462                	lw	s0,56(sp)
20015208:	6121                	addi	sp,sp,64
2001520a:	8082                	ret

2001520c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2001520c:	1101                	addi	sp,sp,-32
2001520e:	ce06                	sw	ra,28(sp)
20015210:	cc22                	sw	s0,24(sp)
20015212:	1000                	addi	s0,sp,32
20015214:	fea42623          	sw	a0,-20(s0)
20015218:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
2001521c:	fec42503          	lw	a0,-20(s0)
20015220:	37a5                	jal	20015188 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20015222:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20015224:	853e                	mv	a0,a5
20015226:	40f2                	lw	ra,28(sp)
20015228:	4462                	lw	s0,24(sp)
2001522a:	6105                	addi	sp,sp,32
2001522c:	8082                	ret

2001522e <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1271
{
2001522e:	1101                	addi	sp,sp,-32
20015230:	ce22                	sw	s0,28(sp)
20015232:	1000                	addi	s0,sp,32
20015234:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1272
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20015238:	800007b7          	lui	a5,0x80000
2001523c:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1273
}
20015240:	853e                	mv	a0,a5
20015242:	4472                	lw	s0,28(sp)
20015244:	6105                	addi	sp,sp,32
20015246:	8082                	ret

20015248 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1276
{
20015248:	1101                	addi	sp,sp,-32
2001524a:	ce22                	sw	s0,28(sp)
2001524c:	1000                	addi	s0,sp,32
2001524e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1277
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015252:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1278
}
20015256:	853e                	mv	a0,a5
20015258:	4472                	lw	s0,28(sp)
2001525a:	6105                	addi	sp,sp,32
2001525c:	8082                	ret

2001525e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1281
{
2001525e:	1101                	addi	sp,sp,-32
20015260:	ce22                	sw	s0,28(sp)
20015262:	1000                	addi	s0,sp,32
20015264:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1282
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20015268:	4791                	li	a5,4
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1283
}
2001526a:	853e                	mv	a0,a5
2001526c:	4472                	lw	s0,28(sp)
2001526e:	6105                	addi	sp,sp,32
20015270:	8082                	ret

20015272 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
20015272:	1141                	addi	sp,sp,-16
20015274:	c622                	sw	s0,12(sp)
20015276:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015278:	200117b7          	lui	a5,0x20011
2001527c:	fb478793          	addi	a5,a5,-76 # 20010fb4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
20015280:	853e                	mv	a0,a5
20015282:	4432                	lw	s0,12(sp)
20015284:	0141                	addi	sp,sp,16
20015286:	8082                	ret

20015288 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20015288:	7139                	addi	sp,sp,-64
2001528a:	de06                	sw	ra,60(sp)
2001528c:	dc22                	sw	s0,56(sp)
2001528e:	0080                	addi	s0,sp,64
20015290:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20015294:	fcc42503          	lw	a0,-52(s0)
20015298:	3f59                	jal	2001522e <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2001529a:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2001529e:	fcc42503          	lw	a0,-52(s0)
200152a2:	3f75                	jal	2001525e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
200152a4:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
200152a8:	fcc42503          	lw	a0,-52(s0)
200152ac:	3f71                	jal	20015248 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
200152ae:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200152b2:	37c1                	jal	20015272 <__metal_driver_sifive_fe310_g000_prci_vtable>
200152b4:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
200152b8:	fe042783          	lw	a5,-32(s0)
200152bc:	439c                	lw	a5,0(a5)
200152be:	fe842583          	lw	a1,-24(s0)
200152c2:	fe442503          	lw	a0,-28(s0)
200152c6:	9782                	jalr	a5
200152c8:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
200152cc:	fdc42703          	lw	a4,-36(s0)
200152d0:	400007b7          	lui	a5,0x40000
200152d4:	8ff9                	and	a5,a5,a4
200152d6:	e399                	bnez	a5,200152dc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
200152d8:	57fd                	li	a5,-1
200152da:	a821                	j	200152f2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
200152dc:	fdc42783          	lw	a5,-36(s0)
200152e0:	0007c463          	bltz	a5,200152e8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
200152e4:	57fd                	li	a5,-1
200152e6:	a031                	j	200152f2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
200152e8:	fec42503          	lw	a0,-20(s0)
200152ec:	1c5010ef          	jal	ra,20016cb0 <metal_clock_get_rate_hz>
200152f0:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
200152f2:	853e                	mv	a0,a5
200152f4:	50f2                	lw	ra,60(sp)
200152f6:	5462                	lw	s0,56(sp)
200152f8:	6121                	addi	sp,sp,64
200152fa:	8082                	ret

200152fc <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200152fc:	1101                	addi	sp,sp,-32
200152fe:	ce06                	sw	ra,28(sp)
20015300:	cc22                	sw	s0,24(sp)
20015302:	1000                	addi	s0,sp,32
20015304:	fea42623          	sw	a0,-20(s0)
20015308:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2001530c:	fec42503          	lw	a0,-20(s0)
20015310:	3fa5                	jal	20015288 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20015312:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20015314:	853e                	mv	a0,a5
20015316:	40f2                	lw	ra,28(sp)
20015318:	4462                	lw	s0,24(sp)
2001531a:	6105                	addi	sp,sp,32
2001531c:	8082                	ret

2001531e <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1332
{
2001531e:	1101                	addi	sp,sp,-32
20015320:	ce22                	sw	s0,28(sp)
20015322:	1000                	addi	s0,sp,32
20015324:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1333
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20015328:	800017b7          	lui	a5,0x80001
2001532c:	a7878793          	addi	a5,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1334
}
20015330:	853e                	mv	a0,a5
20015332:	4472                	lw	s0,28(sp)
20015334:	6105                	addi	sp,sp,32
20015336:	8082                	ret

20015338 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1337
{
20015338:	1101                	addi	sp,sp,-32
2001533a:	ce22                	sw	s0,28(sp)
2001533c:	1000                	addi	s0,sp,32
2001533e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1338
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20015342:	800017b7          	lui	a5,0x80001
20015346:	a8478793          	addi	a5,a5,-1404 # 80000a84 <metal_segment_heap_target_end+0xfffff314>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1339
}
2001534a:	853e                	mv	a0,a5
2001534c:	4472                	lw	s0,28(sp)
2001534e:	6105                	addi	sp,sp,32
20015350:	8082                	ret

20015352 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1342
{
20015352:	1101                	addi	sp,sp,-32
20015354:	ce22                	sw	s0,28(sp)
20015356:	1000                	addi	s0,sp,32
20015358:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1343
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001535c:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1344
}
20015360:	853e                	mv	a0,a5
20015362:	4472                	lw	s0,28(sp)
20015364:	6105                	addi	sp,sp,32
20015366:	8082                	ret

20015368 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1347
{
20015368:	1101                	addi	sp,sp,-32
2001536a:	ce22                	sw	s0,28(sp)
2001536c:	1000                	addi	s0,sp,32
2001536e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1348
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20015372:	47b1                	li	a5,12
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1349
}
20015374:	853e                	mv	a0,a5
20015376:	4472                	lw	s0,28(sp)
20015378:	6105                	addi	sp,sp,32
2001537a:	8082                	ret

2001537c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1352
{
2001537c:	1141                	addi	sp,sp,-16
2001537e:	c622                	sw	s0,12(sp)
20015380:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1353
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015382:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1354
}
20015386:	853e                	mv	a0,a5
20015388:	4432                	lw	s0,12(sp)
2001538a:	0141                	addi	sp,sp,16
2001538c:	8082                	ret

2001538e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1357
{
2001538e:	1141                	addi	sp,sp,-16
20015390:	c622                	sw	s0,12(sp)
20015392:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1358
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20015394:	47a1                	li	a5,8
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1359
}
20015396:	853e                	mv	a0,a5
20015398:	4432                	lw	s0,12(sp)
2001539a:	0141                	addi	sp,sp,16
2001539c:	8082                	ret

2001539e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1362
{
2001539e:	1141                	addi	sp,sp,-16
200153a0:	c622                	sw	s0,12(sp)
200153a2:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1363
		return 16000000;
200153a4:	00f427b7          	lui	a5,0xf42
200153a8:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1364
}
200153ac:	853e                	mv	a0,a5
200153ae:	4432                	lw	s0,12(sp)
200153b0:	0141                	addi	sp,sp,16
200153b2:	8082                	ret

200153b4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1370
{
200153b4:	1141                	addi	sp,sp,-16
200153b6:	c622                	sw	s0,12(sp)
200153b8:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1371
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200153ba:	100087b7          	lui	a5,0x10008
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1372
}
200153be:	853e                	mv	a0,a5
200153c0:	4432                	lw	s0,12(sp)
200153c2:	0141                	addi	sp,sp,16
200153c4:	8082                	ret

200153c6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1380
{
200153c6:	1141                	addi	sp,sp,-16
200153c8:	c622                	sw	s0,12(sp)
200153ca:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1381
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200153cc:	200117b7          	lui	a5,0x20011
200153d0:	fb478793          	addi	a5,a5,-76 # 20010fb4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1382
}
200153d4:	853e                	mv	a0,a5
200153d6:	4432                	lw	s0,12(sp)
200153d8:	0141                	addi	sp,sp,16
200153da:	8082                	ret

200153dc <get_pll_config_freq>:
get_pll_config_freq():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
200153dc:	1101                	addi	sp,sp,-32
200153de:	ce22                	sw	s0,28(sp)
200153e0:	1000                	addi	s0,sp,32
200153e2:	fea42623          	sw	a0,-20(s0)
200153e6:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
200153ea:	fe842783          	lw	a5,-24(s0)
200153ee:	479c                	lw	a5,8(a5)
200153f0:	fec42703          	lw	a4,-20(s0)
200153f4:	00f76963          	bltu	a4,a5,20015406 <get_pll_config_freq+0x2a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
200153f8:	fe842783          	lw	a5,-24(s0)
200153fc:	47dc                	lw	a5,12(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
200153fe:	fec42703          	lw	a4,-20(s0)
20015402:	00e7f463          	bgeu	a5,a4,2001540a <get_pll_config_freq+0x2e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20015406:	57fd                	li	a5,-1
20015408:	a829                	j	20015422 <get_pll_config_freq+0x46>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2001540a:	fe842783          	lw	a5,-24(s0)
2001540e:	4398                	lw	a4,0(a5)
20015410:	fec42783          	lw	a5,-20(s0)
20015414:	02f70733          	mul	a4,a4,a5
20015418:	fe842783          	lw	a5,-24(s0)
2001541c:	43dc                	lw	a5,4(a5)
2001541e:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20015422:	853e                	mv	a0,a5
20015424:	4472                	lw	s0,28(sp)
20015426:	6105                	addi	sp,sp,32
20015428:	8082                	ret

2001542a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2001542a:	7139                	addi	sp,sp,-64
2001542c:	de06                	sw	ra,60(sp)
2001542e:	dc22                	sw	s0,56(sp)
20015430:	0080                	addi	s0,sp,64
20015432:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20015436:	fcc42783          	lw	a5,-52(s0)
2001543a:	853e                	mv	a0,a5
2001543c:	3df5                	jal	20015338 <__metal_driver_sifive_fe310_g000_pll_pllref>
2001543e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20015442:	3fb1                	jal	2001539e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20015444:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20015448:	3799                	jal	2001538e <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001544a:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2001544e:	379d                	jal	200153b4 <__metal_driver_sifive_fe310_g000_prci_base>
20015450:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20015454:	fe042703          	lw	a4,-32(s0)
20015458:	fe442783          	lw	a5,-28(s0)
2001545c:	97ba                	add	a5,a5,a4
2001545e:	fcf42e23          	sw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20015462:	fcc42783          	lw	a5,-52(s0)
20015466:	43dc                	lw	a5,4(a5)
20015468:	853e                	mv	a0,a5
2001546a:	7b0010ef          	jal	ra,20016c1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2001546e:	fdc42783          	lw	a5,-36(s0)
20015472:	4398                	lw	a4,0(a5)
20015474:	67c1                	lui	a5,0x10
20015476:	8ff9                	and	a5,a5,a4
20015478:	cb91                	beqz	a5,2001548c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001547a:	fdc42783          	lw	a5,-36(s0)
2001547e:	4398                	lw	a4,0(a5)
20015480:	77c1                	lui	a5,0xffff0
20015482:	17fd                	addi	a5,a5,-1
20015484:	8f7d                	and	a4,a4,a5
20015486:	fdc42783          	lw	a5,-36(s0)
2001548a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2001548c:	fec42783          	lw	a5,-20(s0)
20015490:	cb91                	beqz	a5,200154a4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20015492:	fdc42783          	lw	a5,-36(s0)
20015496:	4398                	lw	a4,0(a5)
20015498:	000207b7          	lui	a5,0x20
2001549c:	8f5d                	or	a4,a4,a5
2001549e:	fdc42783          	lw	a5,-36(s0)
200154a2:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200154a4:	fcc42783          	lw	a5,-52(s0)
200154a8:	439c                	lw	a5,0(a5)
200154aa:	43d8                	lw	a4,4(a5)
200154ac:	fcc42783          	lw	a5,-52(s0)
200154b0:	fe842583          	lw	a1,-24(s0)
200154b4:	853e                	mv	a0,a5
200154b6:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
200154b8:	fcc42783          	lw	a5,-52(s0)
200154bc:	479c                	lw	a5,8(a5)
200154be:	853e                	mv	a0,a5
200154c0:	75a010ef          	jal	ra,20016c1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
200154c4:	0001                	nop
200154c6:	50f2                	lw	ra,60(sp)
200154c8:	5462                	lw	s0,56(sp)
200154ca:	6121                	addi	sp,sp,64
200154cc:	8082                	ret

200154ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
200154ce:	711d                	addi	sp,sp,-96
200154d0:	ce86                	sw	ra,92(sp)
200154d2:	cca2                	sw	s0,88(sp)
200154d4:	1080                	addi	s0,sp,96
200154d6:	faa42623          	sw	a0,-84(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200154da:	fac42503          	lw	a0,-84(s0)
200154de:	3da9                	jal	20015338 <__metal_driver_sifive_fe310_g000_pll_pllref>
200154e0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200154e4:	fac42503          	lw	a0,-84(s0)
200154e8:	3d1d                	jal	2001531e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200154ea:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200154ee:	fac42503          	lw	a0,-84(s0)
200154f2:	3d71                	jal	2001538e <__metal_driver_sifive_fe310_g000_pll_config_offset>
200154f4:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200154f8:	fac42503          	lw	a0,-84(s0)
200154fc:	3541                	jal	2001537c <__metal_driver_sifive_fe310_g000_pll_config_base>
200154fe:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015502:	fac42503          	lw	a0,-84(s0)
20015506:	358d                	jal	20015368 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20015508:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2001550c:	fac42503          	lw	a0,-84(s0)
20015510:	3589                	jal	20015352 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20015512:	fca42c23          	sw	a0,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015516:	3d45                	jal	200153c6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20015518:	fca42a23          	sw	a0,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2001551c:	fd442783          	lw	a5,-44(s0)
20015520:	439c                	lw	a5,0(a5)
20015522:	fe442583          	lw	a1,-28(s0)
20015526:	fe042503          	lw	a0,-32(s0)
2001552a:	9782                	jalr	a5
2001552c:	fca42823          	sw	a0,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20015530:	fd442783          	lw	a5,-44(s0)
20015534:	439c                	lw	a5,0(a5)
20015536:	fdc42583          	lw	a1,-36(s0)
2001553a:	fd842503          	lw	a0,-40(s0)
2001553e:	9782                	jalr	a5
20015540:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20015544:	fd042703          	lw	a4,-48(s0)
20015548:	67c1                	lui	a5,0x10
2001554a:	8f7d                	and	a4,a4,a5
2001554c:	67c1                	lui	a5,0x10
2001554e:	00f77863          	bgeu	a4,a5,2001555e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20015552:	fe842503          	lw	a0,-24(s0)
20015556:	75a010ef          	jal	ra,20016cb0 <metal_clock_get_rate_hz>
2001555a:	87aa                	mv	a5,a0
2001555c:	a8e1                	j	20015634 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2001555e:	fd042703          	lw	a4,-48(s0)
20015562:	000207b7          	lui	a5,0x20
20015566:	8f7d                	and	a4,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20015568:	000207b7          	lui	a5,0x20
2001556c:	00f76563          	bltu	a4,a5,20015576 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20015570:	fec42783          	lw	a5,-20(s0)
20015574:	a019                	j	2001557a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20015576:	fe842783          	lw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2001557a:	853e                	mv	a0,a5
2001557c:	734010ef          	jal	ra,20016cb0 <metal_clock_get_rate_hz>
20015580:	fca42423          	sw	a0,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20015584:	fd042703          	lw	a4,-48(s0)
20015588:	000407b7          	lui	a5,0x40
2001558c:	8f7d                	and	a4,a4,a5
2001558e:	000407b7          	lui	a5,0x40
20015592:	00f76563          	bltu	a4,a5,2001559c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20015596:	fc842783          	lw	a5,-56(s0)
2001559a:	a869                	j	20015634 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
2001559c:	fd042783          	lw	a5,-48(s0)
200155a0:	8b9d                	andi	a5,a5,7
200155a2:	0785                	addi	a5,a5,1
200155a4:	fcf42223          	sw	a5,-60(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
200155a8:	fd042783          	lw	a5,-48(s0)
200155ac:	3f07f793          	andi	a5,a5,1008
200155b0:	8391                	srli	a5,a5,0x4
200155b2:	0785                	addi	a5,a5,1
200155b4:	0786                	slli	a5,a5,0x1
200155b6:	fcf42023          	sw	a5,-64(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
200155ba:	fd042703          	lw	a4,-48(s0)
200155be:	6785                	lui	a5,0x1
200155c0:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200155c4:	8f7d                	and	a4,a4,a5
200155c6:	3ff00793          	li	a5,1023
200155ca:	00e7e463          	bltu	a5,a4,200155d2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
200155ce:	57fd                	li	a5,-1
200155d0:	a095                	j	20015634 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
200155d2:	fd042703          	lw	a4,-48(s0)
200155d6:	6785                	lui	a5,0x1
200155d8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200155dc:	8ff9                	and	a5,a5,a4
200155de:	83a9                	srli	a5,a5,0xa
200155e0:	4705                	li	a4,1
200155e2:	00f717b3          	sll	a5,a4,a5
200155e6:	faf42e23          	sw	a5,-68(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
200155ea:	fc842703          	lw	a4,-56(s0)
200155ee:	fc442783          	lw	a5,-60(s0)
200155f2:	02f74733          	div	a4,a4,a5
200155f6:	fc042783          	lw	a5,-64(s0)
200155fa:	02f70733          	mul	a4,a4,a5
200155fe:	fbc42783          	lw	a5,-68(s0)
20015602:	02f747b3          	div	a5,a4,a5
20015606:	faf42c23          	sw	a5,-72(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2001560a:	fcc42783          	lw	a5,-52(s0)
2001560e:	1007f713          	andi	a4,a5,256
20015612:	0ff00793          	li	a5,255
20015616:	00e7f563          	bgeu	a5,a4,20015620 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2001561a:	fb842783          	lw	a5,-72(s0)
2001561e:	a819                	j	20015634 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20015620:	fb842703          	lw	a4,-72(s0)
20015624:	fcc42783          	lw	a5,-52(s0)
20015628:	03f7f793          	andi	a5,a5,63
2001562c:	0785                	addi	a5,a5,1
2001562e:	0786                	slli	a5,a5,0x1
20015630:	02f757b3          	divu	a5,a4,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20015634:	853e                	mv	a0,a5
20015636:	40f6                	lw	ra,92(sp)
20015638:	4466                	lw	s0,88(sp)
2001563a:	6125                	addi	sp,sp,96
2001563c:	8082                	ret

2001563e <find_closest_config>:
find_closest_config():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2001563e:	7139                	addi	sp,sp,-64
20015640:	de06                	sw	ra,60(sp)
20015642:	dc22                	sw	s0,56(sp)
20015644:	0080                	addi	s0,sp,64
20015646:	fca42623          	sw	a0,-52(s0)
2001564a:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2001564e:	57fd                	li	a5,-1
20015650:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20015654:	800007b7          	lui	a5,0x80000
20015658:	fff7c793          	not	a5,a5
2001565c:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20015660:	04300793          	li	a5,67
20015664:	fef42223          	sw	a5,-28(s0)
20015668:	a0b5                	j	200156d4 <find_closest_config+0x96>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2001566a:	fcc42683          	lw	a3,-52(s0)
2001566e:	fe442783          	lw	a5,-28(s0)
20015672:	00579713          	slli	a4,a5,0x5
20015676:	200107b7          	lui	a5,0x20010
2001567a:	65478793          	addi	a5,a5,1620 # 20010654 <pll_configs>
2001567e:	97ba                	add	a5,a5,a4
20015680:	85be                	mv	a1,a5
20015682:	8536                	mv	a0,a3
20015684:	d59ff0ef          	jal	ra,200153dc <get_pll_config_freq>
20015688:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2001568c:	fe042703          	lw	a4,-32(s0)
20015690:	57fd                	li	a5,-1
20015692:	02f70c63          	beq	a4,a5,200156ca <find_closest_config+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20015696:	fe042703          	lw	a4,-32(s0)
2001569a:	fc842783          	lw	a5,-56(s0)
2001569e:	8f1d                	sub	a4,a4,a5
200156a0:	41f75793          	srai	a5,a4,0x1f
200156a4:	8f3d                	xor	a4,a4,a5
200156a6:	40f707b3          	sub	a5,a4,a5
200156aa:	fcf42e23          	sw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
200156ae:	fdc42703          	lw	a4,-36(s0)
200156b2:	fe842783          	lw	a5,-24(s0)
200156b6:	00f75a63          	bge	a4,a5,200156ca <find_closest_config+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
200156ba:	fe442783          	lw	a5,-28(s0)
200156be:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
200156c2:	fdc42783          	lw	a5,-36(s0)
200156c6:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
200156ca:	fe442783          	lw	a5,-28(s0)
200156ce:	17fd                	addi	a5,a5,-1
200156d0:	fef42223          	sw	a5,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200156d4:	fe442783          	lw	a5,-28(s0)
200156d8:	f807d9e3          	bgez	a5,2001566a <find_closest_config+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
200156dc:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
200156e0:	853e                	mv	a0,a5
200156e2:	50f2                	lw	ra,60(sp)
200156e4:	5462                	lw	s0,56(sp)
200156e6:	6121                	addi	sp,sp,64
200156e8:	8082                	ret

200156ea <configure_pll>:
configure_pll():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
200156ea:	7179                	addi	sp,sp,-48
200156ec:	d606                	sw	ra,44(sp)
200156ee:	d422                	sw	s0,40(sp)
200156f0:	1800                	addi	s0,sp,48
200156f2:	fca42e23          	sw	a0,-36(s0)
200156f6:	fcb42c23          	sw	a1,-40(s0)
200156fa:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200156fe:	fdc42783          	lw	a5,-36(s0)
20015702:	439c                	lw	a5,0(a5)
20015704:	ff87f713          	andi	a4,a5,-8
20015708:	fdc42783          	lw	a5,-36(s0)
2001570c:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2001570e:	fdc42783          	lw	a5,-36(s0)
20015712:	4398                	lw	a4,0(a5)
20015714:	fd442783          	lw	a5,-44(s0)
20015718:	4b9c                	lw	a5,16(a5)
2001571a:	8b9d                	andi	a5,a5,7
2001571c:	8f5d                	or	a4,a4,a5
2001571e:	fdc42783          	lw	a5,-36(s0)
20015722:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20015724:	fdc42783          	lw	a5,-36(s0)
20015728:	439c                	lw	a5,0(a5)
2001572a:	c0f7f713          	andi	a4,a5,-1009
2001572e:	fdc42783          	lw	a5,-36(s0)
20015732:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20015734:	fdc42783          	lw	a5,-36(s0)
20015738:	4398                	lw	a4,0(a5)
2001573a:	fd442783          	lw	a5,-44(s0)
2001573e:	4bdc                	lw	a5,20(a5)
20015740:	0792                	slli	a5,a5,0x4
20015742:	3f07f793          	andi	a5,a5,1008
20015746:	8f5d                	or	a4,a4,a5
20015748:	fdc42783          	lw	a5,-36(s0)
2001574c:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2001574e:	fdc42783          	lw	a5,-36(s0)
20015752:	4398                	lw	a4,0(a5)
20015754:	77fd                	lui	a5,0xfffff
20015756:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc8f>
2001575a:	8f7d                	and	a4,a4,a5
2001575c:	fdc42783          	lw	a5,-36(s0)
20015760:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20015762:	fdc42783          	lw	a5,-36(s0)
20015766:	4398                	lw	a4,0(a5)
20015768:	fd442783          	lw	a5,-44(s0)
2001576c:	4f9c                	lw	a5,24(a5)
2001576e:	00a79693          	slli	a3,a5,0xa
20015772:	6785                	lui	a5,0x1
20015774:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015778:	8ff5                	and	a5,a5,a3
2001577a:	8f5d                	or	a4,a4,a5
2001577c:	fdc42783          	lw	a5,-36(s0)
20015780:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20015782:	fd442783          	lw	a5,-44(s0)
20015786:	4fdc                	lw	a5,28(a5)
20015788:	0207db63          	bgez	a5,200157be <configure_pll+0xd4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2001578c:	fd842783          	lw	a5,-40(s0)
20015790:	439c                	lw	a5,0(a5)
20015792:	1007e713          	ori	a4,a5,256
20015796:	fd842783          	lw	a5,-40(s0)
2001579a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2001579c:	fd842783          	lw	a5,-40(s0)
200157a0:	439c                	lw	a5,0(a5)
200157a2:	fc07f713          	andi	a4,a5,-64
200157a6:	fd842783          	lw	a5,-40(s0)
200157aa:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200157ac:	fd842783          	lw	a5,-40(s0)
200157b0:	439c                	lw	a5,0(a5)
200157b2:	0017e713          	ori	a4,a5,1
200157b6:	fd842783          	lw	a5,-40(s0)
200157ba:	c398                	sw	a4,0(a5)
200157bc:	a82d                	j	200157f6 <configure_pll+0x10c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
200157be:	fd842783          	lw	a5,-40(s0)
200157c2:	439c                	lw	a5,0(a5)
200157c4:	eff7f713          	andi	a4,a5,-257
200157c8:	fd842783          	lw	a5,-40(s0)
200157cc:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200157ce:	fd842783          	lw	a5,-40(s0)
200157d2:	439c                	lw	a5,0(a5)
200157d4:	fc07f713          	andi	a4,a5,-64
200157d8:	fd842783          	lw	a5,-40(s0)
200157dc:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
200157de:	fd842783          	lw	a5,-40(s0)
200157e2:	4398                	lw	a4,0(a5)
200157e4:	fd442783          	lw	a5,-44(s0)
200157e8:	4fdc                	lw	a5,28(a5)
200157ea:	03f7f793          	andi	a5,a5,63
200157ee:	8f5d                	or	a4,a4,a5
200157f0:	fd842783          	lw	a5,-40(s0)
200157f4:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200157f6:	fdc42783          	lw	a5,-36(s0)
200157fa:	4398                	lw	a4,0(a5)
200157fc:	fffc07b7          	lui	a5,0xfffc0
20015800:	17fd                	addi	a5,a5,-1
20015802:	8f7d                	and	a4,a4,a5
20015804:	fdc42783          	lw	a5,-36(s0)
20015808:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2001580a:	fe040793          	addi	a5,s0,-32
2001580e:	863e                	mv	a2,a5
20015810:	4585                	li	a1,1
20015812:	800017b7          	lui	a5,0x80001
20015816:	aac78513          	addi	a0,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
2001581a:	cb6fd0ef          	jal	ra,20012cd0 <__metal_driver_riscv_clint0_command_request>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001581e:	fe042603          	lw	a2,-32(s0)
20015822:	fe442683          	lw	a3,-28(s0)
20015826:	4511                	li	a0,4
20015828:	4581                	li	a1,0
2001582a:	00a60733          	add	a4,a2,a0
2001582e:	883a                	mv	a6,a4
20015830:	00c83833          	sltu	a6,a6,a2
20015834:	00b687b3          	add	a5,a3,a1
20015838:	00f806b3          	add	a3,a6,a5
2001583c:	87b6                	mv	a5,a3
2001583e:	fee42423          	sw	a4,-24(s0)
20015842:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015846:	a819                	j	2001585c <configure_pll+0x172>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20015848:	fe040793          	addi	a5,s0,-32
2001584c:	863e                	mv	a2,a5
2001584e:	4585                	li	a1,1
20015850:	800017b7          	lui	a5,0x80001
20015854:	aac78513          	addi	a0,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xfffff33c>
20015858:	c78fd0ef          	jal	ra,20012cd0 <__metal_driver_riscv_clint0_command_request>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2001585c:	fe042703          	lw	a4,-32(s0)
20015860:	fe442783          	lw	a5,-28(s0)
20015864:	fec42683          	lw	a3,-20(s0)
20015868:	863e                	mv	a2,a5
2001586a:	00c6ec63          	bltu	a3,a2,20015882 <configure_pll+0x198>
2001586e:	fec42683          	lw	a3,-20(s0)
20015872:	863e                	mv	a2,a5
20015874:	fcc69ae3          	bne	a3,a2,20015848 <configure_pll+0x15e>
20015878:	fe842683          	lw	a3,-24(s0)
2001587c:	87ba                	mv	a5,a4
2001587e:	fcf6f5e3          	bgeu	a3,a5,20015848 <configure_pll+0x15e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20015882:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20015884:	fdc42783          	lw	a5,-36(s0)
20015888:	439c                	lw	a5,0(a5)
2001588a:	fe07dde3          	bgez	a5,20015884 <configure_pll+0x19a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2001588e:	0001                	nop
20015890:	0001                	nop
20015892:	50b2                	lw	ra,44(sp)
20015894:	5422                	lw	s0,40(sp)
20015896:	6145                	addi	sp,sp,48
20015898:	8082                	ret

2001589a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2001589a:	715d                	addi	sp,sp,-80
2001589c:	c686                	sw	ra,76(sp)
2001589e:	c4a2                	sw	s0,72(sp)
200158a0:	0880                	addi	s0,sp,80
200158a2:	faa42e23          	sw	a0,-68(s0)
200158a6:	fab42c23          	sw	a1,-72(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200158aa:	fbc42503          	lw	a0,-68(s0)
200158ae:	a8bff0ef          	jal	ra,20015338 <__metal_driver_sifive_fe310_g000_pll_pllref>
200158b2:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200158b6:	fbc42503          	lw	a0,-68(s0)
200158ba:	a65ff0ef          	jal	ra,2001531e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200158be:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200158c2:	fbc42503          	lw	a0,-68(s0)
200158c6:	ac9ff0ef          	jal	ra,2001538e <__metal_driver_sifive_fe310_g000_pll_config_offset>
200158ca:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200158ce:	fbc42503          	lw	a0,-68(s0)
200158d2:	a97ff0ef          	jal	ra,20015368 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200158d6:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
200158da:	adbff0ef          	jal	ra,200153b4 <__metal_driver_sifive_fe310_g000_prci_base>
200158de:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
200158e2:	fdc42703          	lw	a4,-36(s0)
200158e6:	fe442783          	lw	a5,-28(s0)
200158ea:	97ba                	add	a5,a5,a4
200158ec:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
200158f0:	fdc42703          	lw	a4,-36(s0)
200158f4:	fe042783          	lw	a5,-32(s0)
200158f8:	97ba                	add	a5,a5,a4
200158fa:	fcf42a23          	sw	a5,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200158fe:	fd842783          	lw	a5,-40(s0)
20015902:	4398                	lw	a4,0(a5)
20015904:	67c1                	lui	a5,0x10
20015906:	8ff9                	and	a5,a5,a4
20015908:	cb91                	beqz	a5,2001591c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001590a:	fd842783          	lw	a5,-40(s0)
2001590e:	4398                	lw	a4,0(a5)
20015910:	77c1                	lui	a5,0xffff0
20015912:	17fd                	addi	a5,a5,-1
20015914:	8f7d                	and	a4,a4,a5
20015916:	fd842783          	lw	a5,-40(s0)
2001591a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2001591c:	fd842783          	lw	a5,-40(s0)
20015920:	4398                	lw	a4,0(a5)
20015922:	000207b7          	lui	a5,0x20
20015926:	8ff9                	and	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20015928:	c781                	beqz	a5,20015930 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2001592a:	fec42783          	lw	a5,-20(s0)
2001592e:	a019                	j	20015934 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20015930:	fe842783          	lw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20015934:	853e                	mv	a0,a5
20015936:	37a010ef          	jal	ra,20016cb0 <metal_clock_get_rate_hz>
2001593a:	fca42823          	sw	a0,-48(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2001593e:	fd042703          	lw	a4,-48(s0)
20015942:	87ba                	mv	a5,a4
20015944:	0786                	slli	a5,a5,0x1
20015946:	97ba                	add	a5,a5,a4
20015948:	41f7d713          	srai	a4,a5,0x1f
2001594c:	8b0d                	andi	a4,a4,3
2001594e:	97ba                	add	a5,a5,a4
20015950:	8789                	srai	a5,a5,0x2
20015952:	873e                	mv	a4,a5
20015954:	fb842783          	lw	a5,-72(s0)
20015958:	02e7cb63          	blt	a5,a4,2001598e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2001595c:	fd042703          	lw	a4,-48(s0)
20015960:	87ba                	mv	a5,a4
20015962:	078a                	slli	a5,a5,0x2
20015964:	97ba                	add	a5,a5,a4
20015966:	41f7d713          	srai	a4,a5,0x1f
2001596a:	8b0d                	andi	a4,a4,3
2001596c:	97ba                	add	a5,a5,a4
2001596e:	8789                	srai	a5,a5,0x2
20015970:	873e                	mv	a4,a5
20015972:	fb842783          	lw	a5,-72(s0)
20015976:	00f74c63          	blt	a4,a5,2001598e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2001597a:	fd842783          	lw	a5,-40(s0)
2001597e:	4398                	lw	a4,0(a5)
20015980:	000407b7          	lui	a5,0x40
20015984:	8f5d                	or	a4,a4,a5
20015986:	fd842783          	lw	a5,-40(s0)
2001598a:	c398                	sw	a4,0(a5)
2001598c:	a881                	j	200159dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2001598e:	fb842583          	lw	a1,-72(s0)
20015992:	fd042503          	lw	a0,-48(s0)
20015996:	ca9ff0ef          	jal	ra,2001563e <find_closest_config>
2001599a:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2001599e:	fcc42703          	lw	a4,-52(s0)
200159a2:	57fd                	li	a5,-1
200159a4:	02f70363          	beq	a4,a5,200159ca <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200159a8:	fcc42783          	lw	a5,-52(s0)
200159ac:	00579713          	slli	a4,a5,0x5
200159b0:	200107b7          	lui	a5,0x20010
200159b4:	65478793          	addi	a5,a5,1620 # 20010654 <pll_configs>
200159b8:	97ba                	add	a5,a5,a4
200159ba:	863e                	mv	a2,a5
200159bc:	fd442583          	lw	a1,-44(s0)
200159c0:	fd842503          	lw	a0,-40(s0)
200159c4:	d27ff0ef          	jal	ra,200156ea <configure_pll>
200159c8:	a811                	j	200159dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200159ca:	fd842783          	lw	a5,-40(s0)
200159ce:	4398                	lw	a4,0(a5)
200159d0:	000407b7          	lui	a5,0x40
200159d4:	8f5d                	or	a4,a4,a5
200159d6:	fd842783          	lw	a5,-40(s0)
200159da:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
200159dc:	fd842783          	lw	a5,-40(s0)
200159e0:	4398                	lw	a4,0(a5)
200159e2:	67c1                	lui	a5,0x10
200159e4:	8f5d                	or	a4,a4,a5
200159e6:	fd842783          	lw	a5,-40(s0)
200159ea:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
200159ec:	fbc42503          	lw	a0,-68(s0)
200159f0:	adfff0ef          	jal	ra,200154ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
200159f4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
200159f6:	853e                	mv	a0,a5
200159f8:	40b6                	lw	ra,76(sp)
200159fa:	4426                	lw	s0,72(sp)
200159fc:	6161                	addi	sp,sp,80
200159fe:	8082                	ret

20015a00 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1370
{
20015a00:	1141                	addi	sp,sp,-16
20015a02:	c622                	sw	s0,12(sp)
20015a04:	0800                	addi	s0,sp,16
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1371
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015a06:	100087b7          	lui	a5,0x10008
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1372
}
20015a0a:	853e                	mv	a0,a5
20015a0c:	4432                	lw	s0,12(sp)
20015a0e:	0141                	addi	sp,sp,16
20015a10:	8082                	ret

20015a12 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20015a12:	7179                	addi	sp,sp,-48
20015a14:	d606                	sw	ra,44(sp)
20015a16:	d422                	sw	s0,40(sp)
20015a18:	1800                	addi	s0,sp,48
20015a1a:	fca42e23          	sw	a0,-36(s0)
20015a1e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20015a22:	3ff9                	jal	20015a00 <__metal_driver_sifive_fe310_g000_prci_base>
20015a24:	87aa                	mv	a5,a0
20015a26:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20015a2a:	fd842703          	lw	a4,-40(s0)
20015a2e:	fec42783          	lw	a5,-20(s0)
20015a32:	97ba                	add	a5,a5,a4
20015a34:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20015a36:	853e                	mv	a0,a5
20015a38:	50b2                	lw	ra,44(sp)
20015a3a:	5422                	lw	s0,40(sp)
20015a3c:	6145                	addi	sp,sp,48
20015a3e:	8082                	ret

20015a40 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20015a40:	7179                	addi	sp,sp,-48
20015a42:	d606                	sw	ra,44(sp)
20015a44:	d422                	sw	s0,40(sp)
20015a46:	1800                	addi	s0,sp,48
20015a48:	fca42e23          	sw	a0,-36(s0)
20015a4c:	fcb42c23          	sw	a1,-40(s0)
20015a50:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20015a54:	3775                	jal	20015a00 <__metal_driver_sifive_fe310_g000_prci_base>
20015a56:	87aa                	mv	a5,a0
20015a58:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20015a5c:	fd842703          	lw	a4,-40(s0)
20015a60:	fec42783          	lw	a5,-20(s0)
20015a64:	97ba                	add	a5,a5,a4
20015a66:	873e                	mv	a4,a5
20015a68:	fd442783          	lw	a5,-44(s0)
20015a6c:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20015a6e:	853e                	mv	a0,a5
20015a70:	50b2                	lw	ra,44(sp)
20015a72:	5422                	lw	s0,40(sp)
20015a74:	6145                	addi	sp,sp,48
20015a76:	8082                	ret

20015a78 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430
{
20015a78:	1101                	addi	sp,sp,-32
20015a7a:	ce22                	sw	s0,28(sp)
20015a7c:	1000                	addi	s0,sp,32
20015a7e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015a82:	fec42703          	lw	a4,-20(s0)
20015a86:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015a8a:	00f71563          	bne	a4,a5,20015a94 <__metal_driver_sifive_gpio0_base+0x1c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20015a8e:	100127b7          	lui	a5,0x10012
20015a92:	a011                	j	20015a96 <__metal_driver_sifive_gpio0_base+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:435
		return 0;
20015a94:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:437
}
20015a96:	853e                	mv	a0,a5
20015a98:	4472                	lw	s0,28(sp)
20015a9a:	6105                	addi	sp,sp,32
20015a9c:	8082                	ret

20015a9e <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460
{
20015a9e:	1101                	addi	sp,sp,-32
20015aa0:	ce22                	sw	s0,28(sp)
20015aa2:	1000                	addi	s0,sp,32
20015aa4:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015aa8:	fec42703          	lw	a4,-20(s0)
20015aac:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015ab0:	00f71763          	bne	a4,a5,20015abe <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20015ab4:	800007b7          	lui	a5,0x80000
20015ab8:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
20015abc:	a011                	j	20015ac0 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:465
		return 0;
20015abe:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:467
}
20015ac0:	853e                	mv	a0,a5
20015ac2:	4472                	lw	s0,28(sp)
20015ac4:	6105                	addi	sp,sp,32
20015ac6:	8082                	ret

20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:470
{
20015ac8:	1101                	addi	sp,sp,-32
20015aca:	ce22                	sw	s0,28(sp)
20015acc:	1000                	addi	s0,sp,32
20015ace:	fea42623          	sw	a0,-20(s0)
20015ad2:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20015ad6:	fec42703          	lw	a4,-20(s0)
20015ada:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015ade:	00f71763          	bne	a4,a5,20015aec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:471 (discriminator 1)
20015ae2:	fe842783          	lw	a5,-24(s0)
20015ae6:	e399                	bnez	a5,20015aec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472
		return 8;
20015ae8:	47a1                	li	a5,8
20015aea:	ae15                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20015aec:	fec42703          	lw	a4,-20(s0)
20015af0:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015af4:	00f71963          	bne	a4,a5,20015b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:474 (discriminator 1)
20015af8:	fe842703          	lw	a4,-24(s0)
20015afc:	4785                	li	a5,1
20015afe:	00f71463          	bne	a4,a5,20015b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475
		return 9;
20015b02:	47a5                	li	a5,9
20015b04:	ae29                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20015b06:	fec42703          	lw	a4,-20(s0)
20015b0a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b0e:	00f71963          	bne	a4,a5,20015b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:477 (discriminator 1)
20015b12:	fe842703          	lw	a4,-24(s0)
20015b16:	4789                	li	a5,2
20015b18:	00f71463          	bne	a4,a5,20015b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478
		return 10;
20015b1c:	47a9                	li	a5,10
20015b1e:	a601                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20015b20:	fec42703          	lw	a4,-20(s0)
20015b24:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b28:	00f71963          	bne	a4,a5,20015b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:480 (discriminator 1)
20015b2c:	fe842703          	lw	a4,-24(s0)
20015b30:	478d                	li	a5,3
20015b32:	00f71463          	bne	a4,a5,20015b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481
		return 11;
20015b36:	47ad                	li	a5,11
20015b38:	a4dd                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20015b3a:	fec42703          	lw	a4,-20(s0)
20015b3e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b42:	00f71963          	bne	a4,a5,20015b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:483 (discriminator 1)
20015b46:	fe842703          	lw	a4,-24(s0)
20015b4a:	4791                	li	a5,4
20015b4c:	00f71463          	bne	a4,a5,20015b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484
		return 12;
20015b50:	47b1                	li	a5,12
20015b52:	a4f1                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20015b54:	fec42703          	lw	a4,-20(s0)
20015b58:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b5c:	00f71963          	bne	a4,a5,20015b6e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:486 (discriminator 1)
20015b60:	fe842703          	lw	a4,-24(s0)
20015b64:	4795                	li	a5,5
20015b66:	00f71463          	bne	a4,a5,20015b6e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487
		return 13;
20015b6a:	47b5                	li	a5,13
20015b6c:	ac4d                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20015b6e:	fec42703          	lw	a4,-20(s0)
20015b72:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b76:	00f71963          	bne	a4,a5,20015b88 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:489 (discriminator 1)
20015b7a:	fe842703          	lw	a4,-24(s0)
20015b7e:	4799                	li	a5,6
20015b80:	00f71463          	bne	a4,a5,20015b88 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490
		return 14;
20015b84:	47b9                	li	a5,14
20015b86:	ac61                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20015b88:	fec42703          	lw	a4,-20(s0)
20015b8c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015b90:	00f71963          	bne	a4,a5,20015ba2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:492 (discriminator 1)
20015b94:	fe842703          	lw	a4,-24(s0)
20015b98:	479d                	li	a5,7
20015b9a:	00f71463          	bne	a4,a5,20015ba2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493
		return 15;
20015b9e:	47bd                	li	a5,15
20015ba0:	acbd                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20015ba2:	fec42703          	lw	a4,-20(s0)
20015ba6:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015baa:	00f71963          	bne	a4,a5,20015bbc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:495 (discriminator 1)
20015bae:	fe842703          	lw	a4,-24(s0)
20015bb2:	47a1                	li	a5,8
20015bb4:	00f71463          	bne	a4,a5,20015bbc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496
		return 16;
20015bb8:	47c1                	li	a5,16
20015bba:	a495                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20015bbc:	fec42703          	lw	a4,-20(s0)
20015bc0:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015bc4:	00f71963          	bne	a4,a5,20015bd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:498 (discriminator 1)
20015bc8:	fe842703          	lw	a4,-24(s0)
20015bcc:	47a5                	li	a5,9
20015bce:	00f71463          	bne	a4,a5,20015bd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499
		return 17;
20015bd2:	47c5                	li	a5,17
20015bd4:	a4a9                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20015bd6:	fec42703          	lw	a4,-20(s0)
20015bda:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015bde:	00f71963          	bne	a4,a5,20015bf0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:501 (discriminator 1)
20015be2:	fe842703          	lw	a4,-24(s0)
20015be6:	47a9                	li	a5,10
20015be8:	00f71463          	bne	a4,a5,20015bf0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502
		return 18;
20015bec:	47c9                	li	a5,18
20015bee:	ac05                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20015bf0:	fec42703          	lw	a4,-20(s0)
20015bf4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015bf8:	00f71963          	bne	a4,a5,20015c0a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:504 (discriminator 1)
20015bfc:	fe842703          	lw	a4,-24(s0)
20015c00:	47ad                	li	a5,11
20015c02:	00f71463          	bne	a4,a5,20015c0a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505
		return 19;
20015c06:	47cd                	li	a5,19
20015c08:	ac19                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20015c0a:	fec42703          	lw	a4,-20(s0)
20015c0e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c12:	00f71963          	bne	a4,a5,20015c24 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:507 (discriminator 1)
20015c16:	fe842703          	lw	a4,-24(s0)
20015c1a:	47b1                	li	a5,12
20015c1c:	00f71463          	bne	a4,a5,20015c24 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508
		return 20;
20015c20:	47d1                	li	a5,20
20015c22:	aaf5                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20015c24:	fec42703          	lw	a4,-20(s0)
20015c28:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c2c:	00f71963          	bne	a4,a5,20015c3e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:510 (discriminator 1)
20015c30:	fe842703          	lw	a4,-24(s0)
20015c34:	47b5                	li	a5,13
20015c36:	00f71463          	bne	a4,a5,20015c3e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511
		return 21;
20015c3a:	47d5                	li	a5,21
20015c3c:	a2cd                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20015c3e:	fec42703          	lw	a4,-20(s0)
20015c42:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c46:	00f71963          	bne	a4,a5,20015c58 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:513 (discriminator 1)
20015c4a:	fe842703          	lw	a4,-24(s0)
20015c4e:	47b9                	li	a5,14
20015c50:	00f71463          	bne	a4,a5,20015c58 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514
		return 22;
20015c54:	47d9                	li	a5,22
20015c56:	a2e1                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015c58:	fec42703          	lw	a4,-20(s0)
20015c5c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c60:	00f71963          	bne	a4,a5,20015c72 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:516 (discriminator 1)
20015c64:	fe842703          	lw	a4,-24(s0)
20015c68:	47bd                	li	a5,15
20015c6a:	00f71463          	bne	a4,a5,20015c72 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:517
		return 23;
20015c6e:	47dd                	li	a5,23
20015c70:	a27d                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20015c72:	fec42703          	lw	a4,-20(s0)
20015c76:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c7a:	00f71963          	bne	a4,a5,20015c8c <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:519 (discriminator 1)
20015c7e:	fe842703          	lw	a4,-24(s0)
20015c82:	47c1                	li	a5,16
20015c84:	00f71463          	bne	a4,a5,20015c8c <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:520
		return 24;
20015c88:	47e1                	li	a5,24
20015c8a:	aa51                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20015c8c:	fec42703          	lw	a4,-20(s0)
20015c90:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015c94:	00f71963          	bne	a4,a5,20015ca6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:522 (discriminator 1)
20015c98:	fe842703          	lw	a4,-24(s0)
20015c9c:	47c5                	li	a5,17
20015c9e:	00f71463          	bne	a4,a5,20015ca6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:523
		return 25;
20015ca2:	47e5                	li	a5,25
20015ca4:	aaad                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20015ca6:	fec42703          	lw	a4,-20(s0)
20015caa:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015cae:	00f71963          	bne	a4,a5,20015cc0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:525 (discriminator 1)
20015cb2:	fe842703          	lw	a4,-24(s0)
20015cb6:	47c9                	li	a5,18
20015cb8:	00f71463          	bne	a4,a5,20015cc0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:526
		return 26;
20015cbc:	47e9                	li	a5,26
20015cbe:	a285                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20015cc0:	fec42703          	lw	a4,-20(s0)
20015cc4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015cc8:	00f71963          	bne	a4,a5,20015cda <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:528 (discriminator 1)
20015ccc:	fe842703          	lw	a4,-24(s0)
20015cd0:	47cd                	li	a5,19
20015cd2:	00f71463          	bne	a4,a5,20015cda <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:529
		return 27;
20015cd6:	47ed                	li	a5,27
20015cd8:	a299                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20015cda:	fec42703          	lw	a4,-20(s0)
20015cde:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015ce2:	00f71963          	bne	a4,a5,20015cf4 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:531 (discriminator 1)
20015ce6:	fe842703          	lw	a4,-24(s0)
20015cea:	47d1                	li	a5,20
20015cec:	00f71463          	bne	a4,a5,20015cf4 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:532
		return 28;
20015cf0:	47f1                	li	a5,28
20015cf2:	a235                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20015cf4:	fec42703          	lw	a4,-20(s0)
20015cf8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015cfc:	00f71963          	bne	a4,a5,20015d0e <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:534 (discriminator 1)
20015d00:	fe842703          	lw	a4,-24(s0)
20015d04:	47d5                	li	a5,21
20015d06:	00f71463          	bne	a4,a5,20015d0e <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:535
		return 29;
20015d0a:	47f5                	li	a5,29
20015d0c:	aa09                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20015d0e:	fec42703          	lw	a4,-20(s0)
20015d12:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d16:	00f71963          	bne	a4,a5,20015d28 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:537 (discriminator 1)
20015d1a:	fe842703          	lw	a4,-24(s0)
20015d1e:	47d9                	li	a5,22
20015d20:	00f71463          	bne	a4,a5,20015d28 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:538
		return 30;
20015d24:	47f9                	li	a5,30
20015d26:	a8e5                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20015d28:	fec42703          	lw	a4,-20(s0)
20015d2c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d30:	00f71963          	bne	a4,a5,20015d42 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:540 (discriminator 1)
20015d34:	fe842703          	lw	a4,-24(s0)
20015d38:	47dd                	li	a5,23
20015d3a:	00f71463          	bne	a4,a5,20015d42 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:541
		return 31;
20015d3e:	47fd                	li	a5,31
20015d40:	a8f9                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20015d42:	fec42703          	lw	a4,-20(s0)
20015d46:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d4a:	00f71a63          	bne	a4,a5,20015d5e <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:543 (discriminator 1)
20015d4e:	fe842703          	lw	a4,-24(s0)
20015d52:	47e1                	li	a5,24
20015d54:	00f71563          	bne	a4,a5,20015d5e <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:544
		return 32;
20015d58:	02000793          	li	a5,32
20015d5c:	a0c9                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20015d5e:	fec42703          	lw	a4,-20(s0)
20015d62:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d66:	00f71a63          	bne	a4,a5,20015d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:546 (discriminator 1)
20015d6a:	fe842703          	lw	a4,-24(s0)
20015d6e:	47e5                	li	a5,25
20015d70:	00f71563          	bne	a4,a5,20015d7a <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:547
		return 33;
20015d74:	02100793          	li	a5,33
20015d78:	a05d                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20015d7a:	fec42703          	lw	a4,-20(s0)
20015d7e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d82:	00f71a63          	bne	a4,a5,20015d96 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:549 (discriminator 1)
20015d86:	fe842703          	lw	a4,-24(s0)
20015d8a:	47e9                	li	a5,26
20015d8c:	00f71563          	bne	a4,a5,20015d96 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:550
		return 34;
20015d90:	02200793          	li	a5,34
20015d94:	a069                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015d96:	fec42703          	lw	a4,-20(s0)
20015d9a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015d9e:	00f71a63          	bne	a4,a5,20015db2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:552 (discriminator 1)
20015da2:	fe842703          	lw	a4,-24(s0)
20015da6:	47ed                	li	a5,27
20015da8:	00f71563          	bne	a4,a5,20015db2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:553
		return 35;
20015dac:	02300793          	li	a5,35
20015db0:	a0bd                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015db2:	fec42703          	lw	a4,-20(s0)
20015db6:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015dba:	00f71a63          	bne	a4,a5,20015dce <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:555 (discriminator 1)
20015dbe:	fe842703          	lw	a4,-24(s0)
20015dc2:	47f1                	li	a5,28
20015dc4:	00f71563          	bne	a4,a5,20015dce <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:556
		return 36;
20015dc8:	02400793          	li	a5,36
20015dcc:	a889                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20015dce:	fec42703          	lw	a4,-20(s0)
20015dd2:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015dd6:	00f71963          	bne	a4,a5,20015de8 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:558 (discriminator 1)
20015dda:	fe842703          	lw	a4,-24(s0)
20015dde:	47f5                	li	a5,29
20015de0:	00f71463          	bne	a4,a5,20015de8 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:559
		return 27;
20015de4:	47ed                	li	a5,27
20015de6:	a825                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20015de8:	fec42703          	lw	a4,-20(s0)
20015dec:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015df0:	00f71963          	bne	a4,a5,20015e02 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:561 (discriminator 1)
20015df4:	fe842703          	lw	a4,-24(s0)
20015df8:	47f9                	li	a5,30
20015dfa:	00f71463          	bne	a4,a5,20015e02 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:562
		return 28;
20015dfe:	47f1                	li	a5,28
20015e00:	a839                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20015e02:	fec42703          	lw	a4,-20(s0)
20015e06:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20015e0a:	00f71963          	bne	a4,a5,20015e1c <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:564 (discriminator 1)
20015e0e:	fe842703          	lw	a4,-24(s0)
20015e12:	47fd                	li	a5,31
20015e14:	00f71463          	bne	a4,a5,20015e1c <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:565
		return 29;
20015e18:	47f5                	li	a5,29
20015e1a:	a011                	j	20015e1e <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:568
		return 0;
20015e1c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:570
}
20015e1e:	853e                	mv	a0,a5
20015e20:	4472                	lw	s0,28(sp)
20015e22:	6105                	addi	sp,sp,32
20015e24:	8082                	ret

20015e26 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20015e26:	7179                	addi	sp,sp,-48
20015e28:	d606                	sw	ra,44(sp)
20015e2a:	d422                	sw	s0,40(sp)
20015e2c:	1800                	addi	s0,sp,48
20015e2e:	fca42e23          	sw	a0,-36(s0)
20015e32:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e36:	fdc42503          	lw	a0,-36(s0)
20015e3a:	c3fff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015e3e:	87aa                	mv	a5,a0
20015e40:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20015e44:	fec42783          	lw	a5,-20(s0)
20015e48:	0791                	addi	a5,a5,4
20015e4a:	4398                	lw	a4,0(a5)
20015e4c:	fd842783          	lw	a5,-40(s0)
20015e50:	fec42683          	lw	a3,-20(s0)
20015e54:	0691                	addi	a3,a3,4
20015e56:	8fd9                	or	a5,a5,a4
20015e58:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20015e5a:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20015e5c:	853e                	mv	a0,a5
20015e5e:	50b2                	lw	ra,44(sp)
20015e60:	5422                	lw	s0,40(sp)
20015e62:	6145                	addi	sp,sp,48
20015e64:	8082                	ret

20015e66 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20015e66:	7179                	addi	sp,sp,-48
20015e68:	d606                	sw	ra,44(sp)
20015e6a:	d422                	sw	s0,40(sp)
20015e6c:	1800                	addi	s0,sp,48
20015e6e:	fca42e23          	sw	a0,-36(s0)
20015e72:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e76:	fdc42503          	lw	a0,-36(s0)
20015e7a:	bffff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015e7e:	87aa                	mv	a5,a0
20015e80:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20015e84:	fec42783          	lw	a5,-20(s0)
20015e88:	0791                	addi	a5,a5,4
20015e8a:	439c                	lw	a5,0(a5)
20015e8c:	fd842703          	lw	a4,-40(s0)
20015e90:	fff74713          	not	a4,a4
20015e94:	86ba                	mv	a3,a4
20015e96:	fec42703          	lw	a4,-20(s0)
20015e9a:	0711                	addi	a4,a4,4
20015e9c:	8ff5                	and	a5,a5,a3
20015e9e:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20015ea0:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20015ea2:	853e                	mv	a0,a5
20015ea4:	50b2                	lw	ra,44(sp)
20015ea6:	5422                	lw	s0,40(sp)
20015ea8:	6145                	addi	sp,sp,48
20015eaa:	8082                	ret

20015eac <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20015eac:	7179                	addi	sp,sp,-48
20015eae:	d606                	sw	ra,44(sp)
20015eb0:	d422                	sw	s0,40(sp)
20015eb2:	1800                	addi	s0,sp,48
20015eb4:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015eb8:	fdc42503          	lw	a0,-36(s0)
20015ebc:	bbdff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015ec0:	87aa                	mv	a5,a0
20015ec2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20015ec6:	fec42783          	lw	a5,-20(s0)
20015eca:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20015ecc:	853e                	mv	a0,a5
20015ece:	50b2                	lw	ra,44(sp)
20015ed0:	5422                	lw	s0,40(sp)
20015ed2:	6145                	addi	sp,sp,48
20015ed4:	8082                	ret

20015ed6 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20015ed6:	7179                	addi	sp,sp,-48
20015ed8:	d606                	sw	ra,44(sp)
20015eda:	d422                	sw	s0,40(sp)
20015edc:	1800                	addi	s0,sp,48
20015ede:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015ee2:	fdc42503          	lw	a0,-36(s0)
20015ee6:	b93ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015eea:	87aa                	mv	a5,a0
20015eec:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20015ef0:	fec42783          	lw	a5,-20(s0)
20015ef4:	07b1                	addi	a5,a5,12
20015ef6:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20015ef8:	853e                	mv	a0,a5
20015efa:	50b2                	lw	ra,44(sp)
20015efc:	5422                	lw	s0,40(sp)
20015efe:	6145                	addi	sp,sp,48
20015f00:	8082                	ret

20015f02 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20015f02:	7179                	addi	sp,sp,-48
20015f04:	d606                	sw	ra,44(sp)
20015f06:	d422                	sw	s0,40(sp)
20015f08:	1800                	addi	s0,sp,48
20015f0a:	fca42e23          	sw	a0,-36(s0)
20015f0e:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f12:	fdc42503          	lw	a0,-36(s0)
20015f16:	b63ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015f1a:	87aa                	mv	a5,a0
20015f1c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20015f20:	fec42783          	lw	a5,-20(s0)
20015f24:	07a1                	addi	a5,a5,8
20015f26:	439c                	lw	a5,0(a5)
20015f28:	fd842703          	lw	a4,-40(s0)
20015f2c:	fff74713          	not	a4,a4
20015f30:	86ba                	mv	a3,a4
20015f32:	fec42703          	lw	a4,-20(s0)
20015f36:	0721                	addi	a4,a4,8
20015f38:	8ff5                	and	a5,a5,a3
20015f3a:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20015f3c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20015f3e:	853e                	mv	a0,a5
20015f40:	50b2                	lw	ra,44(sp)
20015f42:	5422                	lw	s0,40(sp)
20015f44:	6145                	addi	sp,sp,48
20015f46:	8082                	ret

20015f48 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20015f48:	7179                	addi	sp,sp,-48
20015f4a:	d606                	sw	ra,44(sp)
20015f4c:	d422                	sw	s0,40(sp)
20015f4e:	1800                	addi	s0,sp,48
20015f50:	fca42e23          	sw	a0,-36(s0)
20015f54:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f58:	fdc42503          	lw	a0,-36(s0)
20015f5c:	b1dff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015f60:	87aa                	mv	a5,a0
20015f62:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20015f66:	fec42783          	lw	a5,-20(s0)
20015f6a:	07a1                	addi	a5,a5,8
20015f6c:	4398                	lw	a4,0(a5)
20015f6e:	fd842783          	lw	a5,-40(s0)
20015f72:	fec42683          	lw	a3,-20(s0)
20015f76:	06a1                	addi	a3,a3,8
20015f78:	8fd9                	or	a5,a5,a4
20015f7a:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20015f7c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20015f7e:	853e                	mv	a0,a5
20015f80:	50b2                	lw	ra,44(sp)
20015f82:	5422                	lw	s0,40(sp)
20015f84:	6145                	addi	sp,sp,48
20015f86:	8082                	ret

20015f88 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20015f88:	7179                	addi	sp,sp,-48
20015f8a:	d606                	sw	ra,44(sp)
20015f8c:	d422                	sw	s0,40(sp)
20015f8e:	1800                	addi	s0,sp,48
20015f90:	fca42e23          	sw	a0,-36(s0)
20015f94:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f98:	fdc42503          	lw	a0,-36(s0)
20015f9c:	addff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015fa0:	87aa                	mv	a5,a0
20015fa2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20015fa6:	fec42783          	lw	a5,-20(s0)
20015faa:	07b1                	addi	a5,a5,12
20015fac:	4398                	lw	a4,0(a5)
20015fae:	fd842783          	lw	a5,-40(s0)
20015fb2:	fec42683          	lw	a3,-20(s0)
20015fb6:	06b1                	addi	a3,a3,12
20015fb8:	8fd9                	or	a5,a5,a4
20015fba:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20015fbc:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20015fbe:	853e                	mv	a0,a5
20015fc0:	50b2                	lw	ra,44(sp)
20015fc2:	5422                	lw	s0,40(sp)
20015fc4:	6145                	addi	sp,sp,48
20015fc6:	8082                	ret

20015fc8 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20015fc8:	7179                	addi	sp,sp,-48
20015fca:	d606                	sw	ra,44(sp)
20015fcc:	d422                	sw	s0,40(sp)
20015fce:	1800                	addi	s0,sp,48
20015fd0:	fca42e23          	sw	a0,-36(s0)
20015fd4:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015fd8:	fdc42503          	lw	a0,-36(s0)
20015fdc:	a9dff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20015fe0:	87aa                	mv	a5,a0
20015fe2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015fe6:	fec42783          	lw	a5,-20(s0)
20015fea:	07b1                	addi	a5,a5,12
20015fec:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20015fee:	fd842703          	lw	a4,-40(s0)
20015ff2:	fff74713          	not	a4,a4
20015ff6:	86ba                	mv	a3,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015ff8:	fec42703          	lw	a4,-20(s0)
20015ffc:	0731                	addi	a4,a4,12
20015ffe:	8ff5                	and	a5,a5,a3
20016000:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20016002:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20016004:	853e                	mv	a0,a5
20016006:	50b2                	lw	ra,44(sp)
20016008:	5422                	lw	s0,40(sp)
2001600a:	6145                	addi	sp,sp,48
2001600c:	8082                	ret

2001600e <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
2001600e:	7179                	addi	sp,sp,-48
20016010:	d606                	sw	ra,44(sp)
20016012:	d422                	sw	s0,40(sp)
20016014:	1800                	addi	s0,sp,48
20016016:	fca42e23          	sw	a0,-36(s0)
2001601a:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001601e:	fdc42503          	lw	a0,-36(s0)
20016022:	a57ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20016026:	87aa                	mv	a5,a0
20016028:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2001602c:	fec42783          	lw	a5,-20(s0)
20016030:	07b1                	addi	a5,a5,12
20016032:	4398                	lw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016034:	fd842783          	lw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016038:	fec42683          	lw	a3,-20(s0)
2001603c:	06b1                	addi	a3,a3,12
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2001603e:	8fb9                	xor	a5,a5,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016040:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20016042:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20016044:	853e                	mv	a0,a5
20016046:	50b2                	lw	ra,44(sp)
20016048:	5422                	lw	s0,40(sp)
2001604a:	6145                	addi	sp,sp,48
2001604c:	8082                	ret

2001604e <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
2001604e:	7179                	addi	sp,sp,-48
20016050:	d606                	sw	ra,44(sp)
20016052:	d422                	sw	s0,40(sp)
20016054:	1800                	addi	s0,sp,48
20016056:	fca42e23          	sw	a0,-36(s0)
2001605a:	fcb42c23          	sw	a1,-40(s0)
2001605e:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016062:	fdc42503          	lw	a0,-36(s0)
20016066:	a13ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
2001606a:	87aa                	mv	a5,a0
2001606c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20016070:	fec42783          	lw	a5,-20(s0)
20016074:	03c78793          	addi	a5,a5,60
20016078:	4398                	lw	a4,0(a5)
2001607a:	fd842783          	lw	a5,-40(s0)
2001607e:	fec42683          	lw	a3,-20(s0)
20016082:	03c68693          	addi	a3,a3,60
20016086:	8fd9                	or	a5,a5,a4
20016088:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
2001608a:	fec42783          	lw	a5,-20(s0)
2001608e:	03878793          	addi	a5,a5,56
20016092:	4398                	lw	a4,0(a5)
20016094:	fd442783          	lw	a5,-44(s0)
20016098:	fec42683          	lw	a3,-20(s0)
2001609c:	03868693          	addi	a3,a3,56
200160a0:	8fd9                	or	a5,a5,a4
200160a2:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
200160a4:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:108
}
200160a6:	853e                	mv	a0,a5
200160a8:	50b2                	lw	ra,44(sp)
200160aa:	5422                	lw	s0,40(sp)
200160ac:	6145                	addi	sp,sp,48
200160ae:	8082                	ret

200160b0 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
200160b0:	7179                	addi	sp,sp,-48
200160b2:	d606                	sw	ra,44(sp)
200160b4:	d422                	sw	s0,40(sp)
200160b6:	1800                	addi	s0,sp,48
200160b8:	fca42e23          	sw	a0,-36(s0)
200160bc:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200160c0:	fdc42503          	lw	a0,-36(s0)
200160c4:	9b5ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
200160c8:	87aa                	mv	a5,a0
200160ca:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
200160ce:	fec42783          	lw	a5,-20(s0)
200160d2:	03878793          	addi	a5,a5,56
200160d6:	439c                	lw	a5,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
200160d8:	fd842703          	lw	a4,-40(s0)
200160dc:	fff74713          	not	a4,a4
200160e0:	86ba                	mv	a3,a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
200160e2:	fec42703          	lw	a4,-20(s0)
200160e6:	03870713          	addi	a4,a4,56
200160ea:	8ff5                	and	a5,a5,a3
200160ec:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
200160ee:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:118
}
200160f0:	853e                	mv	a0,a5
200160f2:	50b2                	lw	ra,44(sp)
200160f4:	5422                	lw	s0,40(sp)
200160f6:	6145                	addi	sp,sp,48
200160f8:	8082                	ret

200160fa <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
200160fa:	7179                	addi	sp,sp,-48
200160fc:	d606                	sw	ra,44(sp)
200160fe:	d422                	sw	s0,40(sp)
20016100:	1800                	addi	s0,sp,48
20016102:	fca42e23          	sw	a0,-36(s0)
20016106:	fcb42c23          	sw	a1,-40(s0)
2001610a:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001610e:	fdc42503          	lw	a0,-36(s0)
20016112:	967ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
20016116:	87aa                	mv	a5,a0
20016118:	fef42623          	sw	a5,-20(s0)
2001611c:	fd442703          	lw	a4,-44(s0)
20016120:	479d                	li	a5,7
20016122:	1ce7e963          	bltu	a5,a4,200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20016126:	fd442783          	lw	a5,-44(s0)
2001612a:	00279713          	slli	a4,a5,0x2
2001612e:	200117b7          	lui	a5,0x20011
20016132:	ee078793          	addi	a5,a5,-288 # 20010ee0 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20016136:	97ba                	add	a5,a5,a4
20016138:	439c                	lw	a5,0(a5)
2001613a:	8782                	jr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2001613c:	fec42783          	lw	a5,-20(s0)
20016140:	07e1                	addi	a5,a5,24
20016142:	439c                	lw	a5,0(a5)
20016144:	fd842703          	lw	a4,-40(s0)
20016148:	fff74713          	not	a4,a4
2001614c:	86ba                	mv	a3,a4
2001614e:	fec42703          	lw	a4,-20(s0)
20016152:	0761                	addi	a4,a4,24
20016154:	8ff5                	and	a5,a5,a3
20016156:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20016158:	fec42783          	lw	a5,-20(s0)
2001615c:	02078793          	addi	a5,a5,32
20016160:	439c                	lw	a5,0(a5)
20016162:	fd842703          	lw	a4,-40(s0)
20016166:	fff74713          	not	a4,a4
2001616a:	86ba                	mv	a3,a4
2001616c:	fec42703          	lw	a4,-20(s0)
20016170:	02070713          	addi	a4,a4,32
20016174:	8ff5                	and	a5,a5,a3
20016176:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20016178:	fec42783          	lw	a5,-20(s0)
2001617c:	02878793          	addi	a5,a5,40
20016180:	439c                	lw	a5,0(a5)
20016182:	fd842703          	lw	a4,-40(s0)
20016186:	fff74713          	not	a4,a4
2001618a:	86ba                	mv	a3,a4
2001618c:	fec42703          	lw	a4,-20(s0)
20016190:	02870713          	addi	a4,a4,40
20016194:	8ff5                	and	a5,a5,a3
20016196:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20016198:	fec42783          	lw	a5,-20(s0)
2001619c:	03078793          	addi	a5,a5,48
200161a0:	439c                	lw	a5,0(a5)
200161a2:	fd842703          	lw	a4,-40(s0)
200161a6:	fff74713          	not	a4,a4
200161aa:	86ba                	mv	a3,a4
200161ac:	fec42703          	lw	a4,-20(s0)
200161b0:	03070713          	addi	a4,a4,48
200161b4:	8ff5                	and	a5,a5,a3
200161b6:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
200161b8:	aa35                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200161ba:	fec42783          	lw	a5,-20(s0)
200161be:	07e1                	addi	a5,a5,24
200161c0:	4398                	lw	a4,0(a5)
200161c2:	fd842783          	lw	a5,-40(s0)
200161c6:	fec42683          	lw	a3,-20(s0)
200161ca:	06e1                	addi	a3,a3,24
200161cc:	8fd9                	or	a5,a5,a4
200161ce:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
200161d0:	a215                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200161d2:	fec42783          	lw	a5,-20(s0)
200161d6:	02078793          	addi	a5,a5,32
200161da:	4398                	lw	a4,0(a5)
200161dc:	fd842783          	lw	a5,-40(s0)
200161e0:	fec42683          	lw	a3,-20(s0)
200161e4:	02068693          	addi	a3,a3,32
200161e8:	8fd9                	or	a5,a5,a4
200161ea:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
200161ec:	a221                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200161ee:	fec42783          	lw	a5,-20(s0)
200161f2:	07e1                	addi	a5,a5,24
200161f4:	4398                	lw	a4,0(a5)
200161f6:	fd842783          	lw	a5,-40(s0)
200161fa:	fec42683          	lw	a3,-20(s0)
200161fe:	06e1                	addi	a3,a3,24
20016200:	8fd9                	or	a5,a5,a4
20016202:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016204:	fec42783          	lw	a5,-20(s0)
20016208:	02078793          	addi	a5,a5,32
2001620c:	4398                	lw	a4,0(a5)
2001620e:	fd842783          	lw	a5,-40(s0)
20016212:	fec42683          	lw	a3,-20(s0)
20016216:	02068693          	addi	a3,a3,32
2001621a:	8fd9                	or	a5,a5,a4
2001621c:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
2001621e:	a8d9                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016220:	fec42783          	lw	a5,-20(s0)
20016224:	02878793          	addi	a5,a5,40
20016228:	4398                	lw	a4,0(a5)
2001622a:	fd842783          	lw	a5,-40(s0)
2001622e:	fec42683          	lw	a3,-20(s0)
20016232:	02868693          	addi	a3,a3,40
20016236:	8fd9                	or	a5,a5,a4
20016238:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
2001623a:	a86d                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2001623c:	fec42783          	lw	a5,-20(s0)
20016240:	03078793          	addi	a5,a5,48
20016244:	4398                	lw	a4,0(a5)
20016246:	fd842783          	lw	a5,-40(s0)
2001624a:	fec42683          	lw	a3,-20(s0)
2001624e:	03068693          	addi	a3,a3,48
20016252:	8fd9                	or	a5,a5,a4
20016254:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20016256:	a879                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016258:	fec42783          	lw	a5,-20(s0)
2001625c:	02878793          	addi	a5,a5,40
20016260:	4398                	lw	a4,0(a5)
20016262:	fd842783          	lw	a5,-40(s0)
20016266:	fec42683          	lw	a3,-20(s0)
2001626a:	02868693          	addi	a3,a3,40
2001626e:	8fd9                	or	a5,a5,a4
20016270:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016272:	fec42783          	lw	a5,-20(s0)
20016276:	03078793          	addi	a5,a5,48
2001627a:	4398                	lw	a4,0(a5)
2001627c:	fd842783          	lw	a5,-40(s0)
20016280:	fec42683          	lw	a3,-20(s0)
20016284:	03068693          	addi	a3,a3,48
20016288:	8fd9                	or	a5,a5,a4
2001628a:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2001628c:	a0a5                	j	200162f4 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2001628e:	fec42783          	lw	a5,-20(s0)
20016292:	07e1                	addi	a5,a5,24
20016294:	4398                	lw	a4,0(a5)
20016296:	fd842783          	lw	a5,-40(s0)
2001629a:	fec42683          	lw	a3,-20(s0)
2001629e:	06e1                	addi	a3,a3,24
200162a0:	8fd9                	or	a5,a5,a4
200162a2:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200162a4:	fec42783          	lw	a5,-20(s0)
200162a8:	02078793          	addi	a5,a5,32
200162ac:	4398                	lw	a4,0(a5)
200162ae:	fd842783          	lw	a5,-40(s0)
200162b2:	fec42683          	lw	a3,-20(s0)
200162b6:	02068693          	addi	a3,a3,32
200162ba:	8fd9                	or	a5,a5,a4
200162bc:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
200162be:	fec42783          	lw	a5,-20(s0)
200162c2:	02878793          	addi	a5,a5,40
200162c6:	4398                	lw	a4,0(a5)
200162c8:	fd842783          	lw	a5,-40(s0)
200162cc:	fec42683          	lw	a3,-20(s0)
200162d0:	02868693          	addi	a3,a3,40
200162d4:	8fd9                	or	a5,a5,a4
200162d6:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
200162d8:	fec42783          	lw	a5,-20(s0)
200162dc:	03078793          	addi	a5,a5,48
200162e0:	4398                	lw	a4,0(a5)
200162e2:	fd842783          	lw	a5,-40(s0)
200162e6:	fec42683          	lw	a3,-20(s0)
200162ea:	03068693          	addi	a3,a3,48
200162ee:	8fd9                	or	a5,a5,a4
200162f0:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
200162f2:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
200162f4:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:175
}
200162f6:	853e                	mv	a0,a5
200162f8:	50b2                	lw	ra,44(sp)
200162fa:	5422                	lw	s0,40(sp)
200162fc:	6145                	addi	sp,sp,48
200162fe:	8082                	ret

20016300 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20016300:	7179                	addi	sp,sp,-48
20016302:	d606                	sw	ra,44(sp)
20016304:	d422                	sw	s0,40(sp)
20016306:	1800                	addi	s0,sp,48
20016308:	fca42e23          	sw	a0,-36(s0)
2001630c:	fcb42c23          	sw	a1,-40(s0)
20016310:	fcc42a23          	sw	a2,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016314:	fdc42503          	lw	a0,-36(s0)
20016318:	f60ff0ef          	jal	ra,20015a78 <__metal_driver_sifive_gpio0_base>
2001631c:	87aa                	mv	a5,a0
2001631e:	fef42623          	sw	a5,-20(s0)
20016322:	fd442703          	lw	a4,-44(s0)
20016326:	479d                	li	a5,7
20016328:	14e7ea63          	bltu	a5,a4,2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
2001632c:	fd442783          	lw	a5,-44(s0)
20016330:	00279713          	slli	a4,a5,0x2
20016334:	200117b7          	lui	a5,0x20011
20016338:	f0078793          	addi	a5,a5,-256 # 20010f00 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
2001633c:	97ba                	add	a5,a5,a4
2001633e:	439c                	lw	a5,0(a5)
20016340:	8782                	jr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016342:	fec42783          	lw	a5,-20(s0)
20016346:	07f1                	addi	a5,a5,28
20016348:	4398                	lw	a4,0(a5)
2001634a:	fd842783          	lw	a5,-40(s0)
2001634e:	fec42683          	lw	a3,-20(s0)
20016352:	06f1                	addi	a3,a3,28
20016354:	8fd9                	or	a5,a5,a4
20016356:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20016358:	a215                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2001635a:	fec42783          	lw	a5,-20(s0)
2001635e:	02478793          	addi	a5,a5,36
20016362:	4398                	lw	a4,0(a5)
20016364:	fd842783          	lw	a5,-40(s0)
20016368:	fec42683          	lw	a3,-20(s0)
2001636c:	02468693          	addi	a3,a3,36
20016370:	8fd9                	or	a5,a5,a4
20016372:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20016374:	a221                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016376:	fec42783          	lw	a5,-20(s0)
2001637a:	07f1                	addi	a5,a5,28
2001637c:	4398                	lw	a4,0(a5)
2001637e:	fd842783          	lw	a5,-40(s0)
20016382:	fec42683          	lw	a3,-20(s0)
20016386:	06f1                	addi	a3,a3,28
20016388:	8fd9                	or	a5,a5,a4
2001638a:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2001638c:	fec42783          	lw	a5,-20(s0)
20016390:	02478793          	addi	a5,a5,36
20016394:	4398                	lw	a4,0(a5)
20016396:	fd842783          	lw	a5,-40(s0)
2001639a:	fec42683          	lw	a3,-20(s0)
2001639e:	02468693          	addi	a3,a3,36
200163a2:	8fd9                	or	a5,a5,a4
200163a4:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
200163a6:	a8d9                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200163a8:	fec42783          	lw	a5,-20(s0)
200163ac:	02c78793          	addi	a5,a5,44
200163b0:	4398                	lw	a4,0(a5)
200163b2:	fd842783          	lw	a5,-40(s0)
200163b6:	fec42683          	lw	a3,-20(s0)
200163ba:	02c68693          	addi	a3,a3,44
200163be:	8fd9                	or	a5,a5,a4
200163c0:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
200163c2:	a86d                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200163c4:	fec42783          	lw	a5,-20(s0)
200163c8:	03478793          	addi	a5,a5,52
200163cc:	4398                	lw	a4,0(a5)
200163ce:	fd842783          	lw	a5,-40(s0)
200163d2:	fec42683          	lw	a3,-20(s0)
200163d6:	03468693          	addi	a3,a3,52
200163da:	8fd9                	or	a5,a5,a4
200163dc:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
200163de:	a879                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200163e0:	fec42783          	lw	a5,-20(s0)
200163e4:	02c78793          	addi	a5,a5,44
200163e8:	4398                	lw	a4,0(a5)
200163ea:	fd842783          	lw	a5,-40(s0)
200163ee:	fec42683          	lw	a3,-20(s0)
200163f2:	02c68693          	addi	a3,a3,44
200163f6:	8fd9                	or	a5,a5,a4
200163f8:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200163fa:	fec42783          	lw	a5,-20(s0)
200163fe:	03478793          	addi	a5,a5,52
20016402:	4398                	lw	a4,0(a5)
20016404:	fd842783          	lw	a5,-40(s0)
20016408:	fec42683          	lw	a3,-20(s0)
2001640c:	03468693          	addi	a3,a3,52
20016410:	8fd9                	or	a5,a5,a4
20016412:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20016414:	a0a5                	j	2001647c <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016416:	fec42783          	lw	a5,-20(s0)
2001641a:	07f1                	addi	a5,a5,28
2001641c:	4398                	lw	a4,0(a5)
2001641e:	fd842783          	lw	a5,-40(s0)
20016422:	fec42683          	lw	a3,-20(s0)
20016426:	06f1                	addi	a3,a3,28
20016428:	8fd9                	or	a5,a5,a4
2001642a:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2001642c:	fec42783          	lw	a5,-20(s0)
20016430:	02478793          	addi	a5,a5,36
20016434:	4398                	lw	a4,0(a5)
20016436:	fd842783          	lw	a5,-40(s0)
2001643a:	fec42683          	lw	a3,-20(s0)
2001643e:	02468693          	addi	a3,a3,36
20016442:	8fd9                	or	a5,a5,a4
20016444:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016446:	fec42783          	lw	a5,-20(s0)
2001644a:	02c78793          	addi	a5,a5,44
2001644e:	4398                	lw	a4,0(a5)
20016450:	fd842783          	lw	a5,-40(s0)
20016454:	fec42683          	lw	a3,-20(s0)
20016458:	02c68693          	addi	a3,a3,44
2001645c:	8fd9                	or	a5,a5,a4
2001645e:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016460:	fec42783          	lw	a5,-20(s0)
20016464:	03478793          	addi	a5,a5,52
20016468:	4398                	lw	a4,0(a5)
2001646a:	fd842783          	lw	a5,-40(s0)
2001646e:	fec42683          	lw	a3,-20(s0)
20016472:	03468693          	addi	a3,a3,52
20016476:	8fd9                	or	a5,a5,a4
20016478:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
2001647a:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2001647c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2001647e:	853e                	mv	a0,a5
20016480:	50b2                	lw	ra,44(sp)
20016482:	5422                	lw	s0,40(sp)
20016484:	6145                	addi	sp,sp,48
20016486:	8082                	ret

20016488 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20016488:	1101                	addi	sp,sp,-32
2001648a:	ce06                	sw	ra,28(sp)
2001648c:	cc22                	sw	s0,24(sp)
2001648e:	1000                	addi	s0,sp,32
20016490:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20016494:	fec42503          	lw	a0,-20(s0)
20016498:	e06ff0ef          	jal	ra,20015a9e <__metal_driver_sifive_gpio0_interrupt_parent>
2001649c:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:227
}
2001649e:	853e                	mv	a0,a5
200164a0:	40f2                	lw	ra,28(sp)
200164a2:	4462                	lw	s0,24(sp)
200164a4:	6105                	addi	sp,sp,32
200164a6:	8082                	ret

200164a8 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
200164a8:	7179                	addi	sp,sp,-48
200164aa:	d606                	sw	ra,44(sp)
200164ac:	d422                	sw	s0,40(sp)
200164ae:	1800                	addi	s0,sp,48
200164b0:	fca42e23          	sw	a0,-36(s0)
200164b4:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
200164b8:	fd842583          	lw	a1,-40(s0)
200164bc:	fdc42503          	lw	a0,-36(s0)
200164c0:	e08ff0ef          	jal	ra,20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines>
200164c4:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
200164c8:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_gpio0.c:233
}
200164cc:	853e                	mv	a0,a5
200164ce:	50b2                	lw	ra,44(sp)
200164d0:	5422                	lw	s0,40(sp)
200164d2:	6145                	addi	sp,sp,48
200164d4:	8082                	ret

200164d6 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1072
{
200164d6:	1101                	addi	sp,sp,-32
200164d8:	ce22                	sw	s0,28(sp)
200164da:	1000                	addi	s0,sp,32
200164dc:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1073
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200164e0:	fec42703          	lw	a4,-20(s0)
200164e4:	800017b7          	lui	a5,0x80001
200164e8:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
200164ec:	00f71563          	bne	a4,a5,200164f6 <__metal_driver_sifive_uart0_control_base+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1074
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
200164f0:	100137b7          	lui	a5,0x10013
200164f4:	a829                	j	2001650e <__metal_driver_sifive_uart0_control_base+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1076
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200164f6:	fec42703          	lw	a4,-20(s0)
200164fa:	800017b7          	lui	a5,0x80001
200164fe:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
20016502:	00f71563          	bne	a4,a5,2001650c <__metal_driver_sifive_uart0_control_base+0x36>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1077
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016506:	100237b7          	lui	a5,0x10023
2001650a:	a011                	j	2001650e <__metal_driver_sifive_uart0_control_base+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1080
		return 0;
2001650c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1082
}
2001650e:	853e                	mv	a0,a5
20016510:	4472                	lw	s0,28(sp)
20016512:	6105                	addi	sp,sp,32
20016514:	8082                	ret

20016516 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1111
{
20016516:	1101                	addi	sp,sp,-32
20016518:	ce22                	sw	s0,28(sp)
2001651a:	1000                	addi	s0,sp,32
2001651c:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1112
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016520:	fec42703          	lw	a4,-20(s0)
20016524:	800017b7          	lui	a5,0x80001
20016528:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
2001652c:	00f71763          	bne	a4,a5,2001653a <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1113
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016530:	800007b7          	lui	a5,0x80000
20016534:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
20016538:	a839                	j	20016556 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1115
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
2001653a:	fec42703          	lw	a4,-20(s0)
2001653e:	800017b7          	lui	a5,0x80001
20016542:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
20016546:	00f71763          	bne	a4,a5,20016554 <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1116
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2001654a:	800007b7          	lui	a5,0x80000
2001654e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffecf0>
20016552:	a011                	j	20016556 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1119
		return 0;
20016554:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1121
}
20016556:	853e                	mv	a0,a5
20016558:	4472                	lw	s0,28(sp)
2001655a:	6105                	addi	sp,sp,32
2001655c:	8082                	ret

2001655e <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1124
{
2001655e:	1101                	addi	sp,sp,-32
20016560:	ce22                	sw	s0,28(sp)
20016562:	1000                	addi	s0,sp,32
20016564:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1125
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016568:	fec42703          	lw	a4,-20(s0)
2001656c:	800017b7          	lui	a5,0x80001
20016570:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
20016574:	00f71463          	bne	a4,a5,2001657c <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1126
		return 3;
20016578:	478d                	li	a5,3
2001657a:	a821                	j	20016592 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1128
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
2001657c:	fec42703          	lw	a4,-20(s0)
20016580:	800017b7          	lui	a5,0x80001
20016584:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
20016588:	00f71463          	bne	a4,a5,20016590 <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1129
		return 4;
2001658c:	4791                	li	a5,4
2001658e:	a011                	j	20016592 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1132
		return 0;
20016590:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1134
}
20016592:	853e                	mv	a0,a5
20016594:	4472                	lw	s0,28(sp)
20016596:	6105                	addi	sp,sp,32
20016598:	8082                	ret

2001659a <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1137
{
2001659a:	1101                	addi	sp,sp,-32
2001659c:	ce22                	sw	s0,28(sp)
2001659e:	1000                	addi	s0,sp,32
200165a0:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1138
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200165a4:	fec42703          	lw	a4,-20(s0)
200165a8:	800017b7          	lui	a5,0x80001
200165ac:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
200165b0:	00f71763          	bne	a4,a5,200165be <__metal_driver_sifive_uart0_clock+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1139
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200165b4:	800017b7          	lui	a5,0x80001
200165b8:	a9078793          	addi	a5,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xfffff320>
200165bc:	a839                	j	200165da <__metal_driver_sifive_uart0_clock+0x40>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1141
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200165be:	fec42703          	lw	a4,-20(s0)
200165c2:	800017b7          	lui	a5,0x80001
200165c6:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
200165ca:	00f71763          	bne	a4,a5,200165d8 <__metal_driver_sifive_uart0_clock+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1142
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200165ce:	800017b7          	lui	a5,0x80001
200165d2:	a9078793          	addi	a5,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xfffff320>
200165d6:	a011                	j	200165da <__metal_driver_sifive_uart0_clock+0x40>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1145
		return 0;
200165d8:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1147
}
200165da:	853e                	mv	a0,a5
200165dc:	4472                	lw	s0,28(sp)
200165de:	6105                	addi	sp,sp,32
200165e0:	8082                	ret

200165e2 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1150
{
200165e2:	1101                	addi	sp,sp,-32
200165e4:	ce22                	sw	s0,28(sp)
200165e6:	1000                	addi	s0,sp,32
200165e8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1151
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200165ec:	fec42703          	lw	a4,-20(s0)
200165f0:	800017b7          	lui	a5,0x80001
200165f4:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
200165f8:	00f71563          	bne	a4,a5,20016602 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1152
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
200165fc:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016600:	a829                	j	2001661a <__metal_driver_sifive_uart0_pinmux+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1154
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016602:	fec42703          	lw	a4,-20(s0)
20016606:	800017b7          	lui	a5,0x80001
2001660a:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
2001660e:	00f71563          	bne	a4,a5,20016618 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1155
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016612:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016616:	a011                	j	2001661a <__metal_driver_sifive_uart0_pinmux+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1158
		return 0;
20016618:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1160
}
2001661a:	853e                	mv	a0,a5
2001661c:	4472                	lw	s0,28(sp)
2001661e:	6105                	addi	sp,sp,32
20016620:	8082                	ret

20016622 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1163
{
20016622:	1101                	addi	sp,sp,-32
20016624:	ce22                	sw	s0,28(sp)
20016626:	1000                	addi	s0,sp,32
20016628:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1164
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001662c:	fec42703          	lw	a4,-20(s0)
20016630:	800017b7          	lui	a5,0x80001
20016634:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
20016638:	00f71463          	bne	a4,a5,20016640 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1165
		return 0;
2001663c:	4781                	li	a5,0
2001663e:	a821                	j	20016656 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1167
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016640:	fec42703          	lw	a4,-20(s0)
20016644:	800017b7          	lui	a5,0x80001
20016648:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
2001664c:	00f71463          	bne	a4,a5,20016654 <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1168
		return 0;
20016650:	4781                	li	a5,0
20016652:	a011                	j	20016656 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1171
		return 0;
20016654:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1173
}
20016656:	853e                	mv	a0,a5
20016658:	4472                	lw	s0,28(sp)
2001665a:	6105                	addi	sp,sp,32
2001665c:	8082                	ret

2001665e <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1176
{
2001665e:	1101                	addi	sp,sp,-32
20016660:	ce22                	sw	s0,28(sp)
20016662:	1000                	addi	s0,sp,32
20016664:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1177
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016668:	fec42703          	lw	a4,-20(s0)
2001666c:	800017b7          	lui	a5,0x80001
20016670:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff2c8>
20016674:	00f71563          	bne	a4,a5,2001667e <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1178
		return 196608;
20016678:	000307b7          	lui	a5,0x30
2001667c:	a829                	j	20016696 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1180
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
2001667e:	fec42703          	lw	a4,-20(s0)
20016682:	800017b7          	lui	a5,0x80001
20016686:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xfffff2e8>
2001668a:	00f71563          	bne	a4,a5,20016694 <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1181
		return 8650752;
2001668e:	008407b7          	lui	a5,0x840
20016692:	a011                	j	20016696 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1184
		return 0;
20016694:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1186
}
20016696:	853e                	mv	a0,a5
20016698:	4472                	lw	s0,28(sp)
2001669a:	6105                	addi	sp,sp,32
2001669c:	8082                	ret

2001669e <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2001669e:	1101                	addi	sp,sp,-32
200166a0:	ce06                	sw	ra,28(sp)
200166a2:	cc22                	sw	s0,24(sp)
200166a4:	1000                	addi	s0,sp,32
200166a6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
200166aa:	fec42503          	lw	a0,-20(s0)
200166ae:	e69ff0ef          	jal	ra,20016516 <__metal_driver_sifive_uart0_interrupt_parent>
200166b2:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:39
}
200166b4:	853e                	mv	a0,a5
200166b6:	40f2                	lw	ra,28(sp)
200166b8:	4462                	lw	s0,24(sp)
200166ba:	6105                	addi	sp,sp,32
200166bc:	8082                	ret

200166be <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
200166be:	1101                	addi	sp,sp,-32
200166c0:	ce06                	sw	ra,28(sp)
200166c2:	cc22                	sw	s0,24(sp)
200166c4:	1000                	addi	s0,sp,32
200166c6:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
200166ca:	fec42503          	lw	a0,-20(s0)
200166ce:	e91ff0ef          	jal	ra,2001655e <__metal_driver_sifive_uart0_interrupt_line>
200166d2:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:43
}
200166d4:	853e                	mv	a0,a5
200166d6:	40f2                	lw	ra,28(sp)
200166d8:	4462                	lw	s0,24(sp)
200166da:	6105                	addi	sp,sp,32
200166dc:	8082                	ret

200166de <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
200166de:	7179                	addi	sp,sp,-48
200166e0:	d606                	sw	ra,44(sp)
200166e2:	d422                	sw	s0,40(sp)
200166e4:	1800                	addi	s0,sp,48
200166e6:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200166ea:	fdc42503          	lw	a0,-36(s0)
200166ee:	de9ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
200166f2:	87aa                	mv	a5,a0
200166f4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
200166f8:	fec42783          	lw	a5,-20(s0)
200166fc:	07c1                	addi	a5,a5,16
200166fe:	439c                	lw	a5,0(a5)
20016700:	fec42703          	lw	a4,-20(s0)
20016704:	0741                	addi	a4,a4,16
20016706:	0017e793          	ori	a5,a5,1
2001670a:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2001670c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:50
}
2001670e:	853e                	mv	a0,a5
20016710:	50b2                	lw	ra,44(sp)
20016712:	5422                	lw	s0,40(sp)
20016714:	6145                	addi	sp,sp,48
20016716:	8082                	ret

20016718 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20016718:	7179                	addi	sp,sp,-48
2001671a:	d606                	sw	ra,44(sp)
2001671c:	d422                	sw	s0,40(sp)
2001671e:	1800                	addi	s0,sp,48
20016720:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016724:	fdc42503          	lw	a0,-36(s0)
20016728:	dafff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
2001672c:	87aa                	mv	a5,a0
2001672e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20016732:	fec42783          	lw	a5,-20(s0)
20016736:	07c1                	addi	a5,a5,16
20016738:	439c                	lw	a5,0(a5)
2001673a:	fec42703          	lw	a4,-20(s0)
2001673e:	0741                	addi	a4,a4,16
20016740:	9bf9                	andi	a5,a5,-2
20016742:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20016744:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:57
}
20016746:	853e                	mv	a0,a5
20016748:	50b2                	lw	ra,44(sp)
2001674a:	5422                	lw	s0,40(sp)
2001674c:	6145                	addi	sp,sp,48
2001674e:	8082                	ret

20016750 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20016750:	7179                	addi	sp,sp,-48
20016752:	d606                	sw	ra,44(sp)
20016754:	d422                	sw	s0,40(sp)
20016756:	1800                	addi	s0,sp,48
20016758:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001675c:	fdc42503          	lw	a0,-36(s0)
20016760:	d77ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
20016764:	87aa                	mv	a5,a0
20016766:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2001676a:	fec42783          	lw	a5,-20(s0)
2001676e:	07c1                	addi	a5,a5,16
20016770:	439c                	lw	a5,0(a5)
20016772:	fec42703          	lw	a4,-20(s0)
20016776:	0741                	addi	a4,a4,16
20016778:	0027e793          	ori	a5,a5,2
2001677c:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2001677e:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:64
}
20016780:	853e                	mv	a0,a5
20016782:	50b2                	lw	ra,44(sp)
20016784:	5422                	lw	s0,40(sp)
20016786:	6145                	addi	sp,sp,48
20016788:	8082                	ret

2001678a <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2001678a:	7179                	addi	sp,sp,-48
2001678c:	d606                	sw	ra,44(sp)
2001678e:	d422                	sw	s0,40(sp)
20016790:	1800                	addi	s0,sp,48
20016792:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016796:	fdc42503          	lw	a0,-36(s0)
2001679a:	d3dff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
2001679e:	87aa                	mv	a5,a0
200167a0:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
200167a4:	fec42783          	lw	a5,-20(s0)
200167a8:	07c1                	addi	a5,a5,16
200167aa:	439c                	lw	a5,0(a5)
200167ac:	fec42703          	lw	a4,-20(s0)
200167b0:	0741                	addi	a4,a4,16
200167b2:	9bf5                	andi	a5,a5,-3
200167b4:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
200167b6:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:71
}
200167b8:	853e                	mv	a0,a5
200167ba:	50b2                	lw	ra,44(sp)
200167bc:	5422                	lw	s0,40(sp)
200167be:	6145                	addi	sp,sp,48
200167c0:	8082                	ret

200167c2 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
200167c2:	7179                	addi	sp,sp,-48
200167c4:	d606                	sw	ra,44(sp)
200167c6:	d422                	sw	s0,40(sp)
200167c8:	1800                	addi	s0,sp,48
200167ca:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200167ce:	fdc42503          	lw	a0,-36(s0)
200167d2:	d05ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
200167d6:	87aa                	mv	a5,a0
200167d8:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
200167dc:	fec42783          	lw	a5,-20(s0)
200167e0:	439c                	lw	a5,0(a5)
200167e2:	83fd                	srli	a5,a5,0x1f
200167e4:	0ff7f793          	zext.b	a5,a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:77
}
200167e8:	853e                	mv	a0,a5
200167ea:	50b2                	lw	ra,44(sp)
200167ec:	5422                	lw	s0,40(sp)
200167ee:	6145                	addi	sp,sp,48
200167f0:	8082                	ret

200167f2 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
200167f2:	7179                	addi	sp,sp,-48
200167f4:	d606                	sw	ra,44(sp)
200167f6:	d422                	sw	s0,40(sp)
200167f8:	1800                	addi	s0,sp,48
200167fa:	fca42e23          	sw	a0,-36(s0)
200167fe:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016802:	fdc42503          	lw	a0,-36(s0)
20016806:	cd1ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
2001680a:	87aa                	mv	a5,a0
2001680c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20016810:	fec42783          	lw	a5,-20(s0)
20016814:	07a1                	addi	a5,a5,8
20016816:	4398                	lw	a4,0(a5)
20016818:	fd842783          	lw	a5,-40(s0)
2001681c:	01079693          	slli	a3,a5,0x10
20016820:	000707b7          	lui	a5,0x70
20016824:	8ff5                	and	a5,a5,a3
20016826:	fec42683          	lw	a3,-20(s0)
2001682a:	06a1                	addi	a3,a3,8
2001682c:	8fd9                	or	a5,a5,a4
2001682e:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20016830:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:85
}
20016832:	853e                	mv	a0,a5
20016834:	50b2                	lw	ra,44(sp)
20016836:	5422                	lw	s0,40(sp)
20016838:	6145                	addi	sp,sp,48
2001683a:	8082                	ret

2001683c <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2001683c:	7179                	addi	sp,sp,-48
2001683e:	d606                	sw	ra,44(sp)
20016840:	d422                	sw	s0,40(sp)
20016842:	1800                	addi	s0,sp,48
20016844:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016848:	fdc42503          	lw	a0,-36(s0)
2001684c:	c8bff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
20016850:	87aa                	mv	a5,a0
20016852:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20016856:	fec42783          	lw	a5,-20(s0)
2001685a:	07a1                	addi	a5,a5,8
2001685c:	439c                	lw	a5,0(a5)
2001685e:	83c1                	srli	a5,a5,0x10
20016860:	8b9d                	andi	a5,a5,7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:91
}
20016862:	853e                	mv	a0,a5
20016864:	50b2                	lw	ra,44(sp)
20016866:	5422                	lw	s0,40(sp)
20016868:	6145                	addi	sp,sp,48
2001686a:	8082                	ret

2001686c <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2001686c:	7179                	addi	sp,sp,-48
2001686e:	d606                	sw	ra,44(sp)
20016870:	d422                	sw	s0,40(sp)
20016872:	1800                	addi	s0,sp,48
20016874:	fca42e23          	sw	a0,-36(s0)
20016878:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001687c:	fdc42503          	lw	a0,-36(s0)
20016880:	c57ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
20016884:	87aa                	mv	a5,a0
20016886:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2001688a:	fec42783          	lw	a5,-20(s0)
2001688e:	07b1                	addi	a5,a5,12
20016890:	4398                	lw	a4,0(a5)
20016892:	fd842783          	lw	a5,-40(s0)
20016896:	01079693          	slli	a3,a5,0x10
2001689a:	000707b7          	lui	a5,0x70
2001689e:	8ff5                	and	a5,a5,a3
200168a0:	fec42683          	lw	a3,-20(s0)
200168a4:	06b1                	addi	a3,a3,12
200168a6:	8fd9                	or	a5,a5,a4
200168a8:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
200168aa:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:99
}
200168ac:	853e                	mv	a0,a5
200168ae:	50b2                	lw	ra,44(sp)
200168b0:	5422                	lw	s0,40(sp)
200168b2:	6145                	addi	sp,sp,48
200168b4:	8082                	ret

200168b6 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
200168b6:	7179                	addi	sp,sp,-48
200168b8:	d606                	sw	ra,44(sp)
200168ba:	d422                	sw	s0,40(sp)
200168bc:	1800                	addi	s0,sp,48
200168be:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200168c2:	fdc42503          	lw	a0,-36(s0)
200168c6:	c11ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
200168ca:	87aa                	mv	a5,a0
200168cc:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
200168d0:	fec42783          	lw	a5,-20(s0)
200168d4:	07b1                	addi	a5,a5,12
200168d6:	439c                	lw	a5,0(a5)
200168d8:	83c1                	srli	a5,a5,0x10
200168da:	8b9d                	andi	a5,a5,7
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:105
}
200168dc:	853e                	mv	a0,a5
200168de:	50b2                	lw	ra,44(sp)
200168e0:	5422                	lw	s0,40(sp)
200168e2:	6145                	addi	sp,sp,48
200168e4:	8082                	ret

200168e6 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
200168e6:	7179                	addi	sp,sp,-48
200168e8:	d606                	sw	ra,44(sp)
200168ea:	d422                	sw	s0,40(sp)
200168ec:	1800                	addi	s0,sp,48
200168ee:	fca42e23          	sw	a0,-36(s0)
200168f2:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200168f6:	fdc42503          	lw	a0,-36(s0)
200168fa:	bddff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
200168fe:	87aa                	mv	a5,a0
20016900:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20016904:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20016906:	fdc42503          	lw	a0,-36(s0)
2001690a:	eb9ff0ef          	jal	ra,200167c2 <__metal_driver_sifive_uart0_txready>
2001690e:	87aa                	mv	a5,a0
20016910:	fbfd                	bnez	a5,20016906 <__metal_driver_sifive_uart0_putc+0x20>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20016912:	fec42783          	lw	a5,-20(s0)
20016916:	fd842703          	lw	a4,-40(s0)
2001691a:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2001691c:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:115
}
2001691e:	853e                	mv	a0,a5
20016920:	50b2                	lw	ra,44(sp)
20016922:	5422                	lw	s0,40(sp)
20016924:	6145                	addi	sp,sp,48
20016926:	8082                	ret

20016928 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20016928:	7179                	addi	sp,sp,-48
2001692a:	d606                	sw	ra,44(sp)
2001692c:	d422                	sw	s0,40(sp)
2001692e:	1800                	addi	s0,sp,48
20016930:	fca42e23          	sw	a0,-36(s0)
20016934:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016938:	fdc42503          	lw	a0,-36(s0)
2001693c:	b9bff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
20016940:	87aa                	mv	a5,a0
20016942:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20016946:	fec42783          	lw	a5,-20(s0)
2001694a:	0791                	addi	a5,a5,4
2001694c:	439c                	lw	a5,0(a5)
2001694e:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20016952:	fe842783          	lw	a5,-24(s0)
20016956:	0007d763          	bgez	a5,20016964 <__metal_driver_sifive_uart0_getc+0x3c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2001695a:	fd842783          	lw	a5,-40(s0)
2001695e:	577d                	li	a4,-1
20016960:	c398                	sw	a4,0(a5)
20016962:	a801                	j	20016972 <__metal_driver_sifive_uart0_getc+0x4a>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20016964:	fe842783          	lw	a5,-24(s0)
20016968:	0ff7f713          	zext.b	a4,a5
2001696c:	fd842783          	lw	a5,-40(s0)
20016970:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20016972:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:129
}
20016974:	853e                	mv	a0,a5
20016976:	50b2                	lw	ra,44(sp)
20016978:	5422                	lw	s0,40(sp)
2001697a:	6145                	addi	sp,sp,48
2001697c:	8082                	ret

2001697e <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2001697e:	7179                	addi	sp,sp,-48
20016980:	d622                	sw	s0,44(sp)
20016982:	1800                	addi	s0,sp,48
20016984:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20016988:	fdc42783          	lw	a5,-36(s0)
2001698c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20016990:	fec42783          	lw	a5,-20(s0)
20016994:	43dc                	lw	a5,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:134
}
20016996:	853e                	mv	a0,a5
20016998:	5432                	lw	s0,44(sp)
2001699a:	6145                	addi	sp,sp,48
2001699c:	8082                	ret

2001699e <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2001699e:	7179                	addi	sp,sp,-48
200169a0:	d606                	sw	ra,44(sp)
200169a2:	d422                	sw	s0,40(sp)
200169a4:	1800                	addi	s0,sp,48
200169a6:	fca42e23          	sw	a0,-36(s0)
200169aa:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200169ae:	fdc42783          	lw	a5,-36(s0)
200169b2:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
200169b6:	fdc42503          	lw	a0,-36(s0)
200169ba:	b1dff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
200169be:	87aa                	mv	a5,a0
200169c0:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200169c4:	fdc42503          	lw	a0,-36(s0)
200169c8:	bd3ff0ef          	jal	ra,2001659a <__metal_driver_sifive_uart0_clock>
200169cc:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200169d0:	fd842703          	lw	a4,-40(s0)
200169d4:	fec42783          	lw	a5,-20(s0)
200169d8:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200169da:	fe442783          	lw	a5,-28(s0)
200169de:	cbb1                	beqz	a5,20016a32 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200169e0:	fe442783          	lw	a5,-28(s0)
200169e4:	439c                	lw	a5,0(a5)
200169e6:	439c                	lw	a5,0(a5)
200169e8:	fe442503          	lw	a0,-28(s0)
200169ec:	9782                	jalr	a5
200169ee:	fea42023          	sw	a0,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200169f2:	fe042703          	lw	a4,-32(s0)
200169f6:	fd842783          	lw	a5,-40(s0)
200169fa:	02f747b3          	div	a5,a4,a5
200169fe:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20016a02:	fe842783          	lw	a5,-24(s0)
20016a06:	07e1                	addi	a5,a5,24
20016a08:	c398                	sw	a4,0(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20016a0a:	fe842783          	lw	a5,-24(s0)
20016a0e:	07a1                	addi	a5,a5,8
20016a10:	439c                	lw	a5,0(a5)
20016a12:	fe842703          	lw	a4,-24(s0)
20016a16:	0721                	addi	a4,a4,8
20016a18:	0017e793          	ori	a5,a5,1
20016a1c:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20016a1e:	fe842783          	lw	a5,-24(s0)
20016a22:	07b1                	addi	a5,a5,12
20016a24:	439c                	lw	a5,0(a5)
20016a26:	fe842703          	lw	a4,-24(s0)
20016a2a:	0731                	addi	a4,a4,12
20016a2c:	0017e793          	ori	a5,a5,1
20016a30:	c31c                	sw	a5,0(a4)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20016a32:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:151
}
20016a34:	853e                	mv	a0,a5
20016a36:	50b2                	lw	ra,44(sp)
20016a38:	5422                	lw	s0,40(sp)
20016a3a:	6145                	addi	sp,sp,48
20016a3c:	8082                	ret

20016a3e <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20016a3e:	7139                	addi	sp,sp,-64
20016a40:	de06                	sw	ra,60(sp)
20016a42:	dc22                	sw	s0,56(sp)
20016a44:	0080                	addi	s0,sp,64
20016a46:	fca42623          	sw	a0,-52(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20016a4a:	fcc42783          	lw	a5,-52(s0)
20016a4e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20016a52:	fcc42503          	lw	a0,-52(s0)
20016a56:	a81ff0ef          	jal	ra,200164d6 <__metal_driver_sifive_uart0_control_base>
20016a5a:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20016a5c:	fef42423          	sw	a5,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20016a60:	fcc42503          	lw	a0,-52(s0)
20016a64:	b37ff0ef          	jal	ra,2001659a <__metal_driver_sifive_uart0_clock>
20016a68:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20016a6c:	fe842783          	lw	a5,-24(s0)
20016a70:	07a1                	addi	a5,a5,8
20016a72:	4398                	lw	a4,0(a5)
20016a74:	fe842783          	lw	a5,-24(s0)
20016a78:	07a1                	addi	a5,a5,8
20016a7a:	86be                	mv	a3,a5
20016a7c:	fff907b7          	lui	a5,0xfff90
20016a80:	17fd                	addi	a5,a5,-1
20016a82:	8ff9                	and	a5,a5,a4
20016a84:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20016a86:	fe842783          	lw	a5,-24(s0)
20016a8a:	07a1                	addi	a5,a5,8
20016a8c:	4398                	lw	a4,0(a5)
20016a8e:	fe842783          	lw	a5,-24(s0)
20016a92:	07a1                	addi	a5,a5,8
20016a94:	86be                	mv	a3,a5
20016a96:	67c1                	lui	a5,0x10
20016a98:	8fd9                	or	a5,a5,a4
20016a9a:	c29c                	sw	a5,0(a3)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20016a9c:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20016a9e:	fe842783          	lw	a5,-24(s0)
20016aa2:	07d1                	addi	a5,a5,20
20016aa4:	439c                	lw	a5,0(a5)
20016aa6:	8b85                	andi	a5,a5,1
20016aa8:	dbfd                	beqz	a5,20016a9e <pre_rate_change_callback_func+0x60>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20016aaa:	fe842783          	lw	a5,-24(s0)
20016aae:	07a1                	addi	a5,a5,8
20016ab0:	439c                	lw	a5,0(a5)
20016ab2:	8b89                	andi	a5,a5,2
20016ab4:	c399                	beqz	a5,20016aba <pre_rate_change_callback_func+0x7c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20016ab6:	47a5                	li	a5,9
20016ab8:	a011                	j	20016abc <pre_rate_change_callback_func+0x7e>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20016aba:	47a9                	li	a5,10
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20016abc:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20016ac0:	fe442783          	lw	a5,-28(s0)
20016ac4:	439c                	lw	a5,0(a5)
20016ac6:	439c                	lw	a5,0(a5)
20016ac8:	fe442503          	lw	a0,-28(s0)
20016acc:	9782                	jalr	a5
20016ace:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20016ad2:	fe042703          	lw	a4,-32(s0)
20016ad6:	fdc42783          	lw	a5,-36(s0)
20016ada:	02f707b3          	mul	a5,a4,a5
20016ade:	873e                	mv	a4,a5
20016ae0:	fec42783          	lw	a5,-20(s0)
20016ae4:	43dc                	lw	a5,4(a5)
20016ae6:	02f757b3          	divu	a5,a4,a5
20016aea:	fcf42c23          	sw	a5,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20016aee:	fc042a23          	sw	zero,-44(s0)
20016af2:	a039                	j	20016b00 <pre_rate_change_callback_func+0xc2>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20016af4:	0001                	nop
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20016af6:	fd442783          	lw	a5,-44(s0)
20016afa:	0785                	addi	a5,a5,1
20016afc:	fcf42a23          	sw	a5,-44(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20016b00:	fd442783          	lw	a5,-44(s0)
20016b04:	fd842703          	lw	a4,-40(s0)
20016b08:	fee7c6e3          	blt	a5,a4,20016af4 <pre_rate_change_callback_func+0xb6>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:180
}
20016b0c:	0001                	nop
20016b0e:	0001                	nop
20016b10:	50f2                	lw	ra,60(sp)
20016b12:	5462                	lw	s0,56(sp)
20016b14:	6121                	addi	sp,sp,64
20016b16:	8082                	ret

20016b18 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20016b18:	7179                	addi	sp,sp,-48
20016b1a:	d606                	sw	ra,44(sp)
20016b1c:	d422                	sw	s0,40(sp)
20016b1e:	1800                	addi	s0,sp,48
20016b20:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20016b24:	fdc42783          	lw	a5,-36(s0)
20016b28:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20016b2c:	fec42703          	lw	a4,-20(s0)
20016b30:	fec42783          	lw	a5,-20(s0)
20016b34:	43dc                	lw	a5,4(a5)
20016b36:	85be                	mv	a1,a5
20016b38:	853a                	mv	a0,a4
20016b3a:	be3fb0ef          	jal	ra,2001271c <metal_uart_set_baud_rate>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:185
}
20016b3e:	0001                	nop
20016b40:	50b2                	lw	ra,44(sp)
20016b42:	5422                	lw	s0,40(sp)
20016b44:	6145                	addi	sp,sp,48
20016b46:	8082                	ret

20016b48 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20016b48:	7139                	addi	sp,sp,-64
20016b4a:	de06                	sw	ra,60(sp)
20016b4c:	dc22                	sw	s0,56(sp)
20016b4e:	0080                	addi	s0,sp,64
20016b50:	fca42623          	sw	a0,-52(s0)
20016b54:	fcb42423          	sw	a1,-56(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20016b58:	fcc42783          	lw	a5,-52(s0)
20016b5c:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20016b60:	fcc42503          	lw	a0,-52(s0)
20016b64:	a37ff0ef          	jal	ra,2001659a <__metal_driver_sifive_uart0_clock>
20016b68:	fea42423          	sw	a0,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20016b6c:	fcc42503          	lw	a0,-52(s0)
20016b70:	a73ff0ef          	jal	ra,200165e2 <__metal_driver_sifive_uart0_pinmux>
20016b74:	fea42223          	sw	a0,-28(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20016b78:	fe842783          	lw	a5,-24(s0)
20016b7c:	c7b9                	beqz	a5,20016bca <__metal_driver_sifive_uart0_init+0x82>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20016b7e:	fec42783          	lw	a5,-20(s0)
20016b82:	20017737          	lui	a4,0x20017
20016b86:	a3e70713          	addi	a4,a4,-1474 # 20016a3e <pre_rate_change_callback_func>
20016b8a:	c798                	sw	a4,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20016b8c:	fec42783          	lw	a5,-20(s0)
20016b90:	fcc42703          	lw	a4,-52(s0)
20016b94:	c7d8                	sw	a4,12(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20016b96:	fec42783          	lw	a5,-20(s0)
20016b9a:	07a1                	addi	a5,a5,8
20016b9c:	85be                	mv	a1,a5
20016b9e:	fe842503          	lw	a0,-24(s0)
20016ba2:	2241                	jal	20016d22 <metal_clock_register_pre_rate_change_callback>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20016ba4:	fec42783          	lw	a5,-20(s0)
20016ba8:	20017737          	lui	a4,0x20017
20016bac:	b1870713          	addi	a4,a4,-1256 # 20016b18 <post_rate_change_callback_func>
20016bb0:	cbd8                	sw	a4,20(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20016bb2:	fec42783          	lw	a5,-20(s0)
20016bb6:	fcc42703          	lw	a4,-52(s0)
20016bba:	cf98                	sw	a4,24(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20016bbc:	fec42783          	lw	a5,-20(s0)
20016bc0:	07d1                	addi	a5,a5,20
20016bc2:	85be                	mv	a1,a5
20016bc4:	fe842503          	lw	a0,-24(s0)
20016bc8:	2271                	jal	20016d54 <metal_clock_register_post_rate_change_callback>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20016bca:	fec42783          	lw	a5,-20(s0)
20016bce:	fc842583          	lw	a1,-56(s0)
20016bd2:	853e                	mv	a0,a5
20016bd4:	b49fb0ef          	jal	ra,2001271c <metal_uart_set_baud_rate>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20016bd8:	fe442783          	lw	a5,-28(s0)
20016bdc:	cb95                	beqz	a5,20016c10 <__metal_driver_sifive_uart0_init+0xc8>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20016bde:	fcc42503          	lw	a0,-52(s0)
20016be2:	a41ff0ef          	jal	ra,20016622 <__metal_driver_sifive_uart0_pinmux_output_selector>
20016be6:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20016be8:	fef42023          	sw	a5,-32(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20016bec:	fcc42503          	lw	a0,-52(s0)
20016bf0:	a6fff0ef          	jal	ra,2001665e <__metal_driver_sifive_uart0_pinmux_source_selector>
20016bf4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20016bf6:	fcf42e23          	sw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20016bfa:	fe442783          	lw	a5,-28(s0)
20016bfe:	439c                	lw	a5,0(a5)
20016c00:	53dc                	lw	a5,36(a5)
20016c02:	fdc42603          	lw	a2,-36(s0)
20016c06:	fe042583          	lw	a1,-32(s0)
20016c0a:	fe442503          	lw	a0,-28(s0)
20016c0e:	9782                	jalr	a5
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20016c10:	0001                	nop
20016c12:	50f2                	lw	ra,60(sp)
20016c14:	5462                	lw	s0,56(sp)
20016c16:	6121                	addi	sp,sp,64
20016c18:	8082                	ret

20016c1a <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20016c1a:	7179                	addi	sp,sp,-48
20016c1c:	d606                	sw	ra,44(sp)
20016c1e:	d422                	sw	s0,40(sp)
20016c20:	1800                	addi	s0,sp,48
20016c22:	fca42e23          	sw	a0,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20016c26:	fdc42783          	lw	a5,-36(s0)
20016c2a:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:52
    while (current) {
20016c2e:	a831                	j	20016c4a <_metal_clock_call_all_callbacks+0x30>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20016c30:	fec42783          	lw	a5,-20(s0)
20016c34:	4398                	lw	a4,0(a5)
20016c36:	fec42783          	lw	a5,-20(s0)
20016c3a:	43dc                	lw	a5,4(a5)
20016c3c:	853e                	mv	a0,a5
20016c3e:	9702                	jalr	a4
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:54
        current = current->_next;
20016c40:	fec42783          	lw	a5,-20(s0)
20016c44:	479c                	lw	a5,8(a5)
20016c46:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:52
    while (current) {
20016c4a:	fec42783          	lw	a5,-20(s0)
20016c4e:	f3ed                	bnez	a5,20016c30 <_metal_clock_call_all_callbacks+0x16>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:56
    }
}
20016c50:	0001                	nop
20016c52:	0001                	nop
20016c54:	50b2                	lw	ra,44(sp)
20016c56:	5422                	lw	s0,40(sp)
20016c58:	6145                	addi	sp,sp,48
20016c5a:	8082                	ret

20016c5c <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20016c5c:	7179                	addi	sp,sp,-48
20016c5e:	d622                	sw	s0,44(sp)
20016c60:	1800                	addi	s0,sp,48
20016c62:	fca42e23          	sw	a0,-36(s0)
20016c66:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20016c6a:	fd842783          	lw	a5,-40(s0)
20016c6e:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:66

    if (!list) {
20016c72:	fdc42783          	lw	a5,-36(s0)
20016c76:	e781                	bnez	a5,20016c7e <_metal_clock_append_to_callbacks+0x22>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:67
        return cb;
20016c78:	fd842783          	lw	a5,-40(s0)
20016c7c:	a035                	j	20016ca8 <_metal_clock_append_to_callbacks+0x4c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20016c7e:	fdc42783          	lw	a5,-36(s0)
20016c82:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20016c86:	a031                	j	20016c92 <_metal_clock_append_to_callbacks+0x36>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:73
        current = current->_next;
20016c88:	fec42783          	lw	a5,-20(s0)
20016c8c:	479c                	lw	a5,8(a5)
20016c8e:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20016c92:	fec42783          	lw	a5,-20(s0)
20016c96:	479c                	lw	a5,8(a5)
20016c98:	fbe5                	bnez	a5,20016c88 <_metal_clock_append_to_callbacks+0x2c>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20016c9a:	fec42783          	lw	a5,-20(s0)
20016c9e:	fd842703          	lw	a4,-40(s0)
20016ca2:	c798                	sw	a4,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:78

    return list;
20016ca4:	fdc42783          	lw	a5,-36(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:79
}
20016ca8:	853e                	mv	a0,a5
20016caa:	5432                	lw	s0,44(sp)
20016cac:	6145                	addi	sp,sp,48
20016cae:	8082                	ret

20016cb0 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20016cb0:	1101                	addi	sp,sp,-32
20016cb2:	ce06                	sw	ra,28(sp)
20016cb4:	cc22                	sw	s0,24(sp)
20016cb6:	1000                	addi	s0,sp,32
20016cb8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20016cbc:	fec42783          	lw	a5,-20(s0)
20016cc0:	439c                	lw	a5,0(a5)
20016cc2:	439c                	lw	a5,0(a5)
20016cc4:	fec42503          	lw	a0,-20(s0)
20016cc8:	9782                	jalr	a5
20016cca:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:112
}
20016ccc:	853e                	mv	a0,a5
20016cce:	40f2                	lw	ra,28(sp)
20016cd0:	4462                	lw	s0,24(sp)
20016cd2:	6105                	addi	sp,sp,32
20016cd4:	8082                	ret

20016cd6 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20016cd6:	7179                	addi	sp,sp,-48
20016cd8:	d606                	sw	ra,44(sp)
20016cda:	d422                	sw	s0,40(sp)
20016cdc:	1800                	addi	s0,sp,48
20016cde:	fca42e23          	sw	a0,-36(s0)
20016ce2:	fcb42c23          	sw	a1,-40(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20016ce6:	fdc42783          	lw	a5,-36(s0)
20016cea:	43dc                	lw	a5,4(a5)
20016cec:	853e                	mv	a0,a5
20016cee:	f2dff0ef          	jal	ra,20016c1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20016cf2:	fdc42783          	lw	a5,-36(s0)
20016cf6:	439c                	lw	a5,0(a5)
20016cf8:	43dc                	lw	a5,4(a5)
20016cfa:	fd842583          	lw	a1,-40(s0)
20016cfe:	fdc42503          	lw	a0,-36(s0)
20016d02:	9782                	jalr	a5
20016d04:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20016d08:	fdc42783          	lw	a5,-36(s0)
20016d0c:	479c                	lw	a5,8(a5)
20016d0e:	853e                	mv	a0,a5
20016d10:	f0bff0ef          	jal	ra,20016c1a <_metal_clock_call_all_callbacks>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:135

    return out;
20016d14:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:136
}
20016d18:	853e                	mv	a0,a5
20016d1a:	50b2                	lw	ra,44(sp)
20016d1c:	5422                	lw	s0,40(sp)
20016d1e:	6145                	addi	sp,sp,48
20016d20:	8082                	ret

20016d22 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20016d22:	1101                	addi	sp,sp,-32
20016d24:	ce06                	sw	ra,28(sp)
20016d26:	cc22                	sw	s0,24(sp)
20016d28:	1000                	addi	s0,sp,32
20016d2a:	fea42623          	sw	a0,-20(s0)
20016d2e:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20016d32:	fec42783          	lw	a5,-20(s0)
20016d36:	43dc                	lw	a5,4(a5)
20016d38:	fe842583          	lw	a1,-24(s0)
20016d3c:	853e                	mv	a0,a5
20016d3e:	f1fff0ef          	jal	ra,20016c5c <_metal_clock_append_to_callbacks>
20016d42:	872a                	mv	a4,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20016d44:	fec42783          	lw	a5,-20(s0)
20016d48:	c3d8                	sw	a4,4(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:149
}
20016d4a:	0001                	nop
20016d4c:	40f2                	lw	ra,28(sp)
20016d4e:	4462                	lw	s0,24(sp)
20016d50:	6105                	addi	sp,sp,32
20016d52:	8082                	ret

20016d54 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20016d54:	1101                	addi	sp,sp,-32
20016d56:	ce06                	sw	ra,28(sp)
20016d58:	cc22                	sw	s0,24(sp)
20016d5a:	1000                	addi	s0,sp,32
20016d5c:	fea42623          	sw	a0,-20(s0)
20016d60:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20016d64:	fec42783          	lw	a5,-20(s0)
20016d68:	479c                	lw	a5,8(a5)
20016d6a:	fe842583          	lw	a1,-24(s0)
20016d6e:	853e                	mv	a0,a5
20016d70:	eedff0ef          	jal	ra,20016c5c <_metal_clock_append_to_callbacks>
20016d74:	872a                	mv	a4,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20016d76:	fec42783          	lw	a5,-20(s0)
20016d7a:	c798                	sw	a4,8(a5)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/clock.h:162
}
20016d7c:	0001                	nop
20016d7e:	40f2                	lw	ra,28(sp)
20016d80:	4462                	lw	s0,24(sp)
20016d82:	6105                	addi	sp,sp,32
20016d84:	8082                	ret

20016d86 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20016d86:	1101                	addi	sp,sp,-32
20016d88:	ce06                	sw	ra,28(sp)
20016d8a:	cc22                	sw	s0,24(sp)
20016d8c:	1000                	addi	s0,sp,32
20016d8e:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20016d92:	fec42783          	lw	a5,-20(s0)
20016d96:	439c                	lw	a5,0(a5)
20016d98:	57dc                	lw	a5,44(a5)
20016d9a:	fec42503          	lw	a0,-20(s0)
20016d9e:	9782                	jalr	a5
20016da0:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/metal/cpu.h:226
}
20016da2:	853e                	mv	a0,a5
20016da4:	40f2                	lw	ra,28(sp)
20016da6:	4462                	lw	s0,24(sp)
20016da8:	6105                	addi	sp,sp,32
20016daa:	8082                	ret

20016dac <metal_cpu_get>:
metal_cpu_get():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20016dac:	1101                	addi	sp,sp,-32
20016dae:	ce22                	sw	s0,28(sp)
20016db0:	1000                	addi	s0,sp,32
20016db2:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20016db6:	fec42783          	lw	a5,-20(s0)
20016dba:	eb99                	bnez	a5,20016dd0 <metal_cpu_get+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20016dbc:	800017b7          	lui	a5,0x80001
20016dc0:	fec42703          	lw	a4,-20(s0)
20016dc4:	070a                	slli	a4,a4,0x2
20016dc6:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff338>
20016dca:	97ba                	add	a5,a5,a4
20016dcc:	439c                	lw	a5,0(a5)
20016dce:	a011                	j	20016dd2 <metal_cpu_get+0x26>
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:11
    }
    return NULL;
20016dd0:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:12
}
20016dd2:	853e                	mv	a0,a5
20016dd4:	4472                	lw	s0,28(sp)
20016dd6:	6105                	addi	sp,sp,32
20016dd8:	8082                	ret

20016dda <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20016dda:	1101                	addi	sp,sp,-32
20016ddc:	ce22                	sw	s0,28(sp)
20016dde:	1000                	addi	s0,sp,32
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20016de0:	f14027f3          	csrr	a5,mhartid
20016de4:	fef42623          	sw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:18
    return mhartid;
20016de8:	fec42783          	lw	a5,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/cpu.c:20
#endif
}
20016dec:	853e                	mv	a0,a5
20016dee:	4472                	lw	s0,28(sp)
20016df0:	6105                	addi	sp,sp,32
20016df2:	8082                	ret

20016df4 <metal_shutdown>:
metal_shutdown():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20016df4:	1101                	addi	sp,sp,-32
20016df6:	ce22                	sw	s0,28(sp)
20016df8:	1000                	addi	s0,sp,32
20016dfa:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20016dfe:	0001                	nop
20016e00:	bffd                	j	20016dfe <metal_shutdown+0xa>
	...

20016e80 <__metal_vector_table>:
IRQ_0():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:76
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20016e80:	a30fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e84 <IRQ_1>:
IRQ_1():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:78
IRQ_1:
        j metal_interrupt_vector_handler
20016e84:	a2cfc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e88 <IRQ_2>:
IRQ_2():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:80
IRQ_2:
        j metal_interrupt_vector_handler
20016e88:	a28fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e8c <IRQ_3>:
IRQ_3():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:82
IRQ_3:
        j metal_software_interrupt_vector_handler
20016e8c:	a52fc06f          	j	200130de <metal_software_interrupt_vector_handler>

20016e90 <IRQ_4>:
IRQ_4():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:84
IRQ_4:
        j metal_interrupt_vector_handler
20016e90:	a20fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e94 <IRQ_5>:
IRQ_5():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:86
IRQ_5:
        j metal_interrupt_vector_handler
20016e94:	a1cfc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e98 <IRQ_6>:
IRQ_6():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:88
IRQ_6:
        j metal_interrupt_vector_handler
20016e98:	a18fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016e9c <IRQ_7>:
IRQ_7():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:90
IRQ_7:
        j metal_timer_interrupt_vector_handler
20016e9c:	b3cfc06f          	j	200131d8 <metal_timer_interrupt_vector_handler>

20016ea0 <IRQ_8>:
IRQ_8():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:92
IRQ_8:
        j metal_interrupt_vector_handler
20016ea0:	a10fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016ea4 <IRQ_9>:
IRQ_9():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:94
IRQ_9:
        j metal_interrupt_vector_handler
20016ea4:	a0cfc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016ea8 <IRQ_10>:
IRQ_10():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:96
IRQ_10:
        j metal_interrupt_vector_handler
20016ea8:	a08fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016eac <IRQ_11>:
IRQ_11():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:98
IRQ_11:
        j metal_interrupt_vector_handler
20016eac:	a04fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016eb0 <IRQ_12>:
IRQ_12():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:100
IRQ_12:
        j metal_interrupt_vector_handler
20016eb0:	a00fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016eb4 <IRQ_13>:
IRQ_13():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:102
IRQ_13:
        j metal_interrupt_vector_handler
20016eb4:	9fcfc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016eb8 <IRQ_14>:
IRQ_14():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:104
IRQ_14:
        j metal_interrupt_vector_handler
20016eb8:	9f8fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016ebc <IRQ_15>:
IRQ_15():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:106
IRQ_15:
        j metal_interrupt_vector_handler
20016ebc:	9f4fc06f          	j	200130b0 <metal_interrupt_vector_handler>

20016ec0 <IRQ_LC0>:
IRQ_LC0():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:108
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20016ec0:	e38fc06f          	j	200134f8 <metal_lc0_interrupt_vector_handler>

20016ec4 <IRQ_LC1>:
IRQ_LC1():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:110
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20016ec4:	ecafc06f          	j	2001358e <metal_lc1_interrupt_vector_handler>

20016ec8 <IRQ_LC2>:
IRQ_LC2():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:112
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20016ec8:	f5cfc06f          	j	20013624 <metal_lc2_interrupt_vector_handler>

20016ecc <IRQ_LC3>:
IRQ_LC3():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:114
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20016ecc:	feefc06f          	j	200136ba <metal_lc3_interrupt_vector_handler>

20016ed0 <IRQ_LC4>:
IRQ_LC4():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:116
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20016ed0:	881fc06f          	j	20013750 <metal_lc4_interrupt_vector_handler>

20016ed4 <IRQ_LC5>:
IRQ_LC5():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:118
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20016ed4:	913fc06f          	j	200137e6 <metal_lc5_interrupt_vector_handler>

20016ed8 <IRQ_LC6>:
IRQ_LC6():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:120
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20016ed8:	9a5fc06f          	j	2001387c <metal_lc6_interrupt_vector_handler>

20016edc <IRQ_LC7>:
IRQ_LC7():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:122
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20016edc:	a37fc06f          	j	20013912 <metal_lc7_interrupt_vector_handler>

20016ee0 <IRQ_LC8>:
IRQ_LC8():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:124
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20016ee0:	ac9fc06f          	j	200139a8 <metal_lc8_interrupt_vector_handler>

20016ee4 <IRQ_LC9>:
IRQ_LC9():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:126
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20016ee4:	b5bfc06f          	j	20013a3e <metal_lc9_interrupt_vector_handler>

20016ee8 <IRQ_LC10>:
IRQ_LC10():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:128
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20016ee8:	bedfc06f          	j	20013ad4 <metal_lc10_interrupt_vector_handler>

20016eec <IRQ_LC11>:
IRQ_LC11():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:130
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20016eec:	c7ffc06f          	j	20013b6a <metal_lc11_interrupt_vector_handler>

20016ef0 <IRQ_LC12>:
IRQ_LC12():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:132
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20016ef0:	d11fc06f          	j	20013c00 <metal_lc12_interrupt_vector_handler>

20016ef4 <IRQ_LC13>:
IRQ_LC13():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:134
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20016ef4:	da3fc06f          	j	20013c96 <metal_lc13_interrupt_vector_handler>

20016ef8 <IRQ_LC14>:
IRQ_LC14():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:136
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20016ef8:	e35fc06f          	j	20013d2c <metal_lc14_interrupt_vector_handler>

20016efc <IRQ_LC15>:
IRQ_LC15():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/vector.S:138
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20016efc:	ec7fc06f          	j	20013dc2 <metal_lc15_interrupt_vector_handler>

20016f00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
{
20016f00:	1101                	addi	sp,sp,-32
20016f02:	ce22                	sw	s0,28(sp)
20016f04:	1000                	addi	s0,sp,32
20016f06:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20016f0a:	fec42703          	lw	a4,-20(s0)
20016f0e:	800007b7          	lui	a5,0x80000
20016f12:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
20016f16:	00f71763          	bne	a4,a5,20016f24 <__metal_driver_fixed_clock_rate+0x24>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_0_CLOCK_FREQUENCY;
20016f1a:	00f427b7          	lui	a5,0xf42
20016f1e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20016f22:	a099                	j	20016f68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20016f24:	fec42703          	lw	a4,-20(s0)
20016f28:	800007b7          	lui	a5,0x80000
20016f2c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
20016f30:	00f71763          	bne	a4,a5,20016f3e <__metal_driver_fixed_clock_rate+0x3e>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_2_CLOCK_FREQUENCY;
20016f34:	044aa7b7          	lui	a5,0x44aa
20016f38:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20016f3c:	a035                	j	20016f68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20016f3e:	fec42703          	lw	a4,-20(s0)
20016f42:	800007b7          	lui	a5,0x80000
20016f46:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe908>
20016f4a:	00f71463          	bne	a4,a5,20016f52 <__metal_driver_fixed_clock_rate+0x52>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_5_CLOCK_FREQUENCY;
20016f4e:	67a1                	lui	a5,0x8
20016f50:	a821                	j	20016f68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20016f52:	fec42703          	lw	a4,-20(s0)
20016f56:	800007b7          	lui	a5,0x80000
20016f5a:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe914>
20016f5e:	00f71463          	bne	a4,a5,20016f66 <__metal_driver_fixed_clock_rate+0x66>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_6_CLOCK_FREQUENCY;
20016f62:	67a1                	lui	a5,0x8
20016f64:	a011                	j	20016f68 <__metal_driver_fixed_clock_rate+0x68>
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:222
		return 0;
20016f66:	4781                	li	a5,0
/home/gra2p/Documents/uva_courses/rp1/src/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:224
}
20016f68:	853e                	mv	a0,a5
20016f6a:	4472                	lw	s0,28(sp)
20016f6c:	6105                	addi	sp,sp,32
20016f6e:	8082                	ret

20016f70 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20016f70:	1101                	addi	sp,sp,-32
20016f72:	ce06                	sw	ra,28(sp)
20016f74:	cc22                	sw	s0,24(sp)
20016f76:	1000                	addi	s0,sp,32
20016f78:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20016f7c:	fec42503          	lw	a0,-20(s0)
20016f80:	3741                	jal	20016f00 <__metal_driver_fixed_clock_rate>
20016f82:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:14
}
20016f84:	853e                	mv	a0,a5
20016f86:	40f2                	lw	ra,28(sp)
20016f88:	4462                	lw	s0,24(sp)
20016f8a:	6105                	addi	sp,sp,32
20016f8c:	8082                	ret

20016f8e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20016f8e:	1101                	addi	sp,sp,-32
20016f90:	ce06                	sw	ra,28(sp)
20016f92:	cc22                	sw	s0,24(sp)
20016f94:	1000                	addi	s0,sp,32
20016f96:	fea42623          	sw	a0,-20(s0)
20016f9a:	feb42423          	sw	a1,-24(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20016f9e:	fec42503          	lw	a0,-20(s0)
20016fa2:	37f9                	jal	20016f70 <__metal_driver_fixed_clock_get_rate_hz>
20016fa4:	87aa                	mv	a5,a0
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/src/drivers/fixed-clock.c:19
}
20016fa6:	853e                	mv	a0,a5
20016fa8:	40f2                	lw	ra,28(sp)
20016faa:	4462                	lw	s0,24(sp)
20016fac:	6105                	addi	sp,sp,32
20016fae:	8082                	ret

20016fb0 <_exit>:
_exit():
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20016fb0:	1101                	addi	sp,sp,-32
20016fb2:	ce06                	sw	ra,28(sp)
20016fb4:	cc22                	sw	s0,24(sp)
20016fb6:	1000                	addi	s0,sp,32
20016fb8:	fea42623          	sw	a0,-20(s0)
/home/gra2p/Documents/uva_courses/rp1/src/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20016fbc:	fec42503          	lw	a0,-20(s0)
20016fc0:	e35ff0ef          	jal	ra,20016df4 <metal_shutdown>
